#ifndef __MDM_OBJECT_H__
#define __MDM_OBJECT_H__


/*
 * This file is automatically generated from the data-model spreadsheet.
 * Do not modify this file directly - You will lose all your changes the
 * next time this file is generated!
 */


/*!\file mdm_object.h 
 * \brief Automatically generated header file mdm_object.h
 */


#include "cms.h"

/*! \brief Obj struct for InternetGatewayDevice.
 *
 * MDMOID_IGD 1
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only*/
    char *    deviceSummary;	/**< DeviceSummary */
    UINT32    LANDeviceNumberOfEntries;	/**< LANDeviceNumberOfEntries */
    UINT32    WANDeviceNumberOfEntries;	/**< WANDeviceNumberOfEntries */
    SINT32    X_404A03_VlanMux8021p;	/**< X_404A03_VlanMux8021p */
    SINT32    X_404A03_VlanMuxID;	/**< X_404A03_VlanMuxID */
    char *    X_404A03_DestAddress;	/**< X_404A03_DestAddress */
} IGDObject;

/*! \brief _IGDObject is used internally to represent IGDObject */
typedef IGDObject _IGDObject;



/*! \brief Obj struct for InternetGatewayDevice.Firewall.
 *
 * MDMOID_FIREWALL 2
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    DATETIME  lastChange;	/**< LastChange */
    UBOOL8    X_404A03_StealthMode;	/**< X_404A03_StealthMode */
    UBOOL8    X_404A03_RestoreDefaultFirewall;	/**< X_404A03_RestoreDefaultFirewall */
    UBOOL8    X_404A03_TR069Changed;	/**< X_404A03_TR069Changed */
    UBOOL8    X_404A03_RuleMediumTR069Changed;	/**< X_404A03_RuleMediumTR069Changed */
    UBOOL8    X_404A03_RuleHighTR069Changed;	/**< X_404A03_RuleHighTR069Changed */
    UBOOL8    X_404A03_RuleLowTR069Changed;	/**< X_404A03_RuleLowTR069Changed */
} FirewallObject;

/*! \brief _FirewallObject is used internally to represent FirewallObject */
typedef FirewallObject _FirewallObject;



/*! \brief Obj struct for InternetGatewayDevice.Firewall.X_404A03_IPv4FirewallPriorityCfg.{i}.
 *
 * MDMOID_FIREWALL_PRIORITY_CFG 3
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    securityLevel;	/**< SecurityLevel */
    char *    addressingType;	/**< AddressingType */
    UBOOL8    X_404A03_TR069Changed;	/**< X_404A03_TR069Changed */
} FirewallPriorityCfgObject;

/*! \brief _FirewallPriorityCfgObject is used internally to represent FirewallPriorityCfgObject */
typedef FirewallPriorityCfgObject _FirewallPriorityCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.Firewall.X_404A03_IPv4FirewallPriorityRule.{i}.
 *
 * MDMOID_I_PV4_FIREWALL_PRIORITY_RULE 4
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    securityLevel;	/**< SecurityLevel */
    char *    serviceName;	/**< ServiceName */
    char *    serviceType;	/**< ServiceType */
    char *    portSetting;	/**< PortSetting */
    UINT32    trafficHighLevel;	/**< TrafficHighLevel */
    UINT32    trafficMediumLevel;	/**< TrafficMediumLevel */
    UINT32    trafficLowLevel;	/**< TrafficLowLevel */
} IPv4FirewallPriorityRuleObject;

/*! \brief _IPv4FirewallPriorityRuleObject is used internally to represent IPv4FirewallPriorityRuleObject */
typedef IPv4FirewallPriorityRuleObject _IPv4FirewallPriorityRuleObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPv6Firewall.
 *
 * MDMOID_I_PV6_FIREWALL 5
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    DATETIME  lastChange;	/**< LastChange */
    UBOOL8    stealthMode;	/**< StealthMode */
    UBOOL8    trafficIn;	/**< TrafficIn */
    UBOOL8    trafficOut;	/**< TrafficOut */
    UBOOL8    restoreDefaultFirewall;	/**< RestoreDefaultFirewall */
} IPv6FirewallObject;

/*! \brief _IPv6FirewallObject is used internally to represent IPv6FirewallObject */
typedef IPv6FirewallObject _IPv6FirewallObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_ServiceBlkRule.{i}.
 *
 * MDMOID_SERVICE_BLK_RULE 6
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    serviceName;	/**< ServiceName */
    UINT32    rangePortStart;	/**< RangePortStart */
    UINT32    rangePortEnd;	/**< RangePortEnd */
    char *    serviceType;	/**< ServiceType */
} ServiceBlkRuleObject;

/*! \brief _ServiceBlkRuleObject is used internally to represent ServiceBlkRuleObject */
typedef ServiceBlkRuleObject _ServiceBlkRuleObject;



/*! \brief Obj struct for InternetGatewayDevice.UploadDiagnostics.
 *
 * MDMOID_UPLOAD_DIAGNOSTICS 7
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    uploadURL;	/**< UploadURL */
    UINT32    DSCP;	/**< DSCP */
    UINT32    ethernetPriority;	/**< EthernetPriority */
    UINT32    testFileLength;	/**< TestFileLength */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
    char *    X_404A03_Throughput;	/**< X_404A03_Throughput */
    char *    X_404A03_UserName;	/**< X_404A03_UserName */
    char *    X_404A03_Password;	/**< X_404A03_Password */
    UINT32    X_404A03_ConcurrentSession;	/**< X_404A03_ConcurrentSession */
    char *    X_404A03_PeriodOfFullLoading;	/**< X_404A03_PeriodOfFullLoading */
    UINT32    X_404A03_TotalBytesSentUnderFullLoading;	/**< X_404A03_TotalBytesSentUnderFullLoading */
} UploadDiagnosticsObject;

/*! \brief _UploadDiagnosticsObject is used internally to represent UploadDiagnosticsObject */
typedef UploadDiagnosticsObject _UploadDiagnosticsObject;



/*! \brief Obj struct for InternetGatewayDevice.UploadDiagnostics.X_404A03_Result.{i}.
 *
 * MDMOID_UPLOAD_DIAG_RESULT 8
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
} UploadDiagResultObject;

/*! \brief _UploadDiagResultObject is used internally to represent UploadDiagResultObject */
typedef UploadDiagResultObject _UploadDiagResultObject;



/*! \brief Obj struct for InternetGatewayDevice.Capabilities.PerformanceDiagnostic.
 *
 * MDMOID_PERFORMANCE_DIAGNOSTIC 9
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    downloadTransports;	/**< DownloadTransports */
    char *    uploadTransports;	/**< UploadTransports */
} PerformanceDiagnosticObject;

/*! \brief _PerformanceDiagnosticObject is used internally to represent PerformanceDiagnosticObject */
typedef PerformanceDiagnosticObject _PerformanceDiagnosticObject;



/*! \brief Obj struct for InternetGatewayDevice.DownloadDiagnostics.
 *
 * MDMOID_DOWNLOAD_DIAGNOSTICS 10
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    downloadURL;	/**< DownloadURL */
    UINT32    DSCP;	/**< DSCP */
    UINT32    ethernetPriority;	/**< EthernetPriority */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    testBytesReceived;	/**< TestBytesReceived */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
    char *    X_404A03_Throughput;	/**< X_404A03_Throughput */
    UINT32    X_404A03_requestSource;	/**< X_404A03_requestSource */
    char *    X_404A03_downloadState;	/**< X_404A03_downloadState */
    UINT32    X_404A03_ConcurrentSession;	/**< X_404A03_ConcurrentSession */
    char *    X_404A03_PeriodOfFullLoading;	/**< X_404A03_PeriodOfFullLoading */
    UINT32    X_404A03_TotalBytesReceivedUnderFullLoading;	/**< X_404A03_TotalBytesReceivedUnderFullLoading */
} DownloadDiagnosticsObject;

/*! \brief _DownloadDiagnosticsObject is used internally to represent DownloadDiagnosticsObject */
typedef DownloadDiagnosticsObject _DownloadDiagnosticsObject;



/*! \brief Obj struct for InternetGatewayDevice.DownloadDiagnostics.X_404A03_Result.{i}.
 *
 * MDMOID_DOWNLOAD_DIAG_RESULT 11
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    testBytesReceived;	/**< TestBytesReceived */
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
} DownloadDiagResultObject;

/*! \brief _DownloadDiagResultObject is used internally to represent DownloadDiagResultObject */
typedef DownloadDiagResultObject _DownloadDiagResultObject;



/*! \brief Obj struct for InternetGatewayDevice.UDPEchoConfig.
 *
 * MDMOID_UDP_ECHO_CFG 12
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    interface;	/**< Interface */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    UINT32    UDPPort;	/**< UDPPort */
    UBOOL8    echoPlusEnabled;	/**< EchoPlusEnabled */
    UBOOL8    echoPlusSupported;	/**< EchoPlusSupported */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    packetsResponded;	/**< PacketsResponded */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    bytesResponded;	/**< BytesResponded */
    DATETIME  timeFirstPacketReceived;	/**< TimeFirstPacketReceived */
    DATETIME  timeLastPacketReceived;	/**< TimeLastPacketReceived */
} UDPEchoCfgObject;

/*! \brief _UDPEchoCfgObject is used internally to represent UDPEchoCfgObject */
typedef UDPEchoCfgObject _UDPEchoCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.
 *
 * MDMOID_IGD_DEVICE_INFO 13
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturer;	/**< Manufacturer */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    modelName;	/**< ModelName */
    char *    description;	/**< Description */
    char *    productClass;	/**< ProductClass */
    char *    serialNumber;	/**< SerialNumber */
    char *    hardwareVersion;	/**< HardwareVersion */
    char *    softwareVersion;	/**< SoftwareVersion */
    char *    modemFirmwareVersion;	/**< ModemFirmwareVersion */
    char *    enabledOptions;	/**< EnabledOptions */
    char *    additionalHardwareVersion;	/**< AdditionalHardwareVersion */
    char *    additionalSoftwareVersion;	/**< AdditionalSoftwareVersion */
    char *    specVersion;	/**< SpecVersion */
    char *    provisioningCode;	/**< ProvisioningCode */
    UINT32    upTime;	/**< UpTime */
    DATETIME  firstUseDate;	/**< FirstUseDate */
#ifdef DMP_X_404A03_BASELINE_1
    UINT32    X_404A03_NumberOfCpuThreads;	/**< X_404A03_NumberOfCpuThreads */
#endif
    char *    X_404A03_SwBuildTimestamp;	/**< X_404A03_SwBuildTimestamp */
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_DslPhyDrvVersion;	/**< X_404A03_DslPhyDrvVersion */
#endif
#ifdef DMP_X_404A03_PSTNENDPOINT_1
    char *    X_404A03_VoiceServiceVersion;	/**< X_404A03_VoiceServiceVersion */
#endif
    char *    X_404A03_NetworkMessage;	/**< X_404A03_NetworkMessage */
    char *    X_404A03_WGInstance;	/**< X_404A03_WGInstance */
    char *    X_404A03_InetLEDColor;	/**< X_404A03_InetLEDColor */
    char *    deviceLog;	/**< DeviceLog */
    UINT32    vendorConfigFileNumberOfEntries;	/**< VendorConfigFileNumberOfEntries */
    UBOOL8    X_404A03_ScheduledReboot;	/**< X_404A03_ScheduledReboot */
    DATETIME  X_404A03_RebootTime;	/**< X_404A03_RebootTime */
    UBOOL8    X_404A03_IPv6Capable;	/**< X_404A03_IPv6Capable */
} IGDDeviceInfoObject;

/*! \brief _IGDDeviceInfoObject is used internally to represent IGDDeviceInfoObject */
typedef IGDDeviceInfoObject _IGDDeviceInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.VendorConfigFile.{i}.
 *
 * MDMOID_VENDOR_CONFIG_FILE 14
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    version;	/**< Version */
    DATETIME  date;	/**< Date */
    char *    description;	/**< Description */
} VendorConfigFileObject;

/*! \brief _VendorConfigFileObject is used internally to represent VendorConfigFileObject */
typedef VendorConfigFileObject _VendorConfigFileObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.MemoryStatus.
 *
 * MDMOID_MEMORY_STATUS 15
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    total;	/**< Total */
    SINT32    used;	/**< Used */
    SINT32    free;	/**< Free */
} MemoryStatusObject;

/*! \brief _MemoryStatusObject is used internally to represent MemoryStatusObject */
typedef MemoryStatusObject _MemoryStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.ProcessStatus.
 *
 * MDMOID_PROCESS_STATUS 16
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    X_404A03_CPUUsage;	/**< X_404A03_CPUUsage */
    SINT32    X_404A03_ProcessNumberOfEntries;	/**< X_404A03_ProcessNumberOfEntries */
} ProcessStatusObject;

/*! \brief _ProcessStatusObject is used internally to represent ProcessStatusObject */
typedef ProcessStatusObject _ProcessStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.SessionLog.
 *
 * MDMOID_SESSION_LOG 17
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    X_404A03_MaxSessions;	/**< X_404A03_MaxSessions */
    SINT32    X_404A03_LANTCPSessions;	/**< X_404A03_LANTCPSessions */
    SINT32    X_404A03_LANUDPSessions;	/**< X_404A03_LANUDPSessions */
    SINT32    X_404A03_ModemSessions;	/**< X_404A03_ModemSessions */
    SINT32    X_404A03_TotalSessions;	/**< X_404A03_TotalSessions */
    char *    X_404A03_LANDeviceSessionLog;	/**< X_404A03_LANDeviceSessionLog */
} SessionLogObject;

/*! \brief _SessionLogObject is used internally to represent SessionLogObject */
typedef SessionLogObject _SessionLogObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.X_404A03_LED.
 *
 * MDMOID_LED 18
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    X_404A03_InetLEDHostname;	/**< X_404A03_InetLEDHostname */
    char *    X_404A03_PowerLEDState;	/**< X_404A03_PowerLEDState */
    char *    X_404A03_WirelessLEDState;	/**< X_404A03_WirelessLEDState */
    char *    X_404A03_DSLLEDState;	/**< X_404A03_DSLLEDState */
    char *    X_404A03_InternetLEDState;	/**< X_404A03_InternetLEDState */
    char *    X_404A03_Ethernet1LEDState;	/**< X_404A03_Ethernet1LEDState */
    char *    X_404A03_Ethernet2LEDState;	/**< X_404A03_Ethernet2LEDState */
    char *    X_404A03_Ethernet3LEDState;	/**< X_404A03_Ethernet3LEDState */
    char *    X_404A03_Ethernet4LEDState;	/**< X_404A03_Ethernet4LEDState */
} LedObject;

/*! \brief _LedObject is used internally to represent LedObject */
typedef LedObject _LedObject;



/*! \brief Obj struct for InternetGatewayDevice.CaptivePortal.
 *
 * MDMOID_CAPTIVE_PORTAL 19
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    allowedList;	/**< AllowedList */
    char *    captivePortalURL;	/**< CaptivePortalURL */
    char *    X_404A03_OneTimeRedirectURL;	/**< X_404A03_OneTimeRedirectURL */
    UBOOL8    X_404A03_OneTimeRedirectDone;	/**< X_404A03_OneTimeRedirectDone */
    char *    X_404A03_OneTimeRedirectIP;	/**< X_404A03_OneTimeRedirectIP */
    char *    X_404A03_CaptivePortalIP;	/**< X_404A03_CaptivePortalIP */
    UBOOL8    X_404A03_StateChange;	/**< X_404A03_StateChange */
    UBOOL8    X_404A03_SaveNeed;	/**< X_404A03_SaveNeed */
} CaptivePortalObject;

/*! \brief _CaptivePortalObject is used internally to represent CaptivePortalObject */
typedef CaptivePortalObject _CaptivePortalObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_BpaApiFlowHandle.{i}.
 *
 * MDMOID_BPA_API_FLOW_HANDLE 20
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    UINT32    portNumber;	/**< PortNumber */
    UINT32    flowHandle;	/**< FlowHandle */
    UBOOL8    eth10Configured;	/**< Eth10Configured */
    UBOOL8    moca10Configured;	/**< Moca10Configured */
} BpaApiFlowHandleObject;

/*! \brief _BpaApiFlowHandleObject is used internally to represent BpaApiFlowHandleObject */
typedef BpaApiFlowHandleObject _BpaApiFlowHandleObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_SyslogCfg.
 *
 * MDMOID_SYSLOG_CFG 21
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    option;	/**< Option */
    char *    localDisplayLevel;	/**< LocalDisplayLevel */
    char *    localLogLevel;	/**< LocalLogLevel */
    char *    remoteLogLevel;	/**< RemoteLogLevel */
    char *    serverIPAddress;	/**< ServerIPAddress */
    UINT32    serverPortNumber;	/**< ServerPortNumber */
    SINT32    saveInFlash;	/**< SaveInFlash */
} SyslogCfgObject;

/*! \brief _SyslogCfgObject is used internally to represent SyslogCfgObject */
typedef SyslogCfgObject _SyslogCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_LoginCfg.
 *
 * MDMOID_LOGIN_CFG 22
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    adminUserName;	/**< AdminUserName */
    char *    adminPassword;	/**< AdminPassword */
    char *    adminPasswordHash;	/**< AdminPasswordHash */
    char *    supportUserName;	/**< SupportUserName */
    char *    supportPassword;	/**< SupportPassword */
    char *    supportPasswordHash;	/**< SupportPasswordHash */
    char *    userUserName;	/**< UserUserName */
    char *    userPassword;	/**< UserPassword */
    char *    userPasswordHash;	/**< UserPasswordHash */
    UBOOL8    adminEnable;	/**< AdminEnable */
    UBOOL8    adminRemoteAccessCapable;	/**< AdminRemoteAccessCapable */
    UINT32    adminRemoteAccessCapableTimeout;	/**< AdminRemoteAccessCapableTimeout */
    UBOOL8    X_404A03_RestoreDefault;	/**< X_404A03_RestoreDefault */
} LoginCfgObject;

/*! \brief _LoginCfgObject is used internally to represent LoginCfgObject */
typedef LoginCfgObject _LoginCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.
 *
 * MDMOID_APP_CFG 23
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} AppCfgObject;

/*! \brief _AppCfgObject is used internally to represent AppCfgObject */
typedef AppCfgObject _AppCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.HttpdCfg.
 *
 * MDMOID_HTTPD_CFG 24
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
#ifdef DMP_X_404A03_QUICKSETUP_1
    UBOOL8    quickSetupEnabled;	/**< QuickSetupEnabled */
#endif
} HttpdCfgObject;

/*! \brief _HttpdCfgObject is used internally to represent HttpdCfgObject */
typedef HttpdCfgObject _HttpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.Tr69cCfg.
 *
 * MDMOID_TR69C_CFG 25
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
#ifdef DMP_X_404A03_DEBUG_1
    UBOOL8    loggingSOAP;	/**< LoggingSOAP */
#endif
#ifdef DMP_X_404A03_SECURITY_1
    UBOOL8    connectionRequestAuthentication;	/**< ConnectionRequestAuthentication */
#endif
} Tr69cCfgObject;

/*! \brief _Tr69cCfgObject is used internally to represent Tr69cCfgObject */
typedef Tr69cCfgObject _Tr69cCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.Tr64cCfg.
 *
 * MDMOID_TR64C_CFG 26
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} Tr64cCfgObject;

/*! \brief _Tr64cCfgObject is used internally to represent Tr64cCfgObject */
typedef Tr64cCfgObject _Tr64cCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.SshdCfg.
 *
 * MDMOID_SSHD_CFG 27
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SshdCfgObject;

/*! \brief _SshdCfgObject is used internally to represent SshdCfgObject */
typedef SshdCfgObject _SshdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.TelnetdCfg.
 *
 * MDMOID_TELNETD_CFG 28
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} TelnetdCfgObject;

/*! \brief _TelnetdCfgObject is used internally to represent TelnetdCfgObject */
typedef TelnetdCfgObject _TelnetdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.ConsoledCfg.
 *
 * MDMOID_CONSOLED_CFG 29
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} ConsoledCfgObject;

/*! \brief _ConsoledCfgObject is used internally to represent ConsoledCfgObject */
typedef ConsoledCfgObject _ConsoledCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.SmdCfg.
 *
 * MDMOID_SMD_CFG 30
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SmdCfgObject;

/*! \brief _SmdCfgObject is used internally to represent SmdCfgObject */
typedef SmdCfgObject _SmdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.SskCfg.
 *
 * MDMOID_SSK_CFG 31
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SskCfgObject;

/*! \brief _SskCfgObject is used internally to represent SskCfgObject */
typedef SskCfgObject _SskCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.SnmpdCfg.
 *
 * MDMOID_SNMPD_CFG 32
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SnmpdCfgObject;

/*! \brief _SnmpdCfgObject is used internally to represent SnmpdCfgObject */
typedef SnmpdCfgObject _SnmpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.FtpdCfg.
 *
 * MDMOID_FTPD_CFG 33
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} FtpdCfgObject;

/*! \brief _FtpdCfgObject is used internally to represent FtpdCfgObject */
typedef FtpdCfgObject _FtpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.TftpdCfg.
 *
 * MDMOID_TFTPD_CFG 34
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} TftpdCfgObject;

/*! \brief _TftpdCfgObject is used internally to represent TftpdCfgObject */
typedef TftpdCfgObject _TftpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.PppdCfg.
 *
 * MDMOID_PPPD_CFG 35
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} PppdCfgObject;

/*! \brief _PppdCfgObject is used internally to represent PppdCfgObject */
typedef PppdCfgObject _PppdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.IcmpCfg.
 *
 * MDMOID_ICMP_CFG 36
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
} IcmpCfgObject;

/*! \brief _IcmpCfgObject is used internally to represent IcmpCfgObject */
typedef IcmpCfgObject _IcmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.UpnpCfg.
 *
 * MDMOID_UPNP_CFG 37
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UBOOL8    NATTenable;	/**< NATTenable */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} UpnpCfgObject;

/*! \brief _UpnpCfgObject is used internally to represent UpnpCfgObject */
typedef UpnpCfgObject _UpnpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.DnsProxyCfg.
 *
 * MDMOID_DNS_PROXY_CFG 38
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    deviceDomainName;	/**< DeviceDomainName */
    char *    deviceHostName;	/**< DeviceHostName */
    UBOOL8    cacheEnbl;	/**< CacheEnbl */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} DnsProxyCfgObject;

/*! \brief _DnsProxyCfgObject is used internally to represent DnsProxyCfgObject */
typedef DnsProxyCfgObject _DnsProxyCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.DectdCfg.
 *
 * MDMOID_DECTD_CFG 39
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} DectdCfgObject;

/*! \brief _DectdCfgObject is used internally to represent DectdCfgObject */
typedef DectdCfgObject _DectdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.VectoringCfg.
 *
 * MDMOID_VECTORING_CFG 40
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} VectoringCfgObject;

/*! \brief _VectoringCfgObject is used internally to represent VectoringCfgObject */
typedef VectoringCfgObject _VectoringCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.OmcidCfg.
 *
 * MDMOID_OMCID_CFG 41
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} OmcidCfgObject;

/*! \brief _OmcidCfgObject is used internally to represent OmcidCfgObject */
typedef OmcidCfgObject _OmcidCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.LaserdCfg.
 *
 * MDMOID_LASERD_CFG 42
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} LaserdCfgObject;

/*! \brief _LaserdCfgObject is used internally to represent LaserdCfgObject */
typedef LaserdCfgObject _LaserdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.OmciPmdCfg.
 *
 * MDMOID_OMCI_PMD_CFG 43
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} OmciPmdCfgObject;

/*! \brief _OmciPmdCfgObject is used internally to represent OmciPmdCfgObject */
typedef OmciPmdCfgObject _OmciPmdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AppCfg.OsgidCfg.
 *
 * MDMOID_OSGID_CFG 44
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} OsgidCfgObject;

/*! \brief _OsgidCfgObject is used internally to represent OsgidCfgObject */
typedef OsgidCfgObject _OsgidCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_PortMappingEntry.{i}.
 *
 * MDMOID_WAN_CONN_PORTMAPPING 45
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_BASELINE_1
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
#endif
#ifdef DMP_BASELINE_1
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
#endif
#ifdef DMP_BASELINE_1
    char *    remoteHost;	/**< RemoteHost */
#endif
#ifdef DMP_BASELINE_1
    UINT32    externalPort;	/**< ExternalPort */
#endif
    UINT32    externalPortEndRange;	/**< ExternalPortEndRange */
#ifdef DMP_BASELINE_1
    UINT32    internalPort;	/**< InternalPort */
#endif
    UINT32    X_404A03_InternalPortEnd;	/**< X_404A03_InternalPortEnd */
#ifdef DMP_BASELINE_1
    char *    portMappingProtocol;	/**< PortMappingProtocol */
#endif
#ifdef DMP_BASELINE_1
    char *    internalClient;	/**< InternalClient */
#endif
#ifdef DMP_BASELINE_1
    char *    portMappingDescription;	/**< PortMappingDescription */
#endif
    UINT32    X_404A03_RuleSource;	/**< X_404A03_RuleSource */
} WanConnPortmappingObject;

/*! \brief _WanConnPortmappingObject is used internally to represent WanConnPortmappingObject */
typedef WanConnPortmappingObject _WanConnPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AccessServiceCfg.
 *
 * MDMOID_ACCESS_SERVICE_CFG 46
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
} AccessServiceCfgObject;

/*! \brief _AccessServiceCfgObject is used internally to represent AccessServiceCfgObject */
typedef AccessServiceCfgObject _AccessServiceCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AccessServiceCfg.HttpdAccessCntrlCfg.
 *
 * MDMOID_HTTPD_ACCESS_CNTRL_CFG 47
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    SINT32    port;	/**< Port */
    UINT32    idleTimeout;	/**< IdleTimeout */
} HttpdAccessCntrlCfgObject;

/*! \brief _HttpdAccessCntrlCfgObject is used internally to represent HttpdAccessCntrlCfgObject */
typedef HttpdAccessCntrlCfgObject _HttpdAccessCntrlCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AccessServiceCfg.TelnetdAccessCntrlCfg.
 *
 * MDMOID_TELNETD_ACCESS_CNTRL_CFG 48
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    SINT32    port;	/**< Port */
    UINT32    idleTimeout;	/**< IdleTimeout */
} TelnetdAccessCntrlCfgObject;

/*! \brief _TelnetdAccessCntrlCfgObject is used internally to represent TelnetdAccessCntrlCfgObject */
typedef TelnetdAccessCntrlCfgObject _TelnetdAccessCntrlCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AccessServiceCfg.HttpsdAccessCntrlCfg.
 *
 * MDMOID_HTTPSD_ACCESS_CNTRL_CFG 49
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    SINT32    port;	/**< Port */
} HttpsdAccessCntrlCfgObject;

/*! \brief _HttpsdAccessCntrlCfgObject is used internally to represent HttpsdAccessCntrlCfgObject */
typedef HttpsdAccessCntrlCfgObject _HttpsdAccessCntrlCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_EthernetSwitch.
 *
 * MDMOID_ETHERNET_SWITCH 50
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    numberOfVirtualPorts;	/**< NumberOfVirtualPorts */
    UBOOL8    enableVirtualPorts;	/**< EnableVirtualPorts */
    char *    ifName;	/**< IfName */
} EthernetSwitchObject;

/*! \brief _EthernetSwitchObject is used internally to represent EthernetSwitchObject */
typedef EthernetSwitchObject _EthernetSwitchObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AccessListCfg.
 *
 * MDMOID_ACCESS_HOST_CFG 51
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    status;	/**< Status */
} AccessHostCfgObject;

/*! \brief _AccessHostCfgObject is used internally to represent AccessHostCfgObject */
typedef AccessHostCfgObject _AccessHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AccessHostCfg.{i}.
 *
 * MDMOID_ACCESS_LIST_CFG 52
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
} AccessListCfgObject;

/*! \brief _AccessListCfgObject is used internally to represent AccessListCfgObject */
typedef AccessListCfgObject _AccessListCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_PortMappingRule.{i}.
 *
 * MDMOID_PORTMAPPINGRULE 53
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    externalPortEnd;	/**< ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
} PortmappingruleObject;

/*! \brief _PortmappingruleObject is used internally to represent PortmappingruleObject */
typedef PortmappingruleObject _PortmappingruleObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_PwrMngtCfg.
 *
 * MDMOID_PWR_MNGT 54
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    CPUSpeed;	/**< CPUSpeed */
    UBOOL8    CPUr4kWaitEn;	/**< CPUr4kWaitEn */
    UBOOL8    DRAMSelfRefreshEn;	/**< DRAMSelfRefreshEn */
    UBOOL8    DRAMAutoPDEn;	/**< DRAMAutoPDEn */
    UBOOL8    ethAutoPwrDwnEn;	/**< EthAutoPwrDwnEn */
    SINT32    ethRegisteredCount;	/**< EthRegisteredCount */
    SINT32    ethIfConnectedCount;	/**< EthIfConnectedCount */
    SINT32    USBIfRegisteredCount;	/**< USBIfRegisteredCount */
    SINT32    USBIfConnectedCount;	/**< USBIfConnectedCount */
    UBOOL8    avsEn;	/**< AvsEn */
    UBOOL8    VCTEn;	/**< VCTEn */
    UBOOL8    wifiEn;	/**< WifiEn */
    UBOOL8    ledEn;	/**< LedEn */
    UBOOL8    USBHostEn;	/**< USBHostEn */
    UBOOL8    USBDevEn;	/**< USBDevEn */
    UBOOL8    DSLEn;	/**< DSLEn */
    UBOOL8    moCAEn;	/**< MoCAEn */
    UBOOL8    GPONEn;	/**< GPONEn */
    UBOOL8    bcm6358MAC0En;	/**< bcm6358MAC0En */
    UBOOL8    bcm6358MAC1En;	/**< bcm6358MAC1En */
    UBOOL8    bcm6358EPHYEn;	/**< bcm6358EPHYEn */
    UBOOL8    bcm5325ePHY0En;	/**< bcm5325ePHY0En */
    UBOOL8    bcm5325ePHY1En;	/**< bcm5325ePHY1En */
    UBOOL8    bcm5325ePHY2En;	/**< bcm5325ePHY2En */
    UBOOL8    bcm5325ePHY3En;	/**< bcm5325ePHY3En */
    UBOOL8    bcm5325ePHY45En;	/**< bcm5325ePHY45En */
    UBOOL8    bcm6368ePHY0En;	/**< bcm6368ePHY0En */
    UBOOL8    bcm6368ePHY1En;	/**< bcm6368ePHY1En */
    UBOOL8    bcm6368ePHY2En;	/**< bcm6368ePHY2En */
    UBOOL8    bcm6368ePHY3En;	/**< bcm6368ePHY3En */
    UBOOL8    bcm6816ePHY0En;	/**< bcm6816ePHY0En */
    UBOOL8    bcm6816ePHY1En;	/**< bcm6816ePHY1En */
    UBOOL8    bcm6816ePHY2En;	/**< bcm6816ePHY2En */
    UBOOL8    bcm6816ePHY3En;	/**< bcm6816ePHY3En */
} PwrMngtObject;

/*! \brief _PwrMngtObject is used internally to represent PwrMngtObject */
typedef PwrMngtObject _PwrMngtObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_StandbyCfg.
 *
 * MDMOID_STANDBY_CFG 55
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    standbyEnable;	/**< StandbyEnable */
    char *    standbyStatusString;	/**< StandbyStatusString */
    SINT32    standbyHour;	/**< StandbyHour */
    SINT32    standbyMinutes;	/**< StandbyMinutes */
    SINT32    wakeupHour;	/**< WakeupHour */
    SINT32    wakeupMinutes;	/**< WakeupMinutes */
} StandbyCfgObject;

/*! \brief _StandbyCfgObject is used internally to represent StandbyCfgObject */
typedef StandbyCfgObject _StandbyCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceConfig.
 *
 * MDMOID_DEVICE_CONFIG 56
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    persistentData;	/**< PersistentData */
    char *    configFile;	/**< ConfigFile */
} DeviceConfigObject;

/*! \brief _DeviceConfigObject is used internally to represent DeviceConfigObject */
typedef DeviceConfigObject _DeviceConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.
 *
 * MDMOID_MANAGEMENT_SERVER 57
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    URL;	/**< URL */
    char *    lastConnectedURL;	/**< LastConnectedURL */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    UBOOL8    periodicInformEnable;	/**< PeriodicInformEnable */
    UINT32    periodicInformInterval;	/**< PeriodicInformInterval */
    DATETIME  periodicInformTime;	/**< PeriodicInformTime */
    DATETIME  X_404A03_PeriodicInformTime;	/**< X_404A03_PeriodicInformTime */
    DATETIME  X_404A03_LastPeriodicInformTime;	/**< X_404A03_LastPeriodicInformTime */
    SINT32    X_404A03_AuthFails;	/**< X_404A03_AuthFails */
    SINT32    X_404A03_BootStrapState;	/**< X_404A03_BootStrapState */
    char *    parameterKey;	/**< ParameterKey */
    char *    X_404A03_BoundIfName;	/**< X_404A03_BoundIfName */
    char *    connectionRequestURL;	/**< ConnectionRequestURL */
    char *    connectionRequestUsername;	/**< ConnectionRequestUsername */
    char *    connectionRequestPassword;	/**< ConnectionRequestPassword */
    UBOOL8    upgradesManaged;	/**< UpgradesManaged */
    char *    kickURL;	/**< KickURL */
    UINT32    CWMPRetryMinimumWaitInterval;	/**< CWMPRetryMinimumWaitInterval */
    UINT32    CWMPRetryIntervalMultiplier;	/**< CWMPRetryIntervalMultiplier */
#ifdef DMP_DEVICEASSOCIATION_1
    UINT32    manageableDeviceNumberOfEntries;	/**< ManageableDeviceNumberOfEntries */
#endif
    UINT32    manageableDeviceNotificationLimit;	/**< ManageableDeviceNotificationLimit */
} ManagementServerObject;

/*! \brief _ManagementServerObject is used internally to represent ManagementServerObject */
typedef ManagementServerObject _ManagementServerObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.ManageableDevice.{i}.
 *
 * MDMOID_MANAGEABLE_DEVICE 58
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    serialNumber;	/**< SerialNumber */
    char *    productClass;	/**< ProductClass */
} ManageableDeviceObject;

/*! \brief _ManageableDeviceObject is used internally to represent ManageableDeviceObject */
typedef ManageableDeviceObject _ManageableDeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.Time.
 *
 * MDMOID_TIME_SERVER_CFG 59
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    NTPServer1;	/**< NTPServer1 */
    char *    NTPServer2;	/**< NTPServer2 */
    char *    NTPServer3;	/**< NTPServer3 */
    char *    NTPServer4;	/**< NTPServer4 */
    char *    NTPServer5;	/**< NTPServer5 */
    DATETIME  currentLocalTime;	/**< CurrentLocalTime */
    char *    localTimeZone;	/**< LocalTimeZone */
    char *    localTimeZoneName;	/**< LocalTimeZoneName */
    UBOOL8    daylightSavingsUsed;	/**< DaylightSavingsUsed */
    DATETIME  daylightSavingsStart;	/**< DaylightSavingsStart */
    DATETIME  daylightSavingsEnd;	/**< DaylightSavingsEnd */
} TimeServerCfgObject;

/*! \brief _TimeServerCfgObject is used internally to represent TimeServerCfgObject */
typedef TimeServerCfgObject _TimeServerCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.User.{i}.
 *
 * MDMOID_USER 60
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    X_404A03_Name;	/**< X_404A03_Name */
    UBOOL8    enable;	/**< Enable */
    UBOOL8    remoteAccessCapable;	/**< RemoteAccessCapable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    UINT32    X_404A03_RemoteAccessCapableTimeout;	/**< X_404A03_RemoteAccessCapableTimeout */
    SINT32    X_404A03_SetDefaultPassword;	/**< X_404A03_SetDefaultPassword */
} UserObject;

/*! \brief _UserObject is used internally to represent UserObject */
typedef UserObject _UserObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_UserDefaultConfig.
 *
 * MDMOID_USER_DEFAULT_CONFIG 61
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    user2DefaultPassword;	/**< User2DefaultPassword */
} UserDefaultConfigObject;

/*! \brief _UserDefaultConfigObject is used internally to represent UserDefaultConfigObject */
typedef UserDefaultConfigObject _UserDefaultConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.UserInterface.
 *
 * MDMOID_USER_INTERFACE_CFG 62
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    passwordRequired;	/**< PasswordRequired */
    UBOOL8    passwordUserSelectable;	/**< PasswordUserSelectable */
    UBOOL8    upgradeAvailable;	/**< UpgradeAvailable */
    DATETIME  warrantyDate;	/**< WarrantyDate */
    char *    ISPName;	/**< ISPName */
    char *    ISPHelpDesk;	/**< ISPHelpDesk */
    char *    ISPHomePage;	/**< ISPHomePage */
    char *    ISPHelpPage;	/**< ISPHelpPage */
    BASE64    ISPLogo;	/**< ISPLogo */
    UINT32    ISPLogoSize;	/**< ISPLogoSize */
    char *    ISPMailServer;	/**< ISPMailServer */
    char *    ISPNewsServer;	/**< ISPNewsServer */
    char *    textColor;	/**< TextColor */
    char *    backgroundColor;	/**< BackgroundColor */
    char *    buttonColor;	/**< ButtonColor */
    char *    buttonTextColor;	/**< ButtonTextColor */
    char *    autoUpdateServer;	/**< AutoUpdateServer */
    char *    userUpdateServer;	/**< UserUpdateServer */
    char *    exampleLogin;	/**< ExampleLogin */
    char *    examplePassword;	/**< ExamplePassword */
} UserInterfaceCfgObject;

/*! \brief _UserInterfaceCfgObject is used internally to represent UserInterfaceCfgObject */
typedef UserInterfaceCfgObject _UserInterfaceCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.UserInterface.RemoteAccess.
 *
 * MDMOID_REMOTE_ACCESS_CFG 63
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    port;	/**< Port */
    char *    supportedProtocols;	/**< SupportedProtocols */
    char *    protocol;	/**< Protocol */
} RemoteAccessCfgObject;

/*! \brief _RemoteAccessCfgObject is used internally to represent RemoteAccessCfgObject */
typedef RemoteAccessCfgObject _RemoteAccessCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.UserInterface.RemoteAccess.X_404A03_Telnet.
 *
 * MDMOID_TELNET 64
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    UINT32    idleDisconnectTime;	/**< IdleDisconnectTime */
    SINT32    port;	/**< Port */
} TelnetObject;

/*! \brief _TelnetObject is used internally to represent TelnetObject */
typedef TelnetObject _TelnetObject;



/*! \brief Obj struct for InternetGatewayDevice.UserInterface.RemoteAccess.X_404A03_SSH.
 *
 * MDMOID_SSH 65
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    UINT32    idleDisconnectTime;	/**< IdleDisconnectTime */
    SINT32    port;	/**< Port */
} SSHObject;

/*! \brief _SSHObject is used internally to represent SSHObject */
typedef SSHObject _SSHObject;



/*! \brief Obj struct for InternetGatewayDevice.UserInterface.RemoteAccess.X_404A03_SupportConsole.
 *
 * MDMOID_SUPPORT_CONSOLE 66
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
} SupportConsoleObject;

/*! \brief _SupportConsoleObject is used internally to represent SupportConsoleObject */
typedef SupportConsoleObject _SupportConsoleObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.
 *
 * MDMOID_L2_BRIDGING 67
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxBridgeEntries;	/**< MaxBridgeEntries */
    UINT32    maxFilterEntries;	/**< MaxFilterEntries */
    UINT32    maxMarkingEntries;	/**< MaxMarkingEntries */
    UINT32    bridgeNumberOfEntries;	/**< BridgeNumberOfEntries */
    UINT32    filterNumberOfEntries;	/**< FilterNumberOfEntries */
    UINT32    markingNumberOfEntries;	/**< MarkingNumberOfEntries */
    UINT32    availableInterfaceNumberOfEntries;	/**< AvailableInterfaceNumberOfEntries */
} L2BridgingObject;

/*! \brief _L2BridgingObject is used internally to represent L2BridgingObject */
typedef L2BridgingObject _L2BridgingObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.Bridge.{i}.
 *
 * MDMOID_L2_BRIDGING_ENTRY 68
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bridgeKey;	/**< BridgeKey */
    UBOOL8    bridgeEnable;	/**< BridgeEnable */
    char *    bridgeStatus;	/**< BridgeStatus */
    char *    bridgeName;	/**< BridgeName */
    UINT32    VLANID;	/**< VLANID */
} L2BridgingEntryObject;

/*! \brief _L2BridgingEntryObject is used internally to represent L2BridgingEntryObject */
typedef L2BridgingEntryObject _L2BridgingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.Filter.{i}.
 *
 * MDMOID_L2_BRIDGING_FILTER 69
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    X_404A03_filterType;	/**< X_404A03_filterType */
    UINT32    filterKey;	/**< FilterKey */
    UBOOL8    filterEnable;	/**< FilterEnable */
    char *    filterStatus;	/**< FilterStatus */
    SINT32    filterBridgeReference;	/**< FilterBridgeReference */
    char *    filterInterface;	/**< FilterInterface */
    SINT32    X_404A03_VLANIDFilter;	/**< X_404A03_VLANIDFilter */
    char *    sourceMACAddressFilterList;	/**< SourceMACAddressFilterList */
    UBOOL8    sourceMACAddressFilterExclude;	/**< SourceMACAddressFilterExclude */
    char *    sourceMACFromVendorClassIDFilter;	/**< SourceMACFromVendorClassIDFilter */
    UBOOL8    sourceMACFromVendorClassIDFilterExclude;	/**< SourceMACFromVendorClassIDFilterExclude */
    char *    sourceMACFromClientIDFilter;	/**< SourceMACFromClientIDFilter */
    UBOOL8    sourceMACFromClientIDFilterExclude;	/**< SourceMACFromClientIDFilterExclude */
    char *    X_404A03_srcMACFromVSIFilter;	/**< X_404A03_srcMACFromVSIFilter */
    UBOOL8    X_404A03_srcMACFromVSIFilterExclude;	/**< X_404A03_srcMACFromVSIFilterExclude */
} L2BridgingFilterObject;

/*! \brief _L2BridgingFilterObject is used internally to represent L2BridgingFilterObject */
typedef L2BridgingFilterObject _L2BridgingFilterObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.AvailableInterface.{i}.
 *
 * MDMOID_L2_BRIDGING_INTF 70
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    availableInterfaceKey;	/**< AvailableInterfaceKey */
    char *    interfaceType;	/**< InterfaceType */
    char *    interfaceReference;	/**< InterfaceReference */
} L2BridgingIntfObject;

/*! \brief _L2BridgingIntfObject is used internally to represent L2BridgingIntfObject */
typedef L2BridgingIntfObject _L2BridgingIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.
 *
 * MDMOID_Q_MGMT 71
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    X_404A03_Direction;	/**< X_404A03_Direction */
    UINT32    maxQueues;	/**< MaxQueues */
    UINT32    maxClassificationEntries;	/**< MaxClassificationEntries */
    UINT32    classificationNumberOfEntries;	/**< ClassificationNumberOfEntries */
    UINT32    maxAppEntries;	/**< MaxAppEntries */
    UINT32    appNumberOfEntries;	/**< AppNumberOfEntries */
    UINT32    maxFlowEntries;	/**< MaxFlowEntries */
    UINT32    flowNumberOfEntries;	/**< FlowNumberOfEntries */
    UINT32    maxPolicerEntries;	/**< MaxPolicerEntries */
    UINT32    policerNumberOfEntries;	/**< PolicerNumberOfEntries */
    UINT32    maxQueueEntries;	/**< MaxQueueEntries */
    UINT32    queueNumberOfEntries;	/**< QueueNumberOfEntries */
    UINT32    defaultForwardingPolicy;	/**< DefaultForwardingPolicy */
    SINT32    defaultPolicer;	/**< DefaultPolicer */
    UINT32    defaultQueue;	/**< DefaultQueue */
    SINT32    defaultDSCPMark;	/**< DefaultDSCPMark */
    SINT32    defaultEthernetPriorityMark;	/**< DefaultEthernetPriorityMark */
    char *    availableAppList;	/**< AvailableAppList */
} QMgmtObject;

/*! \brief _QMgmtObject is used internally to represent QMgmtObject */
typedef QMgmtObject _QMgmtObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Classification.{i}.
 *
 * MDMOID_Q_MGMT_CLASSIFICATION 72
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    classificationKey;	/**< ClassificationKey */
    UBOOL8    classificationEnable;	/**< ClassificationEnable */
    char *    classificationStatus;	/**< ClassificationStatus */
    UINT32    classificationOrder;	/**< ClassificationOrder */
    char *    classInterface;	/**< ClassInterface */
    char *    destIP;	/**< DestIP */
    char *    destMask;	/**< DestMask */
    UBOOL8    destIPExclude;	/**< DestIPExclude */
    char *    sourceIP;	/**< SourceIP */
    char *    sourceMask;	/**< SourceMask */
    UBOOL8    sourceIPExclude;	/**< SourceIPExclude */
    SINT32    protocol;	/**< Protocol */
    UBOOL8    protocolExclude;	/**< ProtocolExclude */
    SINT32    destPort;	/**< DestPort */
    SINT32    destPortRangeMax;	/**< DestPortRangeMax */
    UBOOL8    destPortExclude;	/**< DestPortExclude */
    SINT32    sourcePort;	/**< SourcePort */
    SINT32    sourcePortRangeMax;	/**< SourcePortRangeMax */
    UBOOL8    sourcePortExclude;	/**< SourcePortExclude */
    char *    sourceMACAddress;	/**< SourceMACAddress */
    char *    sourceMACMask;	/**< SourceMACMask */
    UBOOL8    sourceMACExclude;	/**< SourceMACExclude */
    char *    destMACAddress;	/**< DestMACAddress */
    char *    destMACMask;	/**< DestMACMask */
    UBOOL8    destMACExclude;	/**< DestMACExclude */
    SINT32    ethertype;	/**< Ethertype */
    UBOOL8    ethertypeExclude;	/**< EthertypeExclude */
    char *    sourceVendorClassID;	/**< SourceVendorClassID */
    UBOOL8    sourceVendorClassIDExclude;	/**< SourceVendorClassIDExclude */
    char *    sourceUserClassID;	/**< SourceUserClassID */
    UBOOL8    sourceUserClassIDExclude;	/**< SourceUserClassIDExclude */
    SINT32    DSCPCheck;	/**< DSCPCheck */
    UBOOL8    DSCPExclude;	/**< DSCPExclude */
    SINT32    DSCPMark;	/**< DSCPMark */
    SINT32    ethernetPriorityCheck;	/**< EthernetPriorityCheck */
    UBOOL8    ethernetPriorityExclude;	/**< EthernetPriorityExclude */
    SINT32    ethernetPriorityMark;	/**< EthernetPriorityMark */
    SINT32    VLANIDCheck;	/**< VLANIDCheck */
    UBOOL8    VLANIDExclude;	/**< VLANIDExclude */
    UINT32    forwardingPolicy;	/**< ForwardingPolicy */
    SINT32    classPolicer;	/**< ClassPolicer */
    SINT32    classQueue;	/**< ClassQueue */
    SINT32    classApp;	/**< ClassApp */
    SINT32    X_404A03_ClassRate;	/**< X_404A03_ClassRate */
    char *    X_404A03_ClassName;	/**< X_404A03_ClassName */
    SINT32    X_404A03_VLANIDTag;	/**< X_404A03_VLANIDTag */
    char *    X_404A03_egressInterface;	/**< X_404A03_egressInterface */
    UINT32    X_404A03_ClassKey;	/**< X_404A03_ClassKey */
} QMgmtClassificationObject;

/*! \brief _QMgmtClassificationObject is used internally to represent QMgmtClassificationObject */
typedef QMgmtClassificationObject _QMgmtClassificationObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Policer.{i}.
 *
 * MDMOID_Q_MGMT_POLICER 73
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    policerKey;	/**< PolicerKey */
    UBOOL8    policerEnable;	/**< PolicerEnable */
    char *    policerStatus;	/**< PolicerStatus */
    UINT32    committedRate;	/**< CommittedRate */
    UINT32    committedBurstSize;	/**< CommittedBurstSize */
    UINT32    excessBurstSize;	/**< ExcessBurstSize */
    UINT32    peakRate;	/**< PeakRate */
    UINT32    peakBurstSize;	/**< PeakBurstSize */
    char *    meterType;	/**< MeterType */
    char *    possibleMeterTypes;	/**< PossibleMeterTypes */
    char *    conformingAction;	/**< ConformingAction */
    char *    partialConformingAction;	/**< PartialConformingAction */
    char *    nonConformingAction;	/**< NonConformingAction */
    UINT32    countedPackets;	/**< CountedPackets */
    UINT32    countedBytes;	/**< CountedBytes */
    char *    X_404A03_PolicerName;	/**< X_404A03_PolicerName */
} QMgmtPolicerObject;

/*! \brief _QMgmtPolicerObject is used internally to represent QMgmtPolicerObject */
typedef QMgmtPolicerObject _QMgmtPolicerObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Queue.{i}.
 *
 * MDMOID_Q_MGMT_QUEUE 74
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    queueKey;	/**< QueueKey */
    UBOOL8    queueEnable;	/**< QueueEnable */
    char *    queueStatus;	/**< QueueStatus */
    char *    queueInterface;	/**< QueueInterface */
    UINT32    queueWeight;	/**< QueueWeight */
    UINT32    queuePrecedence;	/**< QueuePrecedence */
    char *    schedulerAlgorithm;	/**< SchedulerAlgorithm */
    SINT32    shapingRate;	/**< ShapingRate */
    UINT32    shapingBurstSize;	/**< ShapingBurstSize */
    char *    X_404A03_QueueName;	/**< X_404A03_QueueName */
    SINT32    X_404A03_DslLatency;	/**< X_404A03_DslLatency */
    SINT32    X_404A03_PtmPriority;	/**< X_404A03_PtmPriority */
    UINT32    X_404A03_QueueId;	/**< X_404A03_QueueId */
} QMgmtQueueObject;

/*! \brief _QMgmtQueueObject is used internally to represent QMgmtQueueObject */
typedef QMgmtQueueObject _QMgmtQueueObject;



/*! \brief Obj struct for InternetGatewayDevice.LANConfigSecurity.
 *
 * MDMOID_LANCONFIG_SECURITY 75
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    configPassword;	/**< ConfigPassword */
} LanconfigSecurityObject;

/*! \brief _LanconfigSecurityObject is used internally to represent LanconfigSecurityObject */
typedef LanconfigSecurityObject _LanconfigSecurityObject;



/*! \brief Obj struct for InternetGatewayDevice.IPPingDiagnostics.
 *
 * MDMOID_IP_PING_DIAG 76
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    host;	/**< Host */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    dataBlockSize;	/**< DataBlockSize */
    UINT32    DSCP;	/**< DSCP */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} IPPingDiagObject;

/*! \brief _IPPingDiagObject is used internally to represent IPPingDiagObject */
typedef IPPingDiagObject _IPPingDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.TraceRouteDiagnostics.
 *
 * MDMOID_TRACE_ROUTE_DIAG 77
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    host;	/**< Host */
    UINT32    numberOfTries;	/**< NumberOfTries */
    UINT32    timeout;	/**< Timeout */
    UINT32    dataBlockSize;	/**< DataBlockSize */
    UINT32    DSCP;	/**< DSCP */
    UINT32    maxHopCount;	/**< MaxHopCount */
    UINT32    responseTime;	/**< ResponseTime */
    UINT32    routeHopsNumberOfEntries;	/**< RouteHopsNumberOfEntries */
} TraceRouteDiagObject;

/*! \brief _TraceRouteDiagObject is used internally to represent TraceRouteDiagObject */
typedef TraceRouteDiagObject _TraceRouteDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.{i}.
 *
 * MDMOID_TRACE_ROUTE_HOPS 78
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    hopHost;	/**< HopHost */
    char *    hopHostAddress;	/**< HopHostAddress */
    UINT32    hopErrorCode;	/**< HopErrorCode */
    char *    hopRTTimes;	/**< HopRTTimes */
} TraceRouteHopsObject;

/*! \brief _TraceRouteHopsObject is used internally to represent TraceRouteHopsObject */
typedef TraceRouteHopsObject _TraceRouteHopsObject;



/*! \brief Obj struct for InternetGatewayDevice.EponSoftwareImage.{i}.
 *
 * MDMOID_EPON_SOFTWARE_IMAGE 79
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  version;	/**< Version */
    UBOOL8    isCommitted;	/**< IsCommitted */
    UBOOL8    isActive;	/**< IsActive */
    UBOOL8    isValid;	/**< IsValid */
} EponSoftwareImageObject;

/*! \brief _EponSoftwareImageObject is used internally to represent EponSoftwareImageObject */
typedef EponSoftwareImageObject _EponSoftwareImageObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.
 *
 * MDMOID_LAN_DEV 80
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    LANEthernetInterfaceNumberOfEntries;	/**< LANEthernetInterfaceNumberOfEntries */
    UINT32    LANUSBInterfaceNumberOfEntries;	/**< LANUSBInterfaceNumberOfEntries */
    UINT32    LANWLANConfigurationNumberOfEntries;	/**< LANWLANConfigurationNumberOfEntries */
#ifdef DMP_X_404A03_BASELINE_1
    UINT32    X_404A03_LANMocaInterfaceNumberOfEntries;	/**< X_404A03_LANMocaInterfaceNumberOfEntries */
#endif
#ifdef DMP_X_404A03_EPON_1
    UINT32    X_404A03_LANEponInterfaceNumberOfEntries;	/**< X_404A03_LANEponInterfaceNumberOfEntries */
#endif
} LanDevObject;

/*! \brief _LanDevObject is used internally to represent LanDevObject */
typedef LanDevObject _LanDevObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IgmpSnoopingConfig.
 *
 * MDMOID_IGMP_SNOOPING_CFG 81
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mode;	/**< Mode */
} IgmpSnoopingCfgObject;

/*! \brief _IgmpSnoopingCfgObject is used internally to represent IgmpSnoopingCfgObject */
typedef IgmpSnoopingCfgObject _IgmpSnoopingCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.
 *
 * MDMOID_LAN_HOST_CFG 82
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    DHCPServerConfigurable;	/**< DHCPServerConfigurable */
    UBOOL8    X_404A03_UnnumberedMode;	/**< X_404A03_UnnumberedMode */
    char *    X_404A03_PublicMinAddress;	/**< X_404A03_PublicMinAddress */
    char *    X_404A03_PublicMaxAddress;	/**< X_404A03_PublicMaxAddress */
    UBOOL8    DHCPServerEnable;	/**< DHCPServerEnable */
    UBOOL8    DHCPRelay;	/**< DHCPRelay */
    char *    X_404A03_DhcpRelayServer;	/**< X_404A03_DhcpRelayServer */
    char *    minAddress;	/**< MinAddress */
    char *    maxAddress;	/**< MaxAddress */
    char *    reservedAddresses;	/**< ReservedAddresses */
    char *    subnetMask;	/**< SubnetMask */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    IPRouters;	/**< IPRouters */
    SINT32    DHCPLeaseTime;	/**< DHCPLeaseTime */
    UINT32    IPInterfaceNumberOfEntries;	/**< IPInterfaceNumberOfEntries */
    UBOOL8    X_404A03_EnableDhcpReservation;	/**< X_404A03_EnableDhcpReservation */
    UBOOL8    X_404A03_DNSProxyEnabled;	/**< X_404A03_DNSProxyEnabled */
} LanHostCfgObject;

/*! \brief _LanHostCfgObject is used internally to represent LanHostCfgObject */
typedef LanHostCfgObject _LanHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPStaticAddress.{i}.
 *
 * MDMOID_DHCP_STATIC_ADDR 83
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    chaddr;	/**< Chaddr */
    char *    yiaddr;	/**< Yiaddr */
} DhcpStaticAddrObject;

/*! \brief _DhcpStaticAddrObject is used internally to represent DhcpStaticAddrObject */
typedef DhcpStaticAddrObject _DhcpStaticAddrObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.
 *
 * MDMOID_LAN_IP_INTF 84
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    IPInterfaceIPAddress;	/**< IPInterfaceIPAddress */
    char *    IPInterfaceSubnetMask;	/**< IPInterfaceSubnetMask */
    char *    IPInterfaceAddressingType;	/**< IPInterfaceAddressingType */
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
#ifdef DMP_X_404A03_SECURITY_1
    UBOOL8    X_404A03_FirewallEnabled;	/**< X_404A03_FirewallEnabled */
#endif
#ifdef DMP_X_404A03_BASELINE_1
    char *    X_404A03_DhcpConnectionStatus;	/**< X_404A03_DhcpConnectionStatus */
#endif
#ifdef DMP_X_404A03_BASELINE_1
    char *    X_404A03_DhcpIpAddress;	/**< X_404A03_DhcpIpAddress */
#endif
#ifdef DMP_X_404A03_BASELINE_1
    char *    X_404A03_DhcpSubnetMask;	/**< X_404A03_DhcpSubnetMask */
#endif
#ifdef DMP_X_404A03_BASELINE_1
    char *    X_404A03_DhcpDefaultGateway;	/**< X_404A03_DhcpDefaultGateway */
#endif
#ifdef DMP_X_404A03_BASELINE_1
    UINT32    X_404A03_DhcpcPid;	/**< X_404A03_DhcpcPid */
#endif
} LanIpIntfObject;

/*! \brief _LanIpIntfObject is used internally to represent LanIpIntfObject */
typedef LanIpIntfObject _LanIpIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_404A03_IPv6LanIntfAddress.
 *
 * MDMOID_I_PV6_LAN_INTF_ADDR 85
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    uniqueLocalAddress;	/**< UniqueLocalAddress */
} IPv6LanIntfAddrObject;

/*! \brief _IPv6LanIntfAddrObject is used internally to represent IPv6LanIntfAddrObject */
typedef IPv6LanIntfAddrObject _IPv6LanIntfAddrObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_404A03_IPv6LanIntfAddress.DelegatedAddress.{i}.
 *
 * MDMOID_DELEGATED_ADDRESS 86
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    mode;	/**< Mode */
    char *    delegatedConnection;	/**< DelegatedConnection */
    char *    IPv6InterfaceAddress;	/**< IPv6InterfaceAddress */
} DelegatedAddressObject;

/*! \brief _DelegatedAddressObject is used internally to represent DelegatedAddressObject */
typedef DelegatedAddressObject _DelegatedAddressObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_404A03_FirewallException.{i}.
 *
 * MDMOID_LAN_IP_INTF_FIREWALL_EXCEPTION 87
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} LanIpIntfFirewallExceptionObject;

/*! \brief _LanIpIntfFirewallExceptionObject is used internally to represent LanIpIntfFirewallExceptionObject */
typedef LanIpIntfFirewallExceptionObject _LanIpIntfFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_404A03_IpFilterCfg.{i}.
 *
 * MDMOID_IP_FILTER_CFG 88
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} IpFilterCfgObject;

/*! \brief _IpFilterCfgObject is used internally to represent IpFilterCfgObject */
typedef IpFilterCfgObject _IpFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_404A03_ServiceBlkCfg.{i}.
 *
 * MDMOID_SERVICE_BLK_CFG 89
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    UINT32    serviceType;	/**< ServiceType */
} ServiceBlkCfgObject;

/*! \brief _ServiceBlkCfgObject is used internally to represent ServiceBlkCfgObject */
typedef ServiceBlkCfgObject _ServiceBlkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.
 *
 * MDMOID_DHCP_CONDITIONAL_SERVING 90
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    sourceInterface;	/**< SourceInterface */
    char *    X_404A03_SourceInterface;	/**< X_404A03_SourceInterface */
    char *    vendorClassID;	/**< VendorClassID */
    char *    chaddr;	/**< Chaddr */
    char *    chaddrMask;	/**< ChaddrMask */
    char *    minAddress;	/**< MinAddress */
    char *    maxAddress;	/**< MaxAddress */
    char *    reservedAddresses;	/**< ReservedAddresses */
    char *    subnetMask;	/**< SubnetMask */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    IPRouters;	/**< IPRouters */
    SINT32    DHCPLeaseTime;	/**< DHCPLeaseTime */
} DHCPConditionalServingObject;

/*! \brief _DHCPConditionalServingObject is used internally to represent DHCPConditionalServingObject */
typedef DHCPConditionalServingObject _DHCPConditionalServingObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.DHCPOption.{i}.
 *
 * MDMOID_DHCP_COND_SERV_OPTION 91
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    tag;	/**< Tag */
    BASE64    value;	/**< Value */
} DhcpCondServOptionObject;

/*! \brief _DhcpCondServOptionObject is used internally to represent DhcpCondServOptionObject */
typedef DhcpCondServOptionObject _DhcpCondServOptionObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IPv6LANHostConfigManagement.
 *
 * MDMOID_I_PV6_LAN_HOST_CFG 92
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    DHCPv6ServerEnable;	/**< DHCPv6ServerEnable */
    UBOOL8    statefulDHCPv6Server;	/**< StatefulDHCPv6Server */
    char *    minInterfaceID;	/**< MinInterfaceID */
    char *    maxInterfaceID;	/**< MaxInterfaceID */
    SINT32    DHCPv6LeaseTime;	/**< DHCPv6LeaseTime */
    char *    IPv6DomainName;	/**< IPv6DomainName */
    char *    IPv6DNSConfigType;	/**< IPv6DNSConfigType */
    char *    IPv6DNSServers;	/**< IPv6DNSServers */
    char *    IPv6DNSWANConnection;	/**< IPv6DNSWANConnection */
    UINT32    IPv6InterfaceNumberOfEntries;	/**< IPv6InterfaceNumberOfEntries */
    SINT32    DNSPref;	/**< DNSPref */
    UBOOL8    RADVDEnabled;	/**< RADVDEnabled */
    char *    IPv6PDWANInterface;	/**< IPv6PDWANInterface */
    UBOOL8    IPv6FeatureEnable;	/**< IPv6FeatureEnable */
    char *    IPv6LanMode;	/**< IPv6LanMode */
    UBOOL8    enable;	/**< Enable */
    char *    ULAPrefix;	/**< ULAPrefix */
    char *    ULAPrefixLength;	/**< ULAPrefixLength */
    char *    ULAAddress;	/**< ULAAddress */
    char *    IPv6PrefixID;	/**< IPv6PrefixID */
    char *    addressingType;	/**< AddressingType */
    SINT32    prefixLength;	/**< PrefixLength */
    SINT32    subnetID;	/**< SubnetID */
    SINT32    RALifetime;	/**< RALifetime */
    SINT32    leaseTime;	/**< LeaseTime */
    char *    DNSServers;	/**< DNSServers */
} IPv6LanHostCfgObject;

/*! \brief _IPv6LanHostCfgObject is used internally to represent IPv6LanHostCfgObject */
typedef IPv6LanHostCfgObject _IPv6LanHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IPv6LANHostConfigManagement.RadvdConfigManagement.
 *
 * MDMOID_RADVD_CONFIG_MGT 93
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
} RadvdConfigMgtObject;

/*! \brief _RadvdConfigMgtObject is used internally to represent RadvdConfigMgtObject */
typedef RadvdConfigMgtObject _RadvdConfigMgtObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IPv6LANHostConfigManagement.RadvdConfigManagement.ULAPrefixInfo.
 *
 * MDMOID_ULA_PREFIX_INFO 94
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UBOOL8    random;	/**< Random */
    char *    prefix;	/**< Prefix */
    SINT32    preferredLifeTime;	/**< PreferredLifeTime */
    SINT32    validLifeTime;	/**< ValidLifeTime */
} ULAPrefixInfoObject;

/*! \brief _ULAPrefixInfoObject is used internally to represent ULAPrefixInfoObject */
typedef ULAPrefixInfoObject _ULAPrefixInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IPv6LANHostConfigManagement.RadvdConfigManagement.PrefixInformation.{i}.
 *
 * MDMOID_PREFIX_INFO 95
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    mode;	/**< Mode */
    char *    delegatedConnection;	/**< DelegatedConnection */
    char *    prefix;	/**< Prefix */
    SINT32    preferredLifeTime;	/**< PreferredLifeTime */
    SINT32    validLifeTime;	/**< ValidLifeTime */
} PrefixInfoObject;

/*! \brief _PrefixInfoObject is used internally to represent PrefixInfoObject */
typedef PrefixInfoObject _PrefixInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IPv6LANHostConfigManagement.X_404A03_MldSnoopingConfig.
 *
 * MDMOID_MLD_SNOOPING_CFG 96
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mode;	/**< Mode */
} MldSnoopingCfgObject;

/*! \brief _MldSnoopingCfgObject is used internally to represent MldSnoopingCfgObject */
typedef MldSnoopingCfgObject _MldSnoopingCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.
 *
 * MDMOID_LAN_ETH_INTF 97
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
    SINT32    X_404A03_EthernetPriorityMark;	/**< X_404A03_EthernetPriorityMark */
    SINT32    X_404A03_dot1qPvid;	/**< X_404A03_dot1qPvid */
    UINT32    X_404A03_VLAN_Enable;	/**< X_404A03_VLAN_Enable */
    char *    X_404A03_VLAN_TagList;	/**< X_404A03_VLAN_TagList */
} LanEthIntfObject;

/*! \brief _LanEthIntfObject is used internally to represent LanEthIntfObject */
typedef LanEthIntfObject _LanEthIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_ETH_INTF_STATS 98
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    X_404A03_PacketsSent;	/**< X_404A03_PacketsSent */
    UINT32    X_404A03_PacketsReceived;	/**< X_404A03_PacketsReceived */
    UINT32    X_404A03_TxErrors;	/**< X_404A03_TxErrors */
    UINT32    X_404A03_RxErrors;	/**< X_404A03_RxErrors */
    UINT32    X_404A03_TxDrops;	/**< X_404A03_TxDrops */
    UINT32    X_404A03_RxDrops;	/**< X_404A03_RxDrops */
} LanEthIntfStatsObject;

/*! \brief _LanEthIntfStatsObject is used internally to represent LanEthIntfStatsObject */
typedef LanEthIntfStatsObject _LanEthIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.
 *
 * MDMOID_LAN_USB_INTF 99
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
    char *    standard;	/**< Standard */
    char *    type;	/**< Type */
    char *    rate;	/**< Rate */
    char *    power;	/**< Power */
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
} LanUsbIntfObject;

/*! \brief _LanUsbIntfObject is used internally to represent LanUsbIntfObject */
typedef LanUsbIntfObject _LanUsbIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_USB_INTF_STATS 100
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    cellsSent;	/**< CellsSent */
    UINT32    cellsReceived;	/**< CellsReceived */
    UINT32    X_404A03_PacketsSent;	/**< X_404A03_PacketsSent */
    UINT32    X_404A03_PacketsReceived;	/**< X_404A03_PacketsReceived */
    UINT32    X_404A03_TxErrors;	/**< X_404A03_TxErrors */
    UINT32    X_404A03_RxErrors;	/**< X_404A03_RxErrors */
    UINT32    X_404A03_TxDrops;	/**< X_404A03_TxDrops */
    UINT32    X_404A03_RxDrops;	/**< X_404A03_RxDrops */
} LanUsbIntfStatsObject;

/*! \brief _LanUsbIntfStatsObject is used internally to represent LanUsbIntfStatsObject */
typedef LanUsbIntfStatsObject _LanUsbIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.
 *
 * MDMOID_LAN_WLAN 101
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    BSSID;	/**< BSSID */
    char *    maxBitRate;	/**< MaxBitRate */
    UINT32    channel;	/**< Channel */
    UBOOL8    autoChannelEnable;	/**< AutoChannelEnable */
    char *    SSID;	/**< SSID */
    UBOOL8    SSIDAdvertisementEnabled;	/**< SSIDAdvertisementEnabled */
    char *    beaconType;	/**< BeaconType */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
    char *    standard;	/**< Standard */
    UINT32    WEPKeyIndex;	/**< WEPKeyIndex */
    char *    keyPassphrase;	/**< KeyPassphrase */
    char *    WEPEncryptionLevel;	/**< WEPEncryptionLevel */
    char *    basicEncryptionModes;	/**< BasicEncryptionModes */
    char *    basicAuthenticationMode;	/**< BasicAuthenticationMode */
    char *    WPAEncryptionModes;	/**< WPAEncryptionModes */
    char *    WPAAuthenticationMode;	/**< WPAAuthenticationMode */
    char *    IEEE11iEncryptionModes;	/**< IEEE11iEncryptionModes */
    char *    IEEE11iAuthenticationMode;	/**< IEEE11iAuthenticationMode */
    char *    possibleChannels;	/**< PossibleChannels */
    char *    basicDataTransmitRates;	/**< BasicDataTransmitRates */
    char *    operationalDataTransmitRates;	/**< OperationalDataTransmitRates */
    char *    possibleDataTransmitRates;	/**< PossibleDataTransmitRates */
    UBOOL8    insecureOOBAccessEnabled;	/**< InsecureOOBAccessEnabled */
    UBOOL8    beaconAdvertisementEnabled;	/**< BeaconAdvertisementEnabled */
    UBOOL8    radioEnabled;	/**< RadioEnabled */
    UBOOL8    autoRateFallBackEnabled;	/**< AutoRateFallBackEnabled */
    char *    locationDescription;	/**< LocationDescription */
    char *    regulatoryDomain;	/**< RegulatoryDomain */
    UINT32    totalPSKFailures;	/**< TotalPSKFailures */
    UINT32    totalIntegrityFailures;	/**< TotalIntegrityFailures */
    char *    channelsInUse;	/**< ChannelsInUse */
    char *    deviceOperationMode;	/**< DeviceOperationMode */
    UINT32    distanceFromRoot;	/**< DistanceFromRoot */
    char *    peerBSSID;	/**< PeerBSSID */
    char *    authenticationServiceMode;	/**< AuthenticationServiceMode */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
    UINT32    totalPacketsSent;	/**< TotalPacketsSent */
    UINT32    totalPacketsReceived;	/**< TotalPacketsReceived */
    UINT32    totalAssociations;	/**< TotalAssociations */
    char *    transmitPowerSupported;	/**< TransmitPowerSupported */
    UINT32    transmitPower;	/**< TransmitPower */
    UBOOL8    WMMSupported;	/**< WMMSupported */
    UBOOL8    WMMEnable;	/**< WMMEnable */
    UBOOL8    X_404A03_WMMPowerSaveEnabled;	/**< X_404A03_WMMPowerSaveEnabled */
    UBOOL8    X_404A03_RestoreDefaultKey;	/**< X_404A03_RestoreDefaultKey */
    UBOOL8    X_404A03_RestoreDefaultWireless;	/**< X_404A03_RestoreDefaultWireless */
    UINT32    X_404A03_RxErrors;	/**< X_404A03_RxErrors */
    UINT32    X_404A03_RxDrops;	/**< X_404A03_RxDrops */
    UINT32    X_404A03_TxErrors;	/**< X_404A03_TxErrors */
    UINT32    X_404A03_TxDrops;	/**< X_404A03_TxDrops */
    char *    X_404A03_KeyPassphrase;	/**< X_404A03_KeyPassphrase */
    char *    X_404A03_AllowedMACAddresses;	/**< X_404A03_AllowedMACAddresses */
    char *    X_404A03_DeniedMACAddresses;	/**< X_404A03_DeniedMACAddresses */
    UBOOL8    X_404A03_SubnetEnable;	/**< X_404A03_SubnetEnable */
    char *    X_404A03_SubnetStartAddr;	/**< X_404A03_SubnetStartAddr */
    char *    X_404A03_SubnetEndAddr;	/**< X_404A03_SubnetEndAddr */
    char *    X_404A03_SubnetMask;	/**< X_404A03_SubnetMask */
    char *    X_404A03_SubnetGatewayAddr;	/**< X_404A03_SubnetGatewayAddr */
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
    UBOOL8    X_404A03_HideSSID;	/**< X_404A03_HideSSID */
    UINT32    X_404A03_TxPowerPercent;	/**< X_404A03_TxPowerPercent */
    char *    X_404A03_GuestSSID;	/**< X_404A03_GuestSSID */
    char *    X_404A03_GuestBSSID;	/**< X_404A03_GuestBSSID */
    UBOOL8    X_404A03_GuestEnable;	/**< X_404A03_GuestEnable */
    UBOOL8    X_404A03_GuestHiden;	/**< X_404A03_GuestHiden */
    UBOOL8    X_404A03_GuestIsolateClients;	/**< X_404A03_GuestIsolateClients */
    UBOOL8    X_404A03_GuestDisableWMMAdvertise;	/**< X_404A03_GuestDisableWMMAdvertise */
    SINT32    X_404A03_GuestMaxClients;	/**< X_404A03_GuestMaxClients */
    char *    X_404A03_Guest1SSID;	/**< X_404A03_Guest1SSID */
    char *    X_404A03_Guest1BSSID;	/**< X_404A03_Guest1BSSID */
    UBOOL8    X_404A03_Guest1Enable;	/**< X_404A03_Guest1Enable */
    UBOOL8    X_404A03_Guest1Hiden;	/**< X_404A03_Guest1Hiden */
    UBOOL8    X_404A03_Guest1IsolateClients;	/**< X_404A03_Guest1IsolateClients */
    UBOOL8    X_404A03_Guest1DisableWMMAdvertise;	/**< X_404A03_Guest1DisableWMMAdvertise */
    SINT32    X_404A03_Guest1MaxClients;	/**< X_404A03_Guest1MaxClients */
    char *    X_404A03_Guest2SSID;	/**< X_404A03_Guest2SSID */
    char *    X_404A03_Guest2BSSID;	/**< X_404A03_Guest2BSSID */
    UBOOL8    X_404A03_Guest2Enable;	/**< X_404A03_Guest2Enable */
    UBOOL8    X_404A03_Guest2Hiden;	/**< X_404A03_Guest2Hiden */
    UBOOL8    X_404A03_Guest2IsolateClients;	/**< X_404A03_Guest2IsolateClients */
    UBOOL8    X_404A03_Guest2DisableWMMAdvertise;	/**< X_404A03_Guest2DisableWMMAdvertise */
    SINT32    X_404A03_Guest2MaxClients;	/**< X_404A03_Guest2MaxClients */
} LanWlanObject;

/*! \brief _LanWlanObject is used internally to represent LanWlanObject */
typedef LanWlanObject _LanWlanObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.AssociatedDevice.{i}.
 *
 * MDMOID_LAN_WLAN_ASSOCIATED_DEVICE_ENTRY 102
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    associatedDeviceMACAddress;	/**< AssociatedDeviceMACAddress */
    char *    associatedDeviceIPAddress;	/**< AssociatedDeviceIPAddress */
    UBOOL8    associatedDeviceAuthenticationState;	/**< AssociatedDeviceAuthenticationState */
    char *    lastRequestedUnicastCipher;	/**< LastRequestedUnicastCipher */
    char *    lastRequestedMulticastCipher;	/**< LastRequestedMulticastCipher */
    char *    lastPMKId;	/**< LastPMKId */
    char *    lastDataTransmitRate;	/**< LastDataTransmitRate */
    SINT32    X_404A03_Associated;	/**< X_404A03_Associated */
    SINT32    X_404A03_Authorized;	/**< X_404A03_Authorized */
    char *    X_404A03_Ssid;	/**< X_404A03_Ssid */
    char *    X_404A03_Ifcname;	/**< X_404A03_Ifcname */
} LanWlanAssociatedDeviceEntryObject;

/*! \brief _LanWlanAssociatedDeviceEntryObject is used internally to represent LanWlanAssociatedDeviceEntryObject */
typedef LanWlanAssociatedDeviceEntryObject _LanWlanAssociatedDeviceEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WEPKey.{i}.
 *
 * MDMOID_LAN_WLAN_WEP_KEY 103
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    WEPKey;	/**< WEPKey */
    char *    X_404A03_WEPKey;	/**< X_404A03_WEPKey */
} LanWlanWepKeyObject;

/*! \brief _LanWlanWepKeyObject is used internally to represent LanWlanWepKeyObject */
typedef LanWlanWepKeyObject _LanWlanWepKeyObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.{i}.
 *
 * MDMOID_LAN_WLAN_PRE_SHARED_KEY 104
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    preSharedKey;	/**< PreSharedKey */
    char *    keyPassphrase;	/**< KeyPassphrase */
    char *    associatedDeviceMACAddress;	/**< AssociatedDeviceMACAddress */
    char *    X_404A03_PreSharedKey;	/**< X_404A03_PreSharedKey */
    char *    X_404A03_KeyPassphrase;	/**< X_404A03_KeyPassphrase */
} LanWlanPreSharedKeyObject;

/*! \brief _LanWlanPreSharedKeyObject is used internally to represent LanWlanPreSharedKeyObject */
typedef LanWlanPreSharedKeyObject _LanWlanPreSharedKeyObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.Stats.
 *
 * MDMOID_LAN_WLAN_STATS 105
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT32    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT32    X_404A03_PacketsSent;	/**< X_404A03_PacketsSent */
    UINT32    X_404A03_PacketsReceived;	/**< X_404A03_PacketsReceived */
    UINT32    X_404A03_TxErrors;	/**< X_404A03_TxErrors */
    UINT32    X_404A03_RxErrors;	/**< X_404A03_RxErrors */
    UINT32    X_404A03_TxDrops;	/**< X_404A03_TxDrops */
    UINT32    X_404A03_RxDrops;	/**< X_404A03_RxDrops */
} LanWlanStatsObject;

/*! \brief _LanWlanStatsObject is used internally to represent LanWlanStatsObject */
typedef LanWlanStatsObject _LanWlanStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS.
 *
 * MDMOID_LAN_WLAN_WPS 106
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    deviceName;	/**< DeviceName */
    UINT32    devicePassword;	/**< DevicePassword */
    char *    UUID;	/**< UUID */
    UINT32    version;	/**< Version */
    char *    configMethodsSupported;	/**< ConfigMethodsSupported */
    char *    configMethodsEnabled;	/**< ConfigMethodsEnabled */
    char *    setupLockedState;	/**< SetupLockedState */
    UBOOL8    setupLock;	/**< SetupLock */
    char *    configurationState;	/**< ConfigurationState */
    char *    lastConfigurationError;	/**< LastConfigurationError */
    UINT32    registrarNumberOfEntries;	/**< RegistrarNumberOfEntries */
    UBOOL8    registrarEstablished;	/**< RegistrarEstablished */
} LanWlanWpsObject;

/*! \brief _LanWlanWpsObject is used internally to represent LanWlanWpsObject */
typedef LanWlanWpsObject _LanWlanWpsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS.Registrar.{i}.
 *
 * MDMOID_LAN_WLAN_WPS_REGISTRAR 107
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    UUID;	/**< UUID */
    char *    deviceName;	/**< DeviceName */
} LanWlanWpsRegistrarObject;

/*! \brief _LanWlanWpsRegistrarObject is used internally to represent LanWlanWpsRegistrarObject */
typedef LanWlanWpsRegistrarObject _LanWlanWpsRegistrarObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.APWMMParameter.{i}.
 *
 * MDMOID_APWMM_PARAMETER 108
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_WIFILAN_1
    UINT32    AIFSN;	/**< AIFSN */
#endif
#ifdef DMP_WIFILAN_1
    UINT32    ECWMin;	/**< ECWMin */
#endif
#ifdef DMP_WIFILAN_1
    UINT32    ECWMax;	/**< ECWMax */
#endif
#ifdef DMP_WIFILAN_1
    UINT32    TXOP;	/**< TXOP */
#endif
#ifdef DMP_WIFILAN_1
    UBOOL8    ackPolicy;	/**< AckPolicy */
#endif
} LanWlanAPWMMParameterObject;

/*! \brief _LanWlanAPWMMParameterObject is used internally to represent LanWlanAPWMMParameterObject */
typedef LanWlanAPWMMParameterObject _LanWlanAPWMMParameterObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.STAWMMParameter.{i}.
 *
 * MDMOID_STAWMM_PARAMETER 109
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_WIFILAN_1
    UINT32    AIFSN;	/**< AIFSN */
#endif
#ifdef DMP_WIFILAN_1
    UINT32    ECWMin;	/**< ECWMin */
#endif
#ifdef DMP_WIFILAN_1
    UINT32    ECWMax;	/**< ECWMax */
#endif
#ifdef DMP_WIFILAN_1
    UINT32    TXOP;	/**< TXOP */
#endif
#ifdef DMP_WIFILAN_1
    UBOOL8    ackPolicy;	/**< AckPolicy */
#endif
} LanWlanSTAWMMParameterObject;

/*! \brief _LanWlanSTAWMMParameterObject is used internally to represent LanWlanSTAWMMParameterObject */
typedef LanWlanSTAWMMParameterObject _LanWlanSTAWMMParameterObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.
 *
 * MDMOID_WLAN_ADAPTER 110
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WlanAdapterObject;

/*! \brief _WlanAdapterObject is used internally to represent WlanAdapterObject */
typedef WlanAdapterObject _WlanAdapterObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlBaseCfg.
 *
 * MDMOID_WL_BASE_CFG 111
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlEnbl;	/**< WlEnbl */
    SINT32    wlSsidIdx;	/**< WlSsidIdx */
    char *    wlMode;	/**< WlMode */
    char *    wlCountry;	/**< WlCountry */
    char *    wlPhyType;	/**< WlPhyType */
    SINT32    wlCoreRev;	/**< WlCoreRev */
    char *    wlBasicRate;	/**< WlBasicRate */
    char *    wlProtection;	/**< WlProtection */
    char *    wlPreambleType;	/**< WlPreambleType */
    char *    wlAfterBurnerEn;	/**< WlAfterBurnerEn */
    char *    wlFrameBurst;	/**< WlFrameBurst */
    SINT32    wlChannel;	/**< WlChannel */
    SINT32    wlCurrentChannel;	/**< WlCurrentChannel */
    SINT32    wlFrgThrshld;	/**< WlFrgThrshld */
    SINT32    wlRtsThrshld;	/**< WlRtsThrshld */
    SINT32    wlDtmIntvl;	/**< WlDtmIntvl */
    SINT32    wlBcnIntvl;	/**< WlBcnIntvl */
    SINT32    wlRate;	/**< WlRate */
    SINT32    wlgMode;	/**< WlgMode */
    SINT32    wlBand;	/**< WlBand */
    SINT32    wlMCastRate;	/**< WlMCastRate */
    SINT32    wlInfra;	/**< WlInfra */
    SINT32    wlAntDiv;	/**< WlAntDiv */
    SINT32    wlWme;	/**< WlWme */
    SINT32    wlWmeNoAck;	/**< WlWmeNoAck */
    SINT32    wlWmeApsd;	/**< WlWmeApsd */
    SINT32    wlTxPwrPcnt;	/**< WlTxPwrPcnt */
    SINT32    wlRegMode;	/**< WlRegMode */
    SINT32    wlDfsPreIsm;	/**< WlDfsPreIsm */
    SINT32    wlDfsPostIsm;	/**< WlDfsPostIsm */
    SINT32    wlTpcDb;	/**< WlTpcDb */
    SINT32    wlCsScanTimer;	/**< WlCsScanTimer */
    SINT32    wlGlobalMaxAssoc;	/**< WlGlobalMaxAssoc */
    SINT32    wlMBands;	/**< WlMBands */
    char *    wlVer;	/**< WlVer */
    SINT32    wlNumBss;	/**< WlNumBss */
    SINT32    wlMaxMbss;	/**< WlMaxMbss */
    UBOOL8    wlMbssSupported;	/**< WlMbssSupported */
    SINT32    wlLazyWds;	/**< WlLazyWds */
    SINT32    wlAburnSupported;	/**< WlAburnSupported */
    SINT32    wlAmpduSupported;	/**< WlAmpduSupported */
    SINT32    wlAmsduSupported;	/**< WlAmsduSupported */
    SINT32    wlWmeSupported;	/**< WlWmeSupported */
    SINT32    wlWmfSupported;	/**< WlWmfSupported */
    SINT32    wlVecSupported;	/**< WlVecSupported */
    SINT32    wlVec;	/**< WlVec */
    SINT32    wlIperf;	/**< WlIperf */
    SINT32    wlRifsAdvert;	/**< WlRifsAdvert */
    SINT32    wlChanImEnab;	/**< WlChanImEnab */
    SINT32    wlObssCoex;	/**< WlObssCoex */
    SINT32    wlRxChainPwrSaveEnable;	/**< WlRxChainPwrSaveEnable */
    SINT32    wlRxChainPwrSaveQuietTime;	/**< WlRxChainPwrSaveQuietTime */
    SINT32    wlRxChainPwrSavePps;	/**< WlRxChainPwrSavePps */
    SINT32    wlRadioPwrSaveEnable;	/**< WlRadioPwrSaveEnable */
    SINT32    wlRadioPwrSaveQuietTime;	/**< WlRadioPwrSaveQuietTime */
    SINT32    wlRadioPwrSavePps;	/**< WlRadioPwrSavePps */
    SINT32    wlRadioPwrSaveLevel;	/**< WlRadioPwrSaveLevel */
    UBOOL8    wlTxPriority;	/**< WlTxPriority */
    UBOOL8    wlRxPriority;	/**< WlRxPriority */
    UBOOL8    wlCalPriority;	/**< WlCalPriority */
    SINT32    wlWdsSec;	/**< WlWdsSec */
    char *    wlWdsKey;	/**< WlWdsKey */
    SINT32    wlWdsSecEnable;	/**< WlWdsSecEnable */
    SINT32    wlEnableUre;	/**< WlEnableUre */
    SINT32    wlStaRetryTime;	/**< WlStaRetryTime */
    UBOOL8    X_404A03_ScheduleEnable;	/**< X_404A03_ScheduleEnable */
    UBOOL8    X_404A03_ScheduleSunEnable;	/**< X_404A03_ScheduleSunEnable */
    SINT32    X_404A03_ScheduleSunStart;	/**< X_404A03_ScheduleSunStart */
    SINT32    X_404A03_ScheduleSunEnd;	/**< X_404A03_ScheduleSunEnd */
    UBOOL8    X_404A03_ScheduleMonEnable;	/**< X_404A03_ScheduleMonEnable */
    SINT32    X_404A03_ScheduleMonStart;	/**< X_404A03_ScheduleMonStart */
    SINT32    X_404A03_ScheduleMonEnd;	/**< X_404A03_ScheduleMonEnd */
    UBOOL8    X_404A03_ScheduleTueEnable;	/**< X_404A03_ScheduleTueEnable */
    SINT32    X_404A03_ScheduleTueStart;	/**< X_404A03_ScheduleTueStart */
    SINT32    X_404A03_ScheduleTueEnd;	/**< X_404A03_ScheduleTueEnd */
    UBOOL8    X_404A03_ScheduleWedEnable;	/**< X_404A03_ScheduleWedEnable */
    SINT32    X_404A03_ScheduleWedStart;	/**< X_404A03_ScheduleWedStart */
    SINT32    X_404A03_ScheduleWedEnd;	/**< X_404A03_ScheduleWedEnd */
    UBOOL8    X_404A03_ScheduleThuEnable;	/**< X_404A03_ScheduleThuEnable */
    SINT32    X_404A03_ScheduleThuStart;	/**< X_404A03_ScheduleThuStart */
    SINT32    X_404A03_ScheduleThuEnd;	/**< X_404A03_ScheduleThuEnd */
    UBOOL8    X_404A03_ScheduleFriEnable;	/**< X_404A03_ScheduleFriEnable */
    SINT32    X_404A03_ScheduleFriStart;	/**< X_404A03_ScheduleFriStart */
    SINT32    X_404A03_ScheduleFriEnd;	/**< X_404A03_ScheduleFriEnd */
    UBOOL8    X_404A03_ScheduleSatEnable;	/**< X_404A03_ScheduleSatEnable */
    SINT32    X_404A03_ScheduleSatStart;	/**< X_404A03_ScheduleSatStart */
    SINT32    X_404A03_ScheduleSatEnd;	/**< X_404A03_ScheduleSatEnd */
    UBOOL8    X_404A03_ScheduleOldWlanEnable;	/**< X_404A03_ScheduleOldWlanEnable */
} WlBaseCfgObject;

/*! \brief _WlBaseCfgObject is used internally to represent WlBaseCfgObject */
typedef WlBaseCfgObject _WlBaseCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlStaticWdsCfg.{i}.
 *
 * MDMOID_WL_STATIC_WDS_CFG 112
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlStaName;	/**< WlStaName */
} WlStaticWdsCfgObject;

/*! \brief _WlStaticWdsCfgObject is used internally to represent WlStaticWdsCfgObject */
typedef WlStaticWdsCfgObject _WlStaticWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlWdsCfg.{i}.
 *
 * MDMOID_WL_WDS_CFG 113
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlWdsCfgObject;

/*! \brief _WlWdsCfgObject is used internally to represent WlWdsCfgObject */
typedef WlWdsCfgObject _WlWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlScanWdsCfg.{i}.
 *
 * MDMOID_WL_SCAN_WDS_CFG 114
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlScanWdsCfgObject;

/*! \brief _WlScanWdsCfgObject is used internally to represent WlScanWdsCfgObject */
typedef WlScanWdsCfgObject _WlScanWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlMimoCfg.
 *
 * MDMOID_WL_MIMO_CFG 115
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlNBwCap;	/**< WlNBwCap */
    SINT32    wlNCtrlsb;	/**< WlNCtrlsb */
    SINT32    wlNBand;	/**< WlNBand */
    SINT32    wlNMcsidx;	/**< WlNMcsidx */
    char *    wlNProtection;	/**< WlNProtection */
    char *    wlRifs;	/**< WlRifs */
    char *    wlAmpdu;	/**< WlAmpdu */
    char *    wlAmsdu;	/**< WlAmsdu */
    char *    wlNmode;	/**< WlNmode */
    SINT32    wlNReqd;	/**< WlNReqd */
    SINT32    wlStbcTx;	/**< WlStbcTx */
    SINT32    wlStbcRx;	/**< WlStbcRx */
    SINT32    wlTxchain;	/**< WlTxchain */
    SINT32    wlRxchain;	/**< WlRxchain */
} WlMimoCfgObject;

/*! \brief _WlMimoCfgObject is used internally to represent WlMimoCfgObject */
typedef WlMimoCfgObject _WlMimoCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlWmmCfg.
 *
 * MDMOID_WL_WMM_CFG 116
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WlWmmCfgObject;

/*! \brief _WlWmmCfgObject is used internally to represent WlWmmCfgObject */
typedef WlWmmCfgObject _WlWmmCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlWMMCfg.WlAPWmmParameterCfg.{i}.
 *
 * MDMOID_AP_WMM_PARAMETER_CFG 117
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ACName;	/**< ACName */
    UINT32    AIFSN;	/**< AIFSN */
    UINT32    ECWMin;	/**< ECWMin */
    UINT32    ECWMax;	/**< ECWMax */
    UINT32    TXOP;	/**< TXOP */
} WlAPWmmParameterCfgObject;

/*! \brief _WlAPWmmParameterCfgObject is used internally to represent WlAPWmmParameterCfgObject */
typedef WlAPWmmParameterCfgObject _WlAPWmmParameterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlWMMCfg.WlSTAWmmParameterCfg.{i}.
 *
 * MDMOID_STA_WMM_PARAMETER_CFG 118
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ACName;	/**< ACName */
    UINT32    AIFSN;	/**< AIFSN */
    UINT32    ECWMin;	/**< ECWMin */
    UINT32    ECWMax;	/**< ECWMax */
    UINT32    TXOP;	/**< TXOP */
} WlSTAWmmParameterCfgObject;

/*! \brief _WlSTAWmmParameterCfgObject is used internally to represent WlSTAWmmParameterCfgObject */
typedef WlSTAWmmParameterCfgObject _WlSTAWmmParameterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlSesCfg.
 *
 * MDMOID_WL_SES_CFG 119
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlSesEnable;	/**< WlSesEnable */
    SINT32    wlSesEvent;	/**< WlSesEvent */
    char *    wlSesStates;	/**< WlSesStates */
    char *    wlSesSsid;	/**< WlSesSsid */
    char *    wlSesWpaPsk;	/**< WlSesWpaPsk */
    SINT32    wlSesHide;	/**< WlSesHide */
    SINT32    wlSesAuth;	/**< WlSesAuth */
    char *    wlSesAuthMode;	/**< WlSesAuthMode */
    char *    wlSesWep;	/**< WlSesWep */
    char *    wlSesWpa;	/**< WlSesWpa */
    SINT32    wlSesWdsMode;	/**< WlSesWdsMode */
    SINT32    wlSesClEnable;	/**< WlSesClEnable */
    SINT32    wlSesClEvent;	/**< WlSesClEvent */
    char *    wlSesWdsWsec;	/**< WlSesWdsWsec */
} WlSesCfgObject;

/*! \brief _WlSesCfgObject is used internally to represent WlSesCfgObject */
typedef WlSesCfgObject _WlSesCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.WlVirtIntfCfg.{i}.
 *
 * MDMOID_WL_VIRT_INTF_CFG 120
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlIdx;	/**< WlIdx */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
    char *    wlBrName;	/**< WlBrName */
    char *    wlBssMacAddr;	/**< WlBssMacAddr */
    char *    wlWpaPsk;	/**< WlWpaPsk */
    char *    wlWep;	/**< WlWep */
    char *    wlWpa;	/**< WlWpa */
    char *    wlAuthMode;	/**< WlAuthMode */
    SINT32    wlWpaGTKRekey;	/**< WlWpaGTKRekey */
    char *    wlRadiusKey;	/**< WlRadiusKey */
    char *    wlRadiusServerIP;	/**< WlRadiusServerIP */
    SINT32    wlRadiusPort;	/**< WlRadiusPort */
    char *    wlWapiCertificate;	/**< WlWapiCertificate */
    SINT32    wlAuth;	/**< WlAuth */
    SINT32    wlEnblSsid;	/**< WlEnblSsid */
    SINT32    wlKeyIndex128;	/**< WlKeyIndex128 */
    SINT32    wlKeyIndex64;	/**< WlKeyIndex64 */
    SINT32    wlKeyBit;	/**< WlKeyBit */
    SINT32    wlPreauth;	/**< WlPreauth */
    SINT32    wlNetReauth;	/**< WlNetReauth */
    SINT32    wlHide;	/**< WlHide */
    SINT32    wlAPIsolation;	/**< WlAPIsolation */
    SINT32    wlMaxAssoc;	/**< WlMaxAssoc */
    SINT32    wlDisableWme;	/**< WlDisableWme */
    char *    wlFltMacMode;	/**< WlFltMacMode */
    SINT32    wlEnableWmf;	/**< WlEnableWmf */
    char *    X_404A03_WlAutoGenSSIDPrefix;	/**< X_404A03_WlAutoGenSSIDPrefix */
    char *    X_404A03_WlWepKeyPassphrase;	/**< X_404A03_WlWepKeyPassphrase */
    char *    X_404A03_WlWPAKeyPassphrase;	/**< X_404A03_WlWPAKeyPassphrase */
    SINT32    X_404A03_WlAutoGenSSIDEnbl;	/**< X_404A03_WlAutoGenSSIDEnbl */
    SINT32    X_404A03_WlAutoGenWepKeyASCII;	/**< X_404A03_WlAutoGenWepKeyASCII */
    SINT32    X_404A03_WlAutoGenWepKeyEnbl;	/**< X_404A03_WlAutoGenWepKeyEnbl */
    SINT32    X_404A03_WlAutoGenWPAKeyEnbl;	/**< X_404A03_WlAutoGenWPAKeyEnbl */
    SINT32    X_404A03_SsidRedirectType;	/**< X_404A03_SsidRedirectType */
    char *    X_404A03_SsidRedirectUrl;	/**< X_404A03_SsidRedirectUrl */
    char *    X_404A03_MaxBandwidth;	/**< X_404A03_MaxBandwidth */
    UBOOL8    X_404A03_SubnetEnable;	/**< X_404A03_SubnetEnable */
    char *    X_404A03_SubnetStartAddr;	/**< X_404A03_SubnetStartAddr */
    char *    X_404A03_SubnetEndAddr;	/**< X_404A03_SubnetEndAddr */
    char *    X_404A03_SubnetMask;	/**< X_404A03_SubnetMask */
    char *    X_404A03_SubnetGatewayAddr;	/**< X_404A03_SubnetGatewayAddr */
} WlVirtIntfCfgObject;

/*! \brief _WlVirtIntfCfgObject is used internally to represent WlVirtIntfCfgObject */
typedef WlVirtIntfCfgObject _WlVirtIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.VirtIntf.{i}.WlMacFltCfg.{i}.
 *
 * MDMOID_WL_MAC_FLT 121
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlMacFltObject;

/*! \brief _WlMacFltObject is used internally to represent WlMacFltObject */
typedef WlMacFltObject _WlMacFltObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.VirtIntf.{i}.WlKey64Cfg.{i}.
 *
 * MDMOID_WL_KEY64_CFG 122
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlKey64;	/**< WlKey64 */
} WlKey64CfgObject;

/*! \brief _WlKey64CfgObject is used internally to represent WlKey64CfgObject */
typedef WlKey64CfgObject _WlKey64CfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.VirtIntf.{i}.WlKey128Cfg.{i}.
 *
 * MDMOID_WL_KEY128_CFG 123
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlKey128;	/**< WlKey128 */
} WlKey128CfgObject;

/*! \brief _WlKey128CfgObject is used internally to represent WlKey128CfgObject */
typedef WlKey128CfgObject _WlKey128CfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WlanAdapter.VirtIntf.{i}.WlWpsCfg.
 *
 * MDMOID_WL_WPS_CFG 124
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wsc_config_state;	/**< Wsc_config_state */
    char *    wsc_mode;	/**< Wsc_mode */
    SINT32    wpsManullyDisable;	/**< WpsManullyDisable */
} WlWpsCfgObject;

/*! \brief _WlWpsCfgObject is used internally to represent WlWpsCfgObject */
typedef WlWpsCfgObject _WlWpsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_404A03_WLANVirtMbssConfiguration.{i}.
 *
 * MDMOID_LAN_WLAN_VIRT_MBSS 125
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mbssGuestSSID;	/**< MbssGuestSSID */
    char *    mbssGuestBSSID;	/**< MbssGuestBSSID */
    UBOOL8    mbssGuestEnable;	/**< MbssGuestEnable */
    UBOOL8    mbssGuestHiden;	/**< MbssGuestHiden */
    UBOOL8    mbssGuestIsolateClients;	/**< MbssGuestIsolateClients */
    UBOOL8    mbssGuestDisableWMMAdvertise;	/**< MbssGuestDisableWMMAdvertise */
    SINT32    mbssGuestMaxClients;	/**< MbssGuestMaxClients */
} LanWlanVirtMbssObject;

/*! \brief _LanWlanVirtMbssObject is used internally to represent LanWlanVirtMbssObject */
typedef LanWlanVirtMbssObject _LanWlanVirtMbssObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_LANMocaInterfaceConfig.{i}.
 *
 * MDMOID_LAN_MOCA_INTF 126
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ifName;	/**< IfName */
    char *    connectionMode;	/**< ConnectionMode */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    char *    mocaControl;	/**< MocaControl */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    networkStatus;	/**< NetworkStatus */
    char *    password;	/**< Password */
    UBOOL8    privacy;	/**< Privacy */
    UINT32    minBandwidthAlarmThreshold;	/**< MinBandwidthAlarmThreshold */
    UINT32    frequencyMask;	/**< FrequencyMask */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    lastOperationalFrequency;	/**< LastOperationalFrequency */
    UINT32    ncMode;	/**< NcMode */
    UBOOL8    autoNwSearch;	/**< AutoNwSearch */
    UBOOL8    txPwrControl;	/**< TxPwrControl */
    UINT32    continuousPowerMode;	/**< ContinuousPowerMode */
    UINT32    mcastMode;	/**< McastMode */
    UBOOL8    labMode;	/**< LabMode */
    UBOOL8    eclQTagMode;	/**< EclQTagMode */
    UINT32    maxTransmitTime;	/**< MaxTransmitTime */
    SINT32    maxTransmitPower;	/**< MaxTransmitPower */
    SINT32    snrMargin;	/**< SnrMargin */
    UINT32    outOfOrderLmo;	/**< OutOfOrderLmo */
    UBOOL8    lmoReportEnable;	/**< LmoReportEnable */
    UINT32    tabooMaskStart;	/**< TabooMaskStart */
    UINT32    tabooChannelMask;	/**< TabooChannelMask */
    UBOOL8    continuousIerrInsert;	/**< ContinuousIerrInsert */
    UBOOL8    continuousIeMapInsert;	/**< ContinuousIeMapInsert */
    UINT32    maxPktAggr;	/**< MaxPktAggr */
    UINT32    maxConstellationNode;	/**< MaxConstellationNode */
    UINT32    maxConstellation;	/**< MaxConstellation */
    UBOOL8    preferedNetworkController;	/**< PreferedNetworkController */
    UINT32    pmkExchangeInterval;	/**< PmkExchangeInterval */
    UINT32    tekExchangeInterval;	/**< TekExchangeInterval */
    UINT32    traceLevel;	/**< TraceLevel */
    UBOOL8    traceLevelRestoreDefault;	/**< TraceLevelRestoreDefault */
    UINT32    mrNonDefSeqNumber;	/**< MrNonDefSeqNumber */
    char *    initParmsString;	/**< InitParmsString */
    char *    configParmsString;	/**< ConfigParmsString */
    char *    traceParmsString;	/**< TraceParmsString */
    UBOOL8    limitedConnections;	/**< LimitedConnections */
#ifdef DMP_X_404A03_AUTODETECTION_1
    UINT32    maxConnections;	/**< MaxConnections */
#endif
} LanMocaIntfObject;

/*! \brief _LanMocaIntfObject is used internally to represent LanMocaIntfObject */
typedef LanMocaIntfObject _LanMocaIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_LANMocaInterfaceConfig.{i}.Status.
 *
 * MDMOID_LAN_MOCA_INTF_STATUS 127
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    vendorId;	/**< VendorId */
    UINT32    hwVersion;	/**< HwVersion */
    UINT32    softwareVersion;	/**< SoftwareVersion */
    UINT32    driverMajorVersion;	/**< DriverMajorVersion */
    UINT32    driverMinorVersion;	/**< DriverMinorVersion */
    UINT32    driverBuildVersion;	/**< DriverBuildVersion */
    UINT32    selfMoCAVersion;	/**< SelfMoCAVersion */
    UINT32    networkVersionNumber;	/**< NetworkVersionNumber */
    UINT32    qam256Support;	/**< Qam256Support */
    UINT32    operationalStatus;	/**< OperationalStatus */
    UINT32    linkStatus;	/**< LinkStatus */
    UINT32    connectedNodes;	/**< ConnectedNodes */
    UINT32    nodeId;	/**< NodeId */
    UINT32    networkControllerNodeId;	/**< NetworkControllerNodeId */
    UINT32    upTime;	/**< UpTime */
    UINT32    linkUpTime;	/**< LinkUpTime */
    UINT32    backupNetworkControllerNodeId;	/**< BackupNetworkControllerNodeId */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    bwStatus;	/**< BwStatus */
} LanMocaIntfStatusObject;

/*! \brief _LanMocaIntfStatusObject is used internally to represent LanMocaIntfStatusObject */
typedef LanMocaIntfStatusObject _LanMocaIntfStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_LANMocaInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_MOCA_INTF_STATS 128
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    inUcPkts;	/**< InUcPkts */
    UINT32    inDiscardPktsEcl;	/**< InDiscardPktsEcl */
    UINT32    inDiscardPktsMac;	/**< InDiscardPktsMac */
    UINT32    inUnKnownPkts;	/**< InUnKnownPkts */
    UINT32    inMcPkts;	/**< InMcPkts */
    UINT32    inBcPkts;	/**< InBcPkts */
    UINT32    inOctetsLow;	/**< InOctetsLow */
    UINT32    outUcPkts;	/**< OutUcPkts */
    UINT32    outDiscardPkts;	/**< OutDiscardPkts */
    UINT32    outBcPkts;	/**< OutBcPkts */
    UINT32    outOctetsLow;	/**< OutOctetsLow */
    UINT32    networkControllerHandOffs;	/**< NetworkControllerHandOffs */
    UINT32    networkControllerBackups;	/**< NetworkControllerBackups */
} LanMocaIntfStatsObject;

/*! \brief _LanMocaIntfStatsObject is used internally to represent LanMocaIntfStatsObject */
typedef LanMocaIntfStatsObject _LanMocaIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_LANEponInterfaceConfig.{i}.
 *
 * MDMOID_LAN_EPON_INTF 129
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ifName;	/**< IfName */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
} LanEponIntfObject;

/*! \brief _LanEponIntfObject is used internally to represent LanEponIntfObject */
typedef LanEponIntfObject _LanEponIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_LANEponInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_EPON_INTF_STATS 130
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    txErrors;	/**< TxErrors */
    UINT32    rxErrors;	/**< RxErrors */
    UINT32    txDrops;	/**< TxDrops */
    UINT32    rxDrops;	/**< RxDrops */
} LanEponIntfStatsObject;

/*! \brief _LanEponIntfStatsObject is used internally to represent LanEponIntfStatsObject */
typedef LanEponIntfStatsObject _LanEponIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IGMP.
 *
 * MDMOID_IGMP 131
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    cacheNumberofEntries;	/**< CacheNumberofEntries */
} IGMPObject;

/*! \brief _IGMPObject is used internally to represent IGMPObject */
typedef IGMPObject _IGMPObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_IGMP.CacheTable.{i}.
 *
 * MDMOID_CACHE_TABLE 132
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    groupAddress;	/**< GroupAddress */
    char *    interface;	/**< Interface */
    char *    lastReporter;	/**< LastReporter */
    UINT32    timeout;	/**< Timeout */
} CacheTableObject;

/*! \brief _CacheTableObject is used internally to represent CacheTableObject */
typedef CacheTableObject _CacheTableObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_404A03_ALG.{i}.
 *
 * MDMOID_ALG 133
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    protocol;	/**< Protocol */
} ALGObject;

/*! \brief _ALGObject is used internally to represent ALGObject */
typedef ALGObject _ALGObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.Hosts.
 *
 * MDMOID_LAN_HOSTS 134
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    hostNumberOfEntries;	/**< HostNumberOfEntries */
} LanHostsObject;

/*! \brief _LanHostsObject is used internally to represent LanHostsObject */
typedef LanHostsObject _LanHostsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}.
 *
 * MDMOID_LAN_HOST_ENTRY 135
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
    char *    addressSource;	/**< AddressSource */
    SINT32    leaseTimeRemaining;	/**< LeaseTimeRemaining */
    char *    MACAddress;	/**< MACAddress */
    char *    vendorClassID;	/**< VendorClassID */
    char *    clientID;	/**< ClientID */
    char *    userClassID;	/**< UserClassID */
    char *    hostName;	/**< HostName */
    char *    interfaceType;	/**< InterfaceType */
    char *    X_404A03_HostType;	/**< X_404A03_HostType */
    UBOOL8    X_404A03_UserDefined;	/**< X_404A03_UserDefined */
    char *    X_404A03_DnsName;	/**< X_404A03_DnsName */
    UBOOL8    active;	/**< Active */
    char *    X_404A03_DHCPConditionalServingPoolName;	/**< X_404A03_DHCPConditionalServingPoolName */
    char *    X_404A03_IncomingPort;	/**< X_404A03_IncomingPort */
} LanHostEntryObject;

/*! \brief _LanHostEntryObject is used internally to represent LanHostEntryObject */
typedef LanHostEntryObject _LanHostEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.
 *
 * MDMOID_WAN_DEV 136
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    WANConnectionNumberOfEntries;	/**< WANConnectionNumberOfEntries */
} WanDevObject;

/*! \brief _WanDevObject is used internally to represent WanDevObject */
typedef WanDevObject _WanDevObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig.
 *
 * MDMOID_WAN_COMMON_INTF_CFG 137
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enabledForInternet;	/**< EnabledForInternet */
    char *    WANAccessType;	/**< WANAccessType */
    UINT32    layer1UpstreamMaxBitRate;	/**< Layer1UpstreamMaxBitRate */
    UINT32    layer1DownstreamMaxBitRate;	/**< Layer1DownstreamMaxBitRate */
    char *    physicalLinkStatus;	/**< PhysicalLinkStatus */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
    UINT32    totalPacketsSent;	/**< TotalPacketsSent */
    UINT32    totalPacketsReceived;	/**< TotalPacketsReceived */
    UINT32    X_404A03_TxErrors;	/**< X_404A03_TxErrors */
    UINT32    X_404A03_RxErrors;	/**< X_404A03_RxErrors */
    UINT32    X_404A03_TxDrops;	/**< X_404A03_TxDrops */
    UINT32    X_404A03_RxDrops;	/**< X_404A03_RxDrops */
    UINT32    maximumActiveConnections;	/**< MaximumActiveConnections */
    UINT32    numberOfActiveConnections;	/**< NumberOfActiveConnections */
} WanCommonIntfCfgObject;

/*! \brief _WanCommonIntfCfgObject is used internally to represent WanCommonIntfCfgObject */
typedef WanCommonIntfCfgObject _WanCommonIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_XTM_Interface_Stats.{i}.
 *
 * MDMOID_XTM_INTERFACE_STATS 138
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    port;	/**< Port */
    char *    status;	/**< Status */
    UINT32    inOctets;	/**< InOctets */
    UINT32    outOctets;	/**< OutOctets */
    UINT32    inPackets;	/**< InPackets */
    UINT32    outPackets;	/**< OutPackets */
    UINT32    inOAMCells;	/**< InOAMCells */
    UINT32    outOAMCells;	/**< OutOAMCells */
    UINT32    inASMCells;	/**< InASMCells */
    UINT32    outASMCells;	/**< OutASMCells */
    UINT32    inPacketErrors;	/**< InPacketErrors */
    UINT32    inCellErrors;	/**< InCellErrors */
} XtmInterfaceStatsObject;

/*! \brief _XtmInterfaceStatsObject is used internally to represent XtmInterfaceStatsObject */
typedef XtmInterfaceStatsObject _XtmInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.
 *
 * MDMOID_WAN_DSL_INTF_CFG 139
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UBOOL8    errorSamplesAvailable;	/**< ErrorSamplesAvailable */
    char *    linkEncapsulationUsed;	/**< LinkEncapsulationUsed */
    char *    linkEncapsulationSupported;	/**< LinkEncapsulationSupported */
    char *    linkEncapsulationRequested;	/**< LinkEncapsulationRequested */
    char *    modulationType;	/**< ModulationType */
    char *    lineEncoding;	/**< LineEncoding */
    char *    dataPath;	/**< DataPath */
    UINT32    interleaveDepth;	/**< InterleaveDepth */
    SINT32    lineNumber;	/**< LineNumber */
    UINT32    upstreamCurrRate;	/**< UpstreamCurrRate */
    UINT32    downstreamCurrRate;	/**< DownstreamCurrRate */
    UINT32    X_404A03_UpstreamCurrRate_2;	/**< X_404A03_UpstreamCurrRate_2 */
    UINT32    X_404A03_DownstreamCurrRate_2;	/**< X_404A03_DownstreamCurrRate_2 */
    UINT32    upstreamMaxRate;	/**< UpstreamMaxRate */
    UINT32    downstreamMaxRate;	/**< DownstreamMaxRate */
    SINT32    upstreamNoiseMargin;	/**< UpstreamNoiseMargin */
    SINT32    downstreamNoiseMargin;	/**< DownstreamNoiseMargin */
    SINT32    upstreamAttenuation;	/**< UpstreamAttenuation */
    SINT32    downstreamAttenuation;	/**< DownstreamAttenuation */
    SINT32    upstreamPower;	/**< UpstreamPower */
    SINT32    downstreamPower;	/**< DownstreamPower */
    char *    ATURVendor;	/**< ATURVendor */
    UINT32    ATURCountry;	/**< ATURCountry */
    UINT32    ATURANSIStd;	/**< ATURANSIStd */
    UINT32    ATURANSIRev;	/**< ATURANSIRev */
    char *    ATUCVendor;	/**< ATUCVendor */
    UINT32    ATUCCountry;	/**< ATUCCountry */
    UINT32    ATUCANSIStd;	/**< ATUCANSIStd */
    UINT32    ATUCANSIRev;	/**< ATUCANSIRev */
    UINT32    totalStart;	/**< TotalStart */
    UINT32    showtimeStart;	/**< ShowtimeStart */
    UINT32    lastShowtimeStart;	/**< LastShowtimeStart */
    UINT32    currentDayStart;	/**< CurrentDayStart */
    UINT32    quarterHourStart;	/**< QuarterHourStart */
    char *    standardsSupported;	/**< StandardsSupported */
    char *    standardUsed;	/**< StandardUsed */
#ifdef DMP_VDSL2WAN_1
    char *    allowedProfiles;	/**< AllowedProfiles */
#endif
#ifdef DMP_VDSL2WAN_1
    char *    currentProfile;	/**< CurrentProfile */
#endif
#ifdef DMP_VDSL2WAN_1
    UINT32    UPBOKLE;	/**< UPBOKLE */
#endif
    SINT32    TRELLISds;	/**< TRELLISds */
    SINT32    TRELLISus;	/**< TRELLISus */
    UINT32    ACTSNRMODEds;	/**< ACTSNRMODEds */
    SINT32    ACTSNRMODEus;	/**< ACTSNRMODEus */
    UINT32    ACTUALCE;	/**< ACTUALCE */
    char *    SNRMpbds;	/**< SNRMpbds */
    char *    SNRMpbus;	/**< SNRMpbus */
    char *    X_404A03_AdslVersion;	/**< X_404A03_AdslVersion */
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_AdslModulationCfg;	/**< X_404A03_AdslModulationCfg */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UBOOL8    X_404A03_ADSL2_AnnexM;	/**< X_404A03_ADSL2_AnnexM */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_PhoneLinePair;	/**< X_404A03_PhoneLinePair */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_Bitswap;	/**< X_404A03_Bitswap */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_SRA;	/**< X_404A03_SRA */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_TrellisD;	/**< X_404A03_TrellisD */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_TrellisU;	/**< X_404A03_TrellisU */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_SNR;	/**< X_404A03_SNR */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_Bitmap;	/**< X_404A03_Bitmap */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_QueueSize;	/**< X_404A03_QueueSize */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_NumTxQueues;	/**< X_404A03_NumTxQueues */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_UpstreamS;	/**< X_404A03_UpstreamS */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_DownstreamS;	/**< X_404A03_DownstreamS */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamR;	/**< X_404A03_UpstreamR */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamR;	/**< X_404A03_DownstreamR */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamK;	/**< X_404A03_UpstreamK */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamK;	/**< X_404A03_DownstreamK */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_UpstreamDelay;	/**< X_404A03_UpstreamDelay */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_UpstreamDelay_2;	/**< X_404A03_UpstreamDelay_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_DownstreamDelay;	/**< X_404A03_DownstreamDelay */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_DownstreamDelay_2;	/**< X_404A03_DownstreamDelay_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_DownstreamINP;	/**< X_404A03_DownstreamINP */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_DownstreamINP_2;	/**< X_404A03_DownstreamINP_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_UpstreamINP;	/**< X_404A03_UpstreamINP */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_UpstreamINP_2;	/**< X_404A03_UpstreamINP_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamD;	/**< X_404A03_UpstreamD */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamD_2;	/**< X_404A03_UpstreamD_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamD;	/**< X_404A03_DownstreamD */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamD_2;	/**< X_404A03_DownstreamD_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamMSGc;	/**< X_404A03_ADSL2_UpstreamMSGc */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamMSGc_2;	/**< X_404A03_ADSL2_UpstreamMSGc_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamMSGc;	/**< X_404A03_ADSL2_DownstreamMSGc */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamMSGc_2;	/**< X_404A03_ADSL2_DownstreamMSGc_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamB;	/**< X_404A03_ADSL2_UpstreamB */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamB_2;	/**< X_404A03_ADSL2_UpstreamB_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamB;	/**< X_404A03_ADSL2_DownstreamB */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamB_2;	/**< X_404A03_ADSL2_DownstreamB_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamM;	/**< X_404A03_ADSL2_UpstreamM */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamM_2;	/**< X_404A03_ADSL2_UpstreamM_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamM;	/**< X_404A03_ADSL2_DownstreamM */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamM_2;	/**< X_404A03_ADSL2_DownstreamM_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamT;	/**< X_404A03_ADSL2_UpstreamT */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamT_2;	/**< X_404A03_ADSL2_UpstreamT_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamT;	/**< X_404A03_ADSL2_DownstreamT */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamT_2;	/**< X_404A03_ADSL2_DownstreamT_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamR;	/**< X_404A03_ADSL2_UpstreamR */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamR_2;	/**< X_404A03_ADSL2_UpstreamR_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamR;	/**< X_404A03_ADSL2_DownstreamR */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamR_2;	/**< X_404A03_ADSL2_DownstreamR_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_ADSL2_UpstreamS;	/**< X_404A03_ADSL2_UpstreamS */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_ADSL2_UpstreamS_2;	/**< X_404A03_ADSL2_UpstreamS_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_ADSL2_DownstreamS;	/**< X_404A03_ADSL2_DownstreamS */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_ADSL2_DownstreamS_2;	/**< X_404A03_ADSL2_DownstreamS_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamL;	/**< X_404A03_ADSL2_UpstreamL */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_UpstreamL_2;	/**< X_404A03_ADSL2_UpstreamL_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamL;	/**< X_404A03_ADSL2_DownstreamL */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ADSL2_DownstreamL_2;	/**< X_404A03_ADSL2_DownstreamL_2 */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_8a;	/**< X_404A03_VDSL_8a */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_8b;	/**< X_404A03_VDSL_8b */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_8c;	/**< X_404A03_VDSL_8c */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_8d;	/**< X_404A03_VDSL_8d */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_12a;	/**< X_404A03_VDSL_12a */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_12b;	/**< X_404A03_VDSL_12b */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_17a;	/**< X_404A03_VDSL_17a */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_30a;	/**< X_404A03_VDSL_30a */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UBOOL8    X_404A03_VDSL_US0_8a;	/**< X_404A03_VDSL_US0_8a */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_UpstreamI;	/**< X_404A03_VDSL_UpstreamI */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_UpstreamI_2;	/**< X_404A03_VDSL_UpstreamI_2 */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_DownstreamI;	/**< X_404A03_VDSL_DownstreamI */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_DownstreamI_2;	/**< X_404A03_VDSL_DownstreamI_2 */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_UpstreamN;	/**< X_404A03_VDSL_UpstreamN */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_UpstreamN_2;	/**< X_404A03_VDSL_UpstreamN_2 */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_DownstreamN;	/**< X_404A03_VDSL_DownstreamN */
#endif
#ifdef DMP_X_404A03_VDSL2WAN_1
    UINT32    X_404A03_VDSL_DownstreamN_2;	/**< X_404A03_VDSL_DownstreamN_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_LinkPowerState;	/**< X_404A03_LinkPowerState */
#endif
#ifdef DMP_X_404A03_DSLBONDING_1
    UBOOL8    X_404A03_EnableBonding;	/**< X_404A03_EnableBonding */
#endif
    UINT32    X_404A03_BondingLineNumber;	/**< X_404A03_BondingLineNumber */
#ifdef DMP_X_404A03_DSLBONDING_1
    char *    X_404A03_BondingPeerName;	/**< X_404A03_BondingPeerName */
#endif
    UINT32    X_404A03_DslCfgParam;	/**< X_404A03_DslCfgParam */
    SINT32    X_404A03_DslTrainingMarginQ4;	/**< X_404A03_DslTrainingMarginQ4 */
    SINT32    X_404A03_DslShowtimeMarginQ4;	/**< X_404A03_DslShowtimeMarginQ4 */
    SINT32    X_404A03_DslLOMTimeThldSec;	/**< X_404A03_DslLOMTimeThldSec */
    SINT32    X_404A03_DslPwmSyncClockFreq;	/**< X_404A03_DslPwmSyncClockFreq */
    SINT32    X_404A03_DslHsModeSwitchTime;	/**< X_404A03_DslHsModeSwitchTime */
    UINT32    X_404A03_DslParam;	/**< X_404A03_DslParam */
    UINT32    X_404A03_DslPhyCfg1Mask;	/**< X_404A03_DslPhyCfg1Mask */
    UINT32    X_404A03_DslPhyCfg1Value;	/**< X_404A03_DslPhyCfg1Value */
    UINT32    X_404A03_DslPhyCfg2Mask;	/**< X_404A03_DslPhyCfg2Mask */
    UINT32    X_404A03_DslPhyCfg2Value;	/**< X_404A03_DslPhyCfg2Value */
    UINT32    X_404A03_DslPhyCfg3Mask;	/**< X_404A03_DslPhyCfg3Mask */
    UINT32    X_404A03_DslPhyCfg3Value;	/**< X_404A03_DslPhyCfg3Value */
    UINT32    X_404A03_DslPhyCfg4Mask;	/**< X_404A03_DslPhyCfg4Mask */
    UINT32    X_404A03_DslPhyCfg4Value;	/**< X_404A03_DslPhyCfg4Value */
    UINT32    X_404A03_DslPhyCfg5Mask;	/**< X_404A03_DslPhyCfg5Mask */
    UINT32    X_404A03_DslPhyCfg5Value;	/**< X_404A03_DslPhyCfg5Value */
    UINT32    X_404A03_DslPhyCfg6Mask;	/**< X_404A03_DslPhyCfg6Mask */
    UINT32    X_404A03_DslPhyCfg6Value;	/**< X_404A03_DslPhyCfg6Value */
    UINT32    X_404A03_DslPhyCfg7Mask;	/**< X_404A03_DslPhyCfg7Mask */
    UINT32    X_404A03_DslPhyCfg7Value;	/**< X_404A03_DslPhyCfg7Value */
    UINT32    X_404A03_DslPhyCfg8Mask;	/**< X_404A03_DslPhyCfg8Mask */
    UINT32    X_404A03_DslPhyCfg8Value;	/**< X_404A03_DslPhyCfg8Value */
    UINT32    X_404A03_DslPhyUsDataRateKbps;	/**< X_404A03_DslPhyUsDataRateKbps */
    UINT32    X_404A03_DslPhyDsDataRateKbps;	/**< X_404A03_DslPhyDsDataRateKbps */
    UINT32    X_404A03_DslPhyAggrDataRateKbps;	/**< X_404A03_DslPhyAggrDataRateKbps */
    UINT32    X_404A03_DslPhyMiscCfgParam;	/**< X_404A03_DslPhyMiscCfgParam */
    UINT32    X_404A03_WanType;	/**< X_404A03_WanType */
    UBOOL8    X_404A03_EncapAutoSelect;	/**< X_404A03_EncapAutoSelect */
} WanDslIntfCfgObject;

/*! \brief _WanDslIntfCfgObject is used internally to represent WanDslIntfCfgObject */
typedef WanDslIntfCfgObject _WanDslIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.X_404A03_BertTest.
 *
 * MDMOID_WAN_BERT_TEST 140
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    bertTestMode;	/**< BertTestMode */
    UINT32    bertTestDuration;	/**< BertTestDuration */
    char *    bertTestStatus;	/**< BertTestStatus */
    UINT32    totalTime;	/**< TotalTime */
    UINT32    elapsedTime;	/**< ElapsedTime */
    UINT32    bitsTestedCntHigh;	/**< BitsTestedCntHigh */
    UINT32    bitsTestedCntLow;	/**< BitsTestedCntLow */
    UINT32    errBitsCntHigh;	/**< ErrBitsCntHigh */
    UINT32    errBitsCntLow;	/**< ErrBitsCntLow */
} WanBertTestObject;

/*! \brief _WanBertTestObject is used internally to represent WanBertTestObject */
typedef WanBertTestObject _WanBertTestObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.
 *
 * MDMOID_WAN_DSL_INTF_STATS 141
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WanDslIntfStatsObject;

/*! \brief _WanDslIntfStatsObject is used internally to represent WanDslIntfStatsObject */
typedef WanDslIntfStatsObject _WanDslIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Total.
 *
 * MDMOID_WAN_DSL_INTF_STATS_TOTAL 142
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsCorrectable;	/**< X_404A03_RxRsCorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsCorrectable_2;	/**< X_404A03_RxRsCorrectable_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsCorrectable;	/**< X_404A03_TxRsCorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsCorrectable_2;	/**< X_404A03_TxRsCorrectable_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsUncorrectable;	/**< X_404A03_TxRsUncorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsUncorrectable_2;	/**< X_404A03_TxRsUncorrectable_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsUncorrectable;	/**< X_404A03_RxRsUncorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsUncorrectable_2;	/**< X_404A03_RxRsUncorrectable_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsWords;	/**< X_404A03_TxRsWords */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsWords_2;	/**< X_404A03_TxRsWords_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsWords;	/**< X_404A03_RxRsWords */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsWords_2;	/**< X_404A03_RxRsWords_2 */
#endif
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ReceiveBlocks_2;	/**< X_404A03_ReceiveBlocks_2 */
#endif
    UINT32    transmitBlocks;	/**< TransmitBlocks */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TransmitBlocks_2;	/**< X_404A03_TransmitBlocks_2 */
#endif
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    ATUCSeverelyErroredSecs;	/**< ATUCSeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_FECErrors_2;	/**< X_404A03_FECErrors_2 */
#endif
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ATUCFECErrors_2;	/**< X_404A03_ATUCFECErrors_2 */
#endif
    UINT32    HECErrors;	/**< HECErrors */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_HECErrors_2;	/**< X_404A03_HECErrors_2 */
#endif
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ATUCHECErrors_2;	/**< X_404A03_ATUCHECErrors_2 */
#endif
    UINT32    CRCErrors;	/**< CRCErrors */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_CRCErrors_2;	/**< X_404A03_CRCErrors_2 */
#endif
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ATUCCRCErrors_2;	/**< X_404A03_ATUCCRCErrors_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamUas;	/**< X_404A03_UpstreamUas */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamUas;	/**< X_404A03_DownstreamUas */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamEs;	/**< X_404A03_UpstreamEs */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamSes;	/**< X_404A03_UpstreamSes */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamBitErrors;	/**< X_404A03_UpstreamBitErrors */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamBitErrors_2;	/**< X_404A03_UpstreamBitErrors_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamBitErrors;	/**< X_404A03_DownstreamBitErrors */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamBitErrors_2;	/**< X_404A03_DownstreamBitErrors_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamDataCells;	/**< X_404A03_UpstreamDataCells */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamDataCells_2;	/**< X_404A03_UpstreamDataCells_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamDataCells;	/**< X_404A03_DownstreamDataCells */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamDataCells_2;	/**< X_404A03_DownstreamDataCells_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamTotalCells;	/**< X_404A03_UpstreamTotalCells */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamTotalCells_2;	/**< X_404A03_UpstreamTotalCells_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamTotalCells;	/**< X_404A03_DownstreamTotalCells */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamTotalCells_2;	/**< X_404A03_DownstreamTotalCells_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamLCD;	/**< X_404A03_UpstreamLCD */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamLCD_2;	/**< X_404A03_UpstreamLCD_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamLCD;	/**< X_404A03_DownstreamLCD */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamLCD_2;	/**< X_404A03_DownstreamLCD_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamOCD;	/**< X_404A03_UpstreamOCD */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_UpstreamOCD_2;	/**< X_404A03_UpstreamOCD_2 */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamOCD;	/**< X_404A03_DownstreamOCD */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_DownstreamOCD_2;	/**< X_404A03_DownstreamOCD_2 */
#endif
} WanDslIntfStatsTotalObject;

/*! \brief _WanDslIntfStatsTotalObject is used internally to represent WanDslIntfStatsTotalObject */
typedef WanDslIntfStatsTotalObject _WanDslIntfStatsTotalObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Showtime.
 *
 * MDMOID_WAN_DSL_INTF_STATS_SHOWTIME 143
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsUncorrectable;	/**< X_404A03_RxRsUncorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsUncorrectable;	/**< X_404A03_TxRsUncorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsCorrectable;	/**< X_404A03_RxRsCorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsCorrectable;	/**< X_404A03_TxRsCorrectable */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_RxRsWords;	/**< X_404A03_RxRsWords */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_TxRsWords;	/**< X_404A03_TxRsWords */
#endif
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
    UINT32    transmitBlocks;	/**< TransmitBlocks */
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    ATUCSeverelyErroredSecs;	/**< ATUCSeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
    UINT32    HECErrors;	/**< HECErrors */
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
} WanDslIntfStatsShowtimeObject;

/*! \brief _WanDslIntfStatsShowtimeObject is used internally to represent WanDslIntfStatsShowtimeObject */
typedef WanDslIntfStatsShowtimeObject _WanDslIntfStatsShowtimeObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.CurrentDay.
 *
 * MDMOID_WAN_DSL_INTF_STATS_CURRENT_DAY 144
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
    UINT32    transmitBlocks;	/**< TransmitBlocks */
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    ATUCSeverelyErroredSecs;	/**< ATUCSeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
    UINT32    HECErrors;	/**< HECErrors */
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
} WanDslIntfStatsCurrentDayObject;

/*! \brief _WanDslIntfStatsCurrentDayObject is used internally to represent WanDslIntfStatsCurrentDayObject */
typedef WanDslIntfStatsCurrentDayObject _WanDslIntfStatsCurrentDayObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.QuarterHour.
 *
 * MDMOID_WAN_DSL_INTF_STATS_QUARTER_HOUR 145
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
    UINT32    transmitBlocks;	/**< TransmitBlocks */
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    ATUCSeverelyErroredSecs;	/**< ATUCSeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
    UINT32    HECErrors;	/**< HECErrors */
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
} WanDslIntfStatsQuarterHourObject;

/*! \brief _WanDslIntfStatsQuarterHourObject is used internally to represent WanDslIntfStatsQuarterHourObject */
typedef WanDslIntfStatsQuarterHourObject _WanDslIntfStatsQuarterHourObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams.
 *
 * MDMOID_WAN_DSL_TEST_PARAMS 146
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    HLOGGds;	/**< HLOGGds */
    UINT32    HLOGGus;	/**< HLOGGus */
    char *    HLOGpsds;	/**< HLOGpsds */
    char *    HLOGpsus;	/**< HLOGpsus */
    UINT32    HLOGMTds;	/**< HLOGMTds */
    UINT32    HLOGMTus;	/**< HLOGMTus */
    UINT32    QLNGds;	/**< QLNGds */
    UINT32    QLNGus;	/**< QLNGus */
    char *    QLNpsds;	/**< QLNpsds */
    char *    QLNpsus;	/**< QLNpsus */
    UINT32    QLNMTds;	/**< QLNMTds */
    UINT32    QLNMTus;	/**< QLNMTus */
    UINT32    SNRGds;	/**< SNRGds */
    UINT32    SNRGus;	/**< SNRGus */
    char *    SNRpsds;	/**< SNRpsds */
    char *    SNRpsus;	/**< SNRpsus */
    UINT32    SNRMTds;	/**< SNRMTds */
    UINT32    SNRMTus;	/**< SNRMTus */
    char *    LATNds;	/**< LATNds */
    char *    LATNus;	/**< LATNus */
    char *    SATNds;	/**< SATNds */
    char *    SATNus;	/**< SATNus */
} WanDslTestParamsObject;

/*! \brief _WanDslTestParamsObject is used internally to represent WanDslTestParamsObject */
typedef WanDslTestParamsObject _WanDslTestParamsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.
 *
 * MDMOID_WAN_ETH_INTF 147
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
    char *    X_404A03_ConnectionMode;	/**< X_404A03_ConnectionMode */
    UBOOL8    X_404A03_PersistentDevice;	/**< X_404A03_PersistentDevice */
    UBOOL8    X_404A03_LimitedConnections;	/**< X_404A03_LimitedConnections */
#ifdef DMP_X_404A03_AUTODETECTION_1
    UINT32    X_404A03_MaxConnections;	/**< X_404A03_MaxConnections */
#endif
} WanEthIntfObject;

/*! \brief _WanEthIntfObject is used internally to represent WanEthIntfObject */
typedef WanEthIntfObject _WanEthIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.X_404A03_IPv6Address.{i}.
 *
 * MDMOID_I_PV6_ADDR 148
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    scope;	/**< Scope */
    char *    IPv6Address;	/**< IPv6Address */
} IPv6AddrObject;

/*! \brief _IPv6AddrObject is used internally to represent IPv6AddrObject */
typedef IPv6AddrObject _IPv6AddrObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.Stats.
 *
 * MDMOID_WAN_ETH_INTF_STATS 149
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
} WanEthIntfStatsObject;

/*! \brief _WanEthIntfStatsObject is used internally to represent WanEthIntfStatsObject */
typedef WanEthIntfStatsObject _WanEthIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANMocaInterfaceConfig.
 *
 * MDMOID_WAN_MOCA_INTF 150
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ifName;	/**< IfName */
    char *    connectionMode;	/**< ConnectionMode */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    char *    mocaControl;	/**< MocaControl */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    networkStatus;	/**< NetworkStatus */
    char *    password;	/**< Password */
    UBOOL8    privacy;	/**< Privacy */
    UINT32    minBandwidthAlarmThreshold;	/**< MinBandwidthAlarmThreshold */
    UINT32    frequencyMask;	/**< FrequencyMask */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    lastOperationalFrequency;	/**< LastOperationalFrequency */
    UINT32    ncMode;	/**< NcMode */
    UBOOL8    autoNwSearch;	/**< AutoNwSearch */
    UBOOL8    txPwrControl;	/**< TxPwrControl */
    UINT32    continuousPowerMode;	/**< ContinuousPowerMode */
    UINT32    mcastMode;	/**< McastMode */
    UBOOL8    labMode;	/**< LabMode */
    UBOOL8    eclQTagMode;	/**< EclQTagMode */
    UINT32    maxTransmitTime;	/**< MaxTransmitTime */
    SINT32    maxTransmitPower;	/**< MaxTransmitPower */
    SINT32    snrMargin;	/**< SnrMargin */
    UINT32    outOfOrderLmo;	/**< OutOfOrderLmo */
    UBOOL8    lmoReportEnable;	/**< LmoReportEnable */
    UINT32    tabooMaskStart;	/**< TabooMaskStart */
    UINT32    tabooChannelMask;	/**< TabooChannelMask */
    UBOOL8    continuousIerrInsert;	/**< ContinuousIerrInsert */
    UBOOL8    continuousIeMapInsert;	/**< ContinuousIeMapInsert */
    UINT32    maxPktAggr;	/**< MaxPktAggr */
    UINT32    maxConstellationNode;	/**< MaxConstellationNode */
    UINT32    maxConstellation;	/**< MaxConstellation */
    UBOOL8    preferedNetworkController;	/**< PreferedNetworkController */
    UINT32    pmkExchangeInterval;	/**< PmkExchangeInterval */
    UINT32    tekExchangeInterval;	/**< TekExchangeInterval */
    UINT32    traceLevel;	/**< TraceLevel */
    UBOOL8    traceLevelRestoreDefault;	/**< TraceLevelRestoreDefault */
    UINT32    mrNonDefSeqNumber;	/**< MrNonDefSeqNumber */
    char *    initParmsString;	/**< InitParmsString */
    char *    configParmsString;	/**< ConfigParmsString */
    char *    traceParmsString;	/**< TraceParmsString */
    UBOOL8    persistentDevice;	/**< PersistentDevice */
    UBOOL8    limitedConnections;	/**< LimitedConnections */
#ifdef DMP_X_404A03_AUTODETECTION_1
    UINT32    maxConnections;	/**< MaxConnections */
#endif
} WanMocaIntfObject;

/*! \brief _WanMocaIntfObject is used internally to represent WanMocaIntfObject */
typedef WanMocaIntfObject _WanMocaIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANMocaInterfaceConfig.Status.
 *
 * MDMOID_WAN_MOCA_INTF_STATUS 151
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    vendorId;	/**< VendorId */
    UINT32    hwVersion;	/**< HwVersion */
    UINT32    softwareVersion;	/**< SoftwareVersion */
    UINT32    driverMajorVersion;	/**< DriverMajorVersion */
    UINT32    driverMinorVersion;	/**< DriverMinorVersion */
    UINT32    driverBuildVersion;	/**< DriverBuildVersion */
    UINT32    selfMoCAVersion;	/**< SelfMoCAVersion */
    UINT32    networkVersionNumber;	/**< NetworkVersionNumber */
    UINT32    qam256Support;	/**< Qam256Support */
    UINT32    operationalStatus;	/**< OperationalStatus */
    UINT32    linkStatus;	/**< LinkStatus */
    UINT32    connectedNodes;	/**< ConnectedNodes */
    UINT32    nodeId;	/**< NodeId */
    UINT32    networkControllerNodeId;	/**< NetworkControllerNodeId */
    UINT32    upTime;	/**< UpTime */
    UINT32    linkUpTime;	/**< LinkUpTime */
    UINT32    backupNetworkControllerNodeId;	/**< BackupNetworkControllerNodeId */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    bwStatus;	/**< BwStatus */
} WanMocaIntfStatusObject;

/*! \brief _WanMocaIntfStatusObject is used internally to represent WanMocaIntfStatusObject */
typedef WanMocaIntfStatusObject _WanMocaIntfStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANMocaInterfaceConfig.Stats.
 *
 * MDMOID_WAN_MOCA_INTF_STATS 152
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    inUcPkts;	/**< InUcPkts */
    UINT32    inDiscardPktsEcl;	/**< InDiscardPktsEcl */
    UINT32    inDiscardPktsMac;	/**< InDiscardPktsMac */
    UINT32    inUnKnownPkts;	/**< InUnKnownPkts */
    UINT32    inMcPkts;	/**< InMcPkts */
    UINT32    inBcPkts;	/**< InBcPkts */
    UINT32    inOctetsLow;	/**< InOctetsLow */
    UINT32    outUcPkts;	/**< OutUcPkts */
    UINT32    outDiscardPkts;	/**< OutDiscardPkts */
    UINT32    outBcPkts;	/**< OutBcPkts */
    UINT32    outOctetsLow;	/**< OutOctetsLow */
    UINT32    networkControllerHandOffs;	/**< NetworkControllerHandOffs */
    UINT32    networkControllerBackups;	/**< NetworkControllerBackups */
} WanMocaIntfStatsObject;

/*! \brief _WanMocaIntfStatsObject is used internally to represent WanMocaIntfStatsObject */
typedef WanMocaIntfStatsObject _WanMocaIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_EponInterfaceConfig.
 *
 * MDMOID_WAN_EPON_INTF 153
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    char *    ifName;	/**< IfName */
    char *    connectionMode;	/**< ConnectionMode */
    UBOOL8    persistentDevice;	/**< PersistentDevice */
    UBOOL8    limitedConnections;	/**< LimitedConnections */
#ifdef DMP_X_404A03_AUTODETECTION_1
    UINT32    maxConnections;	/**< MaxConnections */
#endif
} WanEponIntfObject;

/*! \brief _WanEponIntfObject is used internally to represent WanEponIntfObject */
typedef WanEponIntfObject _WanEponIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_EponInterfaceConfig.Stats.
 *
 * MDMOID_WAN_EPON_INTF_STATS 154
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
} WanEponIntfStatsObject;

/*! \brief _WanEponIntfStatsObject is used internally to represent WanEponIntfStatsObject */
typedef WanEponIntfStatsObject _WanEponIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_L2tpAcIntfConfig.
 *
 * MDMOID_L2TP_AC_INTF_CONFIG 155
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    tunnelName;	/**< TunnelName */
    char *    lnsIpAddress;	/**< LnsIpAddress */
    char *    intfStatus;	/**< IntfStatus */
    UINT32    tunnelId;	/**< TunnelId */
} L2tpAcIntfConfigObject;

/*! \brief _L2tpAcIntfConfigObject is used internally to represent L2tpAcIntfConfigObject */
typedef L2tpAcIntfConfigObject _L2tpAcIntfConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANPonInterfaceConfig.
 *
 * MDMOID_WAN_PON_INTF 156
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ponType;	/**< PonType */
} WanPonIntfObject;

/*! \brief _WanPonIntfObject is used internally to represent WanPonIntfObject */
typedef WanPonIntfObject _WanPonIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANPonInterfaceConfig.Stats.
 *
 * MDMOID_WAN_PON_INTF_STATUS 157
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    byteReceived;	/**< ByteReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
} WanPonIntfStatusObject;

/*! \brief _WanPonIntfStatusObject is used internally to represent WanPonIntfStatusObject */
typedef WanPonIntfStatusObject _WanPonIntfStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics.
 *
 * MDMOID_WAN_DSL_DIAG 158
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loopDiagnosticsState;	/**< LoopDiagnosticsState */
    SINT32    ACTPSDds;	/**< ACTPSDds */
    SINT32    ACTPSDus;	/**< ACTPSDus */
    SINT32    ACTATPds;	/**< ACTATPds */
    SINT32    ACTATPus;	/**< ACTATPus */
    SINT32    HLINSCds;	/**< HLINSCds */
    char *    HLINpsds;	/**< HLINpsds */
    char *    QLNpsds;	/**< QLNpsds */
    char *    SNRpsds;	/**< SNRpsds */
    char *    BITSpsds;	/**< BITSpsds */
    char *    GAINSpsds;	/**< GAINSpsds */
    SINT32    HLINSCus;	/**< HLINSCus */
    SINT32    HLINGds;	/**< HLINGds */
    UINT32    HLINGus;	/**< HLINGus */
    char *    HLINpsus;	/**< HLINpsus */
    UINT32    HLOGGds;	/**< HLOGGds */
    UINT32    HLOGGus;	/**< HLOGGus */
    char *    HLOGpsds;	/**< HLOGpsds */
    char *    HLOGpsus;	/**< HLOGpsus */
    UINT32    HLOGMTds;	/**< HLOGMTds */
    UINT32    HLOGMTus;	/**< HLOGMTus */
    UINT32    QLNGds;	/**< QLNGds */
    UINT32    QLNGus;	/**< QLNGus */
    char *    QLNpsus;	/**< QLNpsus */
    UINT32    QLNMTds;	/**< QLNMTds */
    UINT32    QLNMTus;	/**< QLNMTus */
    UINT32    SNRGds;	/**< SNRGds */
    UINT32    SNRGus;	/**< SNRGus */
    char *    SNRpsus;	/**< SNRpsus */
    UINT32    SNRMTds;	/**< SNRMTds */
    UINT32    SNRMTus;	/**< SNRMTus */
    char *    LATNpbds;	/**< LATNpbds */
    char *    LATNpbus;	/**< LATNpbus */
    char *    SATNds;	/**< SATNds */
    char *    SATNus;	/**< SATNus */
} WanDslDiagObject;

/*! \brief _WanDslDiagObject is used internally to represent WanDslDiagObject */
typedef WanDslDiagObject _WanDslDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANDSLDiagnostics.
 *
 * MDMOID_WAN_DSL_PROPRIETARY_DIAG 159
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WanDslProprietaryDiagObject;

/*! \brief _WanDslProprietaryDiagObject is used internally to represent WanDslProprietaryDiagObject */
typedef WanDslProprietaryDiagObject _WanDslProprietaryDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANDSLDiagnostics.PeakLineNoise.
 *
 * MDMOID_WAN_DSL_DIAG_PLN 160
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticState;	/**< DiagnosticState */
    char *    PLNThldBB;	/**< PLNThldBB */
    char *    PLNThldPerTone;	/**< PLNThldPerTone */
    UINT32    PLNDurationNbBins;	/**< PLNDurationNbBins */
    char *    PLNDurationBins;	/**< PLNDurationBins */
    UINT32    PLNIntrArvNbBins;	/**< PLNIntrArvNbBins */
    char *    PLNIntrArvlBins;	/**< PLNIntrArvlBins */
    char *    PLNValueps;	/**< PLNValueps */
    char *    PLNThldCntps;	/**< PLNThldCntps */
    char *    PLNDurationHist;	/**< PLNDurationHist */
    char *    PLNIntrArvlHist;	/**< PLNIntrArvlHist */
    UINT32    PLNPerToneCounter;	/**< PLNPerToneCounter */
    UINT32    PLNBBCounter;	/**< PLNBBCounter */
} WanDslDiagPlnObject;

/*! \brief _WanDslDiagPlnObject is used internally to represent WanDslDiagPlnObject */
typedef WanDslDiagPlnObject _WanDslDiagPlnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_404A03_WANDSLDiagnostics.NonLinearity.
 *
 * MDMOID_WAN_DSL_DIAG_NON_LINEARITY 161
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    maxCriticalDistNoise;	/**< MaxCriticalDistNoise */
    UINT32    distAffectedBits;	/**< DistAffectedBits */
    char *    distNoisedB;	/**< DistNoisedB */
} WanDslDiagNonLinearityObject;

/*! \brief _WanDslDiagNonLinearityObject is used internally to represent WanDslDiagNonLinearityObject */
typedef WanDslDiagNonLinearityObject _WanDslDiagNonLinearityObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.
 *
 * MDMOID_WAN_CONN_DEVICE 162
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    WANIPConnectionNumberOfEntries;	/**< WANIPConnectionNumberOfEntries */
    UINT32    WANPPPConnectionNumberOfEntries;	/**< WANPPPConnectionNumberOfEntries */
#ifdef DMP_X_404A03_IPV6_1
    UINT32    X_404A03_WANIPv6ConnectionNumberOfEntries;	/**< X_404A03_WANIPv6ConnectionNumberOfEntries */
#endif
} WanConnDeviceObject;

/*! \brief _WanConnDeviceObject is used internally to represent WanConnDeviceObject */
typedef WanConnDeviceObject _WanConnDeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_404A03_WANATMF4EndToEndLoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F4_END_TO_END_LOOPBACK_DIAG 163
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF4EndToEndLoopbackDiagObject;

/*! \brief _WanAtmF4EndToEndLoopbackDiagObject is used internally to represent WanAtmF4EndToEndLoopbackDiagObject */
typedef WanAtmF4EndToEndLoopbackDiagObject _WanAtmF4EndToEndLoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_404A03_WANATMF4LoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F4_LOOPBACK_DIAG 164
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF4LoopbackDiagObject;

/*! \brief _WanAtmF4LoopbackDiagObject is used internally to represent WanAtmF4LoopbackDiagObject */
typedef WanAtmF4LoopbackDiagObject _WanAtmF4LoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_404A03_WANATMF5EndToEndLoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F5_END_TO_END_LOOPBACK_DIAG 165
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF5EndToEndLoopbackDiagObject;

/*! \brief _WanAtmF5EndToEndLoopbackDiagObject is used internally to represent WanAtmF5EndToEndLoopbackDiagObject */
typedef WanAtmF5EndToEndLoopbackDiagObject _WanAtmF5EndToEndLoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_404A03_WANGPONLinkConfig.
 *
 * MDMOID_WAN_GPON_LINK_CFG 166
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    UINT32    portID;	/**< PortID */
    SINT32    direction;	/**< Direction */
    char *    connectionMode;	/**< ConnectionMode */
    char *    ifName;	/**< IfName */
} WanGponLinkCfgObject;

/*! \brief _WanGponLinkCfgObject is used internally to represent WanGponLinkCfgObject */
typedef WanGponLinkCfgObject _WanGponLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_404A03_WANEPONLinkConfig.
 *
 * MDMOID_WAN_EPON_LINK_CFG 167
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
} WanEponLinkCfgObject;

/*! \brief _WanEponLinkCfgObject is used internally to represent WanEponLinkCfgObject */
typedef WanEponLinkCfgObject _WanEponLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig.
 *
 * MDMOID_WAN_DSL_LINK_CFG 168
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    char *    linkType;	/**< LinkType */
    char *    X_404A03_LinkType;	/**< X_404A03_LinkType */
    UBOOL8    autoConfig;	/**< AutoConfig */
    char *    modulationType;	/**< ModulationType */
    char *    destinationAddress;	/**< DestinationAddress */
    char *    ATMEncapsulation;	/**< ATMEncapsulation */
    char *    ATMAAL;	/**< ATMAAL */
    UINT32    ATMTransmittedBlocks;	/**< ATMTransmittedBlocks */
    UINT32    ATMReceivedBlocks;	/**< ATMReceivedBlocks */
    char *    ATMQoS;	/**< ATMQoS */
    UINT32    ATMPeakCellRate;	/**< ATMPeakCellRate */
    UINT32    ATMMaximumBurstSize;	/**< ATMMaximumBurstSize */
    UINT32    ATMSustainableCellRate;	/**< ATMSustainableCellRate */
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ATMMinimumCellRate;	/**< X_404A03_ATMMinimumCellRate */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UBOOL8    X_404A03_ATMEnbQos;	/**< X_404A03_ATMEnbQos */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_GrpScheduler;	/**< X_404A03_GrpScheduler */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_GrpWeight;	/**< X_404A03_GrpWeight */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_GrpPrecedence;	/**< X_404A03_GrpPrecedence */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_SchedulerAlgorithm;	/**< X_404A03_SchedulerAlgorithm */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_QueueWeight;	/**< X_404A03_QueueWeight */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_QueuePrecedence;	/**< X_404A03_QueuePrecedence */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_ATMStatus;	/**< X_404A03_ATMStatus */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    UINT32    X_404A03_ATMInterfaceId;	/**< X_404A03_ATMInterfaceId */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_MacAddress;	/**< X_404A03_MacAddress */
#endif
    UINT32    AAL5CRCErrors;	/**< AAL5CRCErrors */
    UINT32    ATMCRCErrors;	/**< ATMCRCErrors */
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_ConnectionMode;	/**< X_404A03_ConnectionMode */
#endif
#ifdef DMP_X_404A03_ADSLWAN_1
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
#endif
    UBOOL8    X_404A03_DefaultWAN;	/**< X_404A03_DefaultWAN */
} WanDslLinkCfgObject;

/*! \brief _WanDslLinkCfgObject is used internally to represent WanDslLinkCfgObject */
typedef WanDslLinkCfgObject _WanDslLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig.X_404A03_ATM_PARMS.
 *
 * MDMOID_WAN_DSL_ATM_PARAMS 169
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    ATMFreeCellQSize;	/**< ATMFreeCellQSize */
    UINT32    ATMFreePacketQSize;	/**< ATMFreePacketQSize */
    UINT32    ATMFreePacketQBufferSize;	/**< ATMFreePacketQBufferSize */
    UINT32    ATMFreePacketQBufferOffset;	/**< ATMFreePacketQBufferOffset */
    UINT32    ATMReceiveCellQSize;	/**< ATMReceiveCellQSize */
    UINT32    ATMReceivePacketQSize;	/**< ATMReceivePacketQSize */
    UINT32    ATMTransmitFifoPriority;	/**< ATMTransmitFifoPriority */
    UINT32    ATMAal5CpcsMaxSduLength;	/**< ATMAal5CpcsMaxSduLength */
    UINT32    ATMAal2SscsMaxSsarSduLength;	/**< ATMAal2SscsMaxSsarSduLength */
} WanDslAtmParamsObject;

/*! \brief _WanDslAtmParamsObject is used internally to represent WanDslAtmParamsObject */
typedef WanDslAtmParamsObject _WanDslAtmParamsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANATMF5LoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM5_LOOPBACK_DIAG 170
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtm5LoopbackDiagObject;

/*! \brief _WanAtm5LoopbackDiagObject is used internally to represent WanAtm5LoopbackDiagObject */
typedef WanAtm5LoopbackDiagObject _WanAtm5LoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig.
 *
 * MDMOID_WAN_PTM_LINK_CFG 171
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    char *    MACAddress;	/**< MACAddress */
#ifdef DMP_X_404A03_PTMWAN_1
    UINT32    X_404A03_PTMPortId;	/**< X_404A03_PTMPortId */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UBOOL8    X_404A03_PTMPriorityLow;	/**< X_404A03_PTMPriorityLow */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UBOOL8    X_404A03_PTMPriorityHigh;	/**< X_404A03_PTMPriorityHigh */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UBOOL8    X_404A03_PTMEnbQos;	/**< X_404A03_PTMEnbQos */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    char *    X_404A03_GrpScheduler;	/**< X_404A03_GrpScheduler */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UINT32    X_404A03_GrpWeight;	/**< X_404A03_GrpWeight */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UINT32    X_404A03_GrpPrecedence;	/**< X_404A03_GrpPrecedence */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    char *    X_404A03_SchedulerAlgorithm;	/**< X_404A03_SchedulerAlgorithm */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UINT32    X_404A03_QueueWeight;	/**< X_404A03_QueueWeight */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UINT32    X_404A03_QueuePrecedence;	/**< X_404A03_QueuePrecedence */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    char *    X_404A03_ConnectionMode;	/**< X_404A03_ConnectionMode */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    SINT32    X_404A03_QueueShapingRate;	/**< X_404A03_QueueShapingRate */
#endif
#ifdef DMP_X_404A03_PTMWAN_1
    UINT32    X_404A03_QueueShapingBurstSize;	/**< X_404A03_QueueShapingBurstSize */
#endif
    UBOOL8    X_404A03_DefaultWAN;	/**< X_404A03_DefaultWAN */
} WanPtmLinkCfgObject;

/*! \brief _WanPtmLinkCfgObject is used internally to represent WanPtmLinkCfgObject */
typedef WanPtmLinkCfgObject _WanPtmLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANEthernetLinkConfig.
 *
 * MDMOID_WAN_ETH_LINK_CFG 172
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ethernetLinkStatus;	/**< EthernetLinkStatus */
} WanEthLinkCfgObject;

/*! \brief _WanEthLinkCfgObject is used internally to represent WanEthLinkCfgObject */
typedef WanEthLinkCfgObject _WanEthLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_404A03_L2tpAcLinkConfig.
 *
 * MDMOID_L2TP_AC_LINK_CONFIG 173
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    sessionName;	/**< SessionName */
    char *    connectionMode;	/**< ConnectionMode */
    char *    linkStatus;	/**< LinkStatus */
    UINT32    sessionId;	/**< SessionId */
    char *    ifName;	/**< IfName */
} L2tpAcLinkConfigObject;

/*! \brief _L2tpAcLinkConfigObject is used internally to represent L2tpAcLinkConfigObject */
typedef L2tpAcLinkConfigObject _L2tpAcLinkConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.
 *
 * MDMOID_WAN_IP_CONN 174
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    connectionStatus;	/**< ConnectionStatus */
    char *    possibleConnectionTypes;	/**< PossibleConnectionTypes */
    char *    connectionType;	/**< ConnectionType */
    char *    name;	/**< Name */
    UINT32    uptime;	/**< Uptime */
    UINT32    X_404A03_ConnectionEstablishedTime;	/**< X_404A03_ConnectionEstablishedTime */
    char *    lastConnectionError;	/**< LastConnectionError */
    UBOOL8    RSIPAvailable;	/**< RSIPAvailable */
    UBOOL8    NATEnabled;	/**< NATEnabled */
    UBOOL8    X_404A03_NATTR069Changed;	/**< X_404A03_NATTR069Changed */
    UBOOL8    X_404A03_FullconeNATEnabled;	/**< X_404A03_FullconeNATEnabled */
    char *    addressingType;	/**< AddressingType */
    char *    externalIPAddress;	/**< ExternalIPAddress */
    char *    subnetMask;	/**< SubnetMask */
    char *    X_404A03_BcastAddr;	/**< X_404A03_BcastAddr */
    char *    defaultGateway;	/**< DefaultGateway */
    UBOOL8    X_404A03_FirewallEnabled;	/**< X_404A03_FirewallEnabled */
    UBOOL8    X_404A03_IGMPProxy;	/**< X_404A03_IGMPProxy */
#ifdef DMP_X_404A03_GPONWAN_1
    UBOOL8    X_404A03_NoMcastVlanFilter;	/**< X_404A03_NoMcastVlanFilter */
#endif
    UBOOL8    DNSEnabled;	/**< DNSEnabled */
    UBOOL8    DNSOverrideAllowed;	/**< DNSOverrideAllowed */
    char *    DNSServers;	/**< DNSServers */
    UINT32    maxMTUSize;	/**< MaxMTUSize */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressOverride;	/**< MACAddressOverride */
    char *    connectionTrigger;	/**< ConnectionTrigger */
    char *    routeProtocolRx;	/**< RouteProtocolRx */
    char *    X_404A03_RipOperationMode;	/**< X_404A03_RipOperationMode */
    char *    X_404A03_RipDebugMode;	/**< X_404A03_RipDebugMode */
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
    SINT32    X_404A03_ConnectionId;	/**< X_404A03_ConnectionId */
    UINT32    X_404A03_DhcpcPid;	/**< X_404A03_DhcpcPid */
    SINT32    X_404A03_VlanMux8021p;	/**< X_404A03_VlanMux8021p */
    SINT32    X_404A03_VlanMuxID;	/**< X_404A03_VlanMuxID */
    UINT32    portMappingNumberOfEntries;	/**< PortMappingNumberOfEntries */
    char *    X_404A03_Op60VenderID;	/**< X_404A03_Op60VenderID */
    char *    X_404A03_Op61DUID;	/**< X_404A03_Op61DUID */
    char *    X_404A03_Op61IAID;	/**< X_404A03_Op61IAID */
    UBOOL8    X_404A03_Op125Enabled;	/**< X_404A03_Op125Enabled */
    UBOOL8    X_404A03_IPv6Enabled;	/**< X_404A03_IPv6Enabled */
    UBOOL8    X_404A03_IPv4Enabled;	/**< X_404A03_IPv4Enabled */
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_UnnumberedModel;	/**< X_404A03_UnnumberedModel */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6ConnStatus;	/**< X_404A03_IPv6ConnStatus */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6AddressingType;	/**< X_404A03_IPv6AddressingType */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_Dhcp6cForAddress;	/**< X_404A03_Dhcp6cForAddress */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_Dhcp6cForPrefixDelegation;	/**< X_404A03_Dhcp6cForPrefixDelegation */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_ExternalIPv6Address;	/**< X_404A03_ExternalIPv6Address */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_DefaultIPv6Gateway;	/**< X_404A03_DefaultIPv6Gateway */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6DNSServers;	/**< X_404A03_IPv6DNSServers */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6DomainName;	/**< X_404A03_IPv6DomainName */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_IPv6PrefixDelegationEnabled;	/**< X_404A03_IPv6PrefixDelegationEnabled */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6SitePrefix;	/**< X_404A03_IPv6SitePrefix */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6SitePrefixPltime;	/**< X_404A03_IPv6SitePrefixPltime */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6SitePrefixVltime;	/**< X_404A03_IPv6SitePrefixVltime */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UINT32    X_404A03_Dhcp6cPid;	/**< X_404A03_Dhcp6cPid */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_MLDEnabled;	/**< X_404A03_MLDEnabled */
#endif
#ifdef DMP_X_404A03_AUTODETECTION_1
    UBOOL8    X_404A03_LastConnected;	/**< X_404A03_LastConnected */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6DNSType;	/**< X_404A03_IPv6DNSType */
#endif
    char *    X_404A03_FilterDhcpOption60;	/**< X_404A03_FilterDhcpOption60 */
    char *    X_404A03_Op12HostName;	/**< X_404A03_Op12HostName */
    char *    X_404A03_Op15DomainName;	/**< X_404A03_Op15DomainName */
    UBOOL8    X_404A03_DelayApply;	/**< X_404A03_DelayApply */
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    statefulDHCPv6Client;	/**< statefulDHCPv6Client */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UINT32    X_404A03_ExternalIPv6AddressPrefixLength;	/**< X_404A03_ExternalIPv6AddressPrefixLength */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_6rdTunnelEnabled;	/**< X_404A03_6rdTunnelEnabled */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_6rdTunnelType;	/**< X_404A03_6rdTunnelType */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_6rdTunnelEndpointAddr;	/**< X_404A03_6rdTunnelEndpointAddr */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_6rdTunnelPrefix;	/**< X_404A03_6rdTunnelPrefix */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6WanMode;	/**< X_404A03_IPv6WanMode */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_6rdTunnelMaskLen;	/**< X_404A03_6rdTunnelMaskLen */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_6rdTunnelPrefixLen;	/**< X_404A03_6rdTunnelPrefixLen */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_DsLiteTunnelEnabled;	/**< X_404A03_DsLiteTunnelEnabled */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_DsLiteTunnelRelayServer;	/**< X_404A03_DsLiteTunnelRelayServer */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_DsLiteTunnelLocalAddr;	/**< X_404A03_DsLiteTunnelLocalAddr */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6ConnectionEstablishedTime;	/**< X_404A03_IPv6ConnectionEstablishedTime */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6Uptime;	/**< X_404A03_IPv6Uptime */
#endif
    UBOOL8    reset;	/**< Reset */
} WanIpConnObject;

/*! \brief _WanIpConnObject is used internally to represent WanIpConnObject */
typedef WanIpConnObject _WanIpConnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.PortMapping.{i}.
 *
 * MDMOID_WAN_IP_CONN_PORTMAPPING 175
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    UINT32    X_404A03_ExpiryTime;	/**< X_404A03_ExpiryTime */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    X_404A03_ExternalPortEnd;	/**< X_404A03_ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    X_404A03_InternalPortEnd;	/**< X_404A03_InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
    char *    X_404A03_AppName;	/**< X_404A03_AppName */
    UINT32    externalPortEndRange;	/**< ExternalPortEndRange */
    UINT32    X_404A03_RuleSource;	/**< X_404A03_RuleSource */
    UINT32    X_404A03_isConfigDone;	/**< X_404A03_isConfigDone */
} WanIpConnPortmappingObject;

/*! \brief _WanIpConnPortmappingObject is used internally to represent WanIpConnPortmappingObject */
typedef WanIpConnPortmappingObject _WanIpConnPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_404A03_UPNPPortMappingRule.{i}.
 *
 * MDMOID_UPNP_IP_PORTMAPPING 176
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    externalPortEnd;	/**< ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    internalPortEnd;	/**< InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
} UPNPIpPortmappingObject;

/*! \brief _UPNPIpPortmappingObject is used internally to represent UPNPIpPortmappingObject */
typedef UPNPIpPortmappingObject _UPNPIpPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_404A03_PortTriggering.{i}.
 *
 * MDMOID_WAN_IP_CONN_PORT_TRIGGERING 177
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    triggerProtocol;	/**< TriggerProtocol */
    char *    openProtocol;	/**< OpenProtocol */
    UINT32    triggerPortStart;	/**< TriggerPortStart */
    UINT32    triggerPortEnd;	/**< TriggerPortEnd */
    UINT32    openPortStart;	/**< OpenPortStart */
    UINT32    openPortEnd;	/**< OpenPortEnd */
} WanIpConnPortTriggeringObject;

/*! \brief _WanIpConnPortTriggeringObject is used internally to represent WanIpConnPortTriggeringObject */
typedef WanIpConnPortTriggeringObject _WanIpConnPortTriggeringObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_404A03_FirewallException.{i}.
 *
 * MDMOID_WAN_IP_CONN_FIREWALL_EXCEPTION 178
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} WanIpConnFirewallExceptionObject;

/*! \brief _WanIpConnFirewallExceptionObject is used internally to represent WanIpConnFirewallExceptionObject */
typedef WanIpConnFirewallExceptionObject _WanIpConnFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_404A03_MacFilterObj.
 *
 * MDMOID_MAC_FILTER 179
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    policy;	/**< Policy */
} MacFilterObject;

/*! \brief _MacFilterObject is used internally to represent MacFilterObject */
typedef MacFilterObject _MacFilterObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_404A03_MacFilterObj.X_404A03_MacFilterCfg.{i}.
 *
 * MDMOID_MAC_FILTER_CFG 180
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    protocol;	/**< Protocol */
    char *    direction;	/**< Direction */
    char *    sourceMAC;	/**< SourceMAC */
    char *    destinationMAC;	/**< DestinationMAC */
} MacFilterCfgObject;

/*! \brief _MacFilterCfgObject is used internally to represent MacFilterCfgObject */
typedef MacFilterCfgObject _MacFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats.
 *
 * MDMOID_WAN_IP_CONN_STATS 181
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_404A03_RxDrops;	/**< X_404A03_RxDrops */
    UINT32    X_404A03_TxDrops;	/**< X_404A03_TxDrops */
    UINT32    X_404A03_RxErrors;	/**< X_404A03_RxErrors */
    UINT32    X_404A03_TxErrors;	/**< X_404A03_TxErrors */
    UINT32    ethernetBytesSent;	/**< EthernetBytesSent */
    UINT32    ethernetBytesReceived;	/**< EthernetBytesReceived */
    UINT32    ethernetPacketsSent;	/**< EthernetPacketsSent */
    UINT32    ethernetPacketsReceived;	/**< EthernetPacketsReceived */
} WanIpConnStatsObject;

/*! \brief _WanIpConnStatsObject is used internally to represent WanIpConnStatsObject */
typedef WanIpConnStatsObject _WanIpConnStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.
 *
 * MDMOID_WAN_PPP_CONN 182
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    connectionStatus;	/**< ConnectionStatus */
    char *    possibleConnectionTypes;	/**< PossibleConnectionTypes */
    char *    connectionType;	/**< ConnectionType */
    char *    name;	/**< Name */
    UINT32    uptime;	/**< Uptime */
    char *    lastConnectionError;	/**< LastConnectionError */
    UINT32    idleDisconnectTime;	/**< IdleDisconnectTime */
    UBOOL8    RSIPAvailable;	/**< RSIPAvailable */
    UBOOL8    NATEnabled;	/**< NATEnabled */
    UBOOL8    X_404A03_NATTR069Changed;	/**< X_404A03_NATTR069Changed */
    UBOOL8    X_404A03_FullconeNATEnabled;	/**< X_404A03_FullconeNATEnabled */
    UBOOL8    X_404A03_FirewallEnabled;	/**< X_404A03_FirewallEnabled */
    UBOOL8    X_404A03_IGMPProxy;	/**< X_404A03_IGMPProxy */
#ifdef DMP_X_404A03_GPONWAN_1
    UBOOL8    X_404A03_NoMcastVlanFilter;	/**< X_404A03_NoMcastVlanFilter */
#endif
    char *    X_404A03_RipOperationMode;	/**< X_404A03_RipOperationMode */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    PPPEncryptionProtocol;	/**< PPPEncryptionProtocol */
    char *    PPPCompressionProtocol;	/**< PPPCompressionProtocol */
    char *    PPPAuthenticationProtocol;	/**< PPPAuthenticationProtocol */
    UINT32    X_404A03_ConnectionEstablishedTime;	/**< X_404A03_ConnectionEstablishedTime */
    UBOOL8    X_404A03_IPExtension;	/**< X_404A03_IPExtension */
    UBOOL8    X_404A03_UseStaticIPAddress;	/**< X_404A03_UseStaticIPAddress */
    char *    X_404A03_LocalIPAddress;	/**< X_404A03_LocalIPAddress */
    SINT32    X_404A03_ConnectionId;	/**< X_404A03_ConnectionId */
    UINT32    X_404A03_PppdPid;	/**< X_404A03_PppdPid */
    char *    X_404A03_IfName;	/**< X_404A03_IfName */
    char *    X_404A03_DefaultGateway;	/**< X_404A03_DefaultGateway */
    UBOOL8    X_404A03_Enable_Debug;	/**< X_404A03_Enable_Debug */
    UBOOL8    X_404A03_AddPppToBridge;	/**< X_404A03_AddPppToBridge */
    SINT32    X_404A03_VlanMux8021p;	/**< X_404A03_VlanMux8021p */
    SINT32    X_404A03_VlanMuxID;	/**< X_404A03_VlanMuxID */
    char *    X_404A03_UserRequest;	/**< X_404A03_UserRequest */
    char *    externalIPAddress;	/**< ExternalIPAddress */
    char *    remoteIPAddress;	/**< RemoteIPAddress */
    UINT32    currentMRUSize;	/**< CurrentMRUSize */
    UBOOL8    DNSEnabled;	/**< DNSEnabled */
    UBOOL8    DNSOverrideAllowed;	/**< DNSOverrideAllowed */
    char *    DNSServers;	/**< DNSServers */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressOverride;	/**< MACAddressOverride */
    char *    transportType;	/**< TransportType */
    char *    PPPoEServiceName;	/**< PPPoEServiceName */
    char *    connectionTrigger;	/**< ConnectionTrigger */
    char *    routeProtocolRx;	/**< RouteProtocolRx */
    UINT32    PPPLCPEcho;	/**< PPPLCPEcho */
    UINT32    PPPLCPEchoRetry;	/**< PPPLCPEchoRetry */
    UINT32    portMappingNumberOfEntries;	/**< PortMappingNumberOfEntries */
    UBOOL8    X_404A03_IPv6Enabled;	/**< X_404A03_IPv6Enabled */
    UBOOL8    X_404A03_IPv4Enabled;	/**< X_404A03_IPv4Enabled */
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_UnnumberedModel;	/**< X_404A03_UnnumberedModel */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6ConnStatus;	/**< X_404A03_IPv6ConnStatus */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_IPv6PppUp;	/**< X_404A03_IPv6PppUp */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6AddressingType;	/**< X_404A03_IPv6AddressingType */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_Dhcp6cForAddress;	/**< X_404A03_Dhcp6cForAddress */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_Dhcp6cForPrefixDelegation;	/**< X_404A03_Dhcp6cForPrefixDelegation */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_ExternalIPv6Address;	/**< X_404A03_ExternalIPv6Address */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_DefaultIPv6Gateway;	/**< X_404A03_DefaultIPv6Gateway */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6DNSServers;	/**< X_404A03_IPv6DNSServers */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6DomainName;	/**< X_404A03_IPv6DomainName */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_IPv6PrefixDelegationEnabled;	/**< X_404A03_IPv6PrefixDelegationEnabled */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6SitePrefix;	/**< X_404A03_IPv6SitePrefix */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6SitePrefixPltime;	/**< X_404A03_IPv6SitePrefixPltime */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6SitePrefixVltime;	/**< X_404A03_IPv6SitePrefixVltime */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UINT32    X_404A03_Dhcp6cPid;	/**< X_404A03_Dhcp6cPid */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_MLDEnabled;	/**< X_404A03_MLDEnabled */
#endif
#ifdef DMP_X_404A03_AUTODETECTION_1
    UBOOL8    X_404A03_LastConnected;	/**< X_404A03_LastConnected */
#endif
#ifdef DMP_X_404A03_AUTODETECTION_1
    UBOOL8    X_404A03_StopPppD;	/**< X_404A03_StopPppD */
#endif
    UBOOL8    X_404A03_AuthRetry;	/**< X_404A03_AuthRetry */
    UINT32    X_404A03_AuthRetryInterval;	/**< X_404A03_AuthRetryInterval */
    UINT32    X_404A03_MaxMTUSize;	/**< X_404A03_MaxMTUSize */
    char *    X_404A03_BcastAddr;	/**< X_404A03_BcastAddr */
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_IPv6DNSType;	/**< X_404A03_IPv6DNSType */
#endif
    UBOOL8    X_404A03_DelayApply;	/**< X_404A03_DelayApply */
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    statefulDHCPv6Client;	/**< statefulDHCPv6Client */
#endif
    UBOOL8    X_404A03_Reauthenticate;	/**< X_404A03_Reauthenticate */
#ifdef DMP_X_404A03_IPV6_1
    UINT32    X_404A03_ExternalIPv6AddressPrefixLength;	/**< X_404A03_ExternalIPv6AddressPrefixLength */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_6rdTunnelEnabled;	/**< X_404A03_6rdTunnelEnabled */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_6rdTunnelType;	/**< X_404A03_6rdTunnelType */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_6rdTunnelEndpointAddr;	/**< X_404A03_6rdTunnelEndpointAddr */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_6rdTunnelPrefix;	/**< X_404A03_6rdTunnelPrefix */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6WanMode;	/**< X_404A03_IPv6WanMode */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_6rdTunnelMaskLen;	/**< X_404A03_6rdTunnelMaskLen */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_6rdTunnelPrefixLen;	/**< X_404A03_6rdTunnelPrefixLen */
#endif
#ifdef DMP_X_404A03_IPV6_1
    UBOOL8    X_404A03_DsLiteTunnelEnabled;	/**< X_404A03_DsLiteTunnelEnabled */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_DsLiteTunnelRelayServer;	/**< X_404A03_DsLiteTunnelRelayServer */
#endif
#ifdef DMP_X_404A03_IPV6_1
    char *    X_404A03_DsLiteTunnelLocalAddr;	/**< X_404A03_DsLiteTunnelLocalAddr */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6ConnectionEstablishedTime;	/**< X_404A03_IPv6ConnectionEstablishedTime */
#endif
#ifdef DMP_X_404A03_IPV6_1
    SINT32    X_404A03_IPv6Uptime;	/**< X_404A03_IPv6Uptime */
#endif
} WanPppConnObject;

/*! \brief _WanPppConnObject is used internally to represent WanPppConnObject */
typedef WanPppConnObject _WanPppConnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.PortMapping.{i}.
 *
 * MDMOID_WAN_PPP_CONN_PORTMAPPING 183
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    X_404A03_ExpiryTime;	/**< X_404A03_ExpiryTime */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    X_404A03_ExternalPortEnd;	/**< X_404A03_ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    X_404A03_InternalPortEnd;	/**< X_404A03_InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
    char *    X_404A03_AppName;	/**< X_404A03_AppName */
    UINT32    externalPortEndRange;	/**< ExternalPortEndRange */
    UINT32    X_404A03_RuleSource;	/**< X_404A03_RuleSource */
    UINT32    X_404A03_isConfigDone;	/**< X_404A03_isConfigDone */
} WanPppConnPortmappingObject;

/*! \brief _WanPppConnPortmappingObject is used internally to represent WanPppConnPortmappingObject */
typedef WanPppConnPortmappingObject _WanPppConnPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.X_404A03_UPNPPortMappingRule.{i}.
 *
 * MDMOID_UPNP_PPP_PORTMAPPING 184
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    externalPortEnd;	/**< ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    internalPortEnd;	/**< InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
} UPNPPppPortmappingObject;

/*! \brief _UPNPPppPortmappingObject is used internally to represent UPNPPppPortmappingObject */
typedef UPNPPppPortmappingObject _UPNPPppPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.X_404A03_PortTriggering.{i}.
 *
 * MDMOID_WAN_PPP_CONN_PORT_TRIGGERING 185
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    triggerProtocol;	/**< TriggerProtocol */
    char *    openProtocol;	/**< OpenProtocol */
    UINT32    triggerPortStart;	/**< TriggerPortStart */
    UINT32    triggerPortEnd;	/**< TriggerPortEnd */
    UINT32    openPortStart;	/**< OpenPortStart */
    UINT32    openPortEnd;	/**< OpenPortEnd */
} WanPppConnPortTriggeringObject;

/*! \brief _WanPppConnPortTriggeringObject is used internally to represent WanPppConnPortTriggeringObject */
typedef WanPppConnPortTriggeringObject _WanPppConnPortTriggeringObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.X_404A03_FirewallException.{i}.
 *
 * MDMOID_WAN_PPP_CONN_FIREWALL_EXCEPTION 186
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} WanPppConnFirewallExceptionObject;

/*! \brief _WanPppConnFirewallExceptionObject is used internally to represent WanPppConnFirewallExceptionObject */
typedef WanPppConnFirewallExceptionObject _WanPppConnFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats.
 *
 * MDMOID_WAN_PPP_CONN_STATS 187
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_404A03_RxDrops;	/**< X_404A03_RxDrops */
    UINT32    X_404A03_TxDrops;	/**< X_404A03_TxDrops */
    UINT32    X_404A03_RxErrors;	/**< X_404A03_RxErrors */
    UINT32    X_404A03_TxErrors;	/**< X_404A03_TxErrors */
    UINT32    ethernetBytesSent;	/**< EthernetBytesSent */
    UINT32    ethernetBytesReceived;	/**< EthernetBytesReceived */
    UINT32    ethernetPacketsSent;	/**< EthernetPacketsSent */
    UINT32    ethernetPacketsReceived;	/**< EthernetPacketsReceived */
} WanPppConnStatsObject;

/*! \brief _WanPppConnStatsObject is used internally to represent WanPppConnStatsObject */
typedef WanPppConnStatsObject _WanPppConnStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_404A03_WANIPv6Connection.{i}.
 *
 * MDMOID_WAN_IPV6_CONN 188
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UBOOL8    reset;	/**< Reset */
    char *    addressingType;	/**< AddressingType */
    char *    connectionStatus;	/**< ConnectionStatus */
    UINT32    uptime;	/**< Uptime */
    char *    externalIPv6Address;	/**< ExternalIPv6Address */
    UINT32    externalIPv6PrefixLength;	/**< ExternalIPv6PrefixLength */
    char *    externalIPv6DefaultGateway;	/**< ExternalIPv6DefaultGateway */
    char *    DNSServers;	/**< DNSServers */
    char *    MACAddress;	/**< MACAddress */
    UINT32    X_404A03_6rdIPv4MaskLen;	/**< X_404A03_6rdIPv4MaskLen */
    char *    X_404A03_6rdPrefix;	/**< X_404A03_6rdPrefix */
    UINT32    X_404A03_6rdPrefixLen;	/**< X_404A03_6rdPrefixLen */
    char *    X_404A03_6rdDelegatedPrefix;	/**< X_404A03_6rdDelegatedPrefix */
    char *    X_404A03_6rdBRIPv4Address;	/**< X_404A03_6rdBRIPv4Address */
    UINT32    X_404A03_6rdTunnelMTU;	/**< X_404A03_6rdTunnelMTU */
} WanIpv6ConnObject;

/*! \brief _WanIpv6ConnObject is used internally to represent WanIpv6ConnObject */
typedef WanIpv6ConnObject _WanIpv6ConnObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_VlanAutoHunt.
 *
 * MDMOID_VLAN_AUTO_HUNT 189
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    maxNumOfRetry;	/**< MaxNumOfRetry */
    UBOOL8    debugMode;	/**< DebugMode */
    SINT32    huntedProto;	/**< HuntedProto */
} VlanAutoHuntObject;

/*! \brief _VlanAutoHuntObject is used internally to represent VlanAutoHuntObject */
typedef VlanAutoHuntObject _VlanAutoHuntObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_VlanAutoHunt.VlanHuntInfo.{i}.
 *
 * MDMOID_VLAN_HUNT_INFO 190
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    WANName;	/**< WANName */
    char *    layer2Type;	/**< Layer2Type */
    UBOOL8    isHunted;	/**< IsHunted */
    SINT32    vlanidHunted;	/**< VlanidHunted */
    SINT32    vpiHunted;	/**< VpiHunted */
    SINT32    vciHunted;	/**< VciHunted */
} VlanHuntInfoObject;

/*! \brief _VlanHuntInfoObject is used internally to represent VlanHuntInfoObject */
typedef VlanHuntInfoObject _VlanHuntInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_VlanAutoHunt.HuntWAN.{i}.VlanHuntRule.{i}.
 *
 * MDMOID_VLAN_HUNT_RULE 191
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    vlanid;	/**< Vlanid */
    SINT32    vpi;	/**< Vpi */
    SINT32    vci;	/**< Vci */
    SINT32    proto;	/**< Proto */
} VlanHuntRuleObject;

/*! \brief _VlanHuntRuleObject is used internally to represent VlanHuntRuleObject */
typedef VlanHuntRuleObject _VlanHuntRuleObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer3Forwarding.
 *
 * MDMOID_L3_FORWARDING 192
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    defaultConnectionService;	/**< DefaultConnectionService */
    char *    X_404A03_IPv6DefaultConnectionService;	/**< X_404A03_IPv6DefaultConnectionService */
    UINT32    forwardNumberOfEntries;	/**< ForwardNumberOfEntries */
    char *    X_404A03_DefaultConnectionServices;	/**< X_404A03_DefaultConnectionServices */
    char *    X_404A03_ActiveDefaultGateway;	/**< X_404A03_ActiveDefaultGateway */
} L3ForwardingObject;

/*! \brief _L3ForwardingObject is used internally to represent L3ForwardingObject */
typedef L3ForwardingObject _L3ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}.
 *
 * MDMOID_L3_FORWARDING_ENTRY 193
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    type;	/**< Type */
    char *    X_404A03_PolicyRoutingName;	/**< X_404A03_PolicyRoutingName */
    char *    destIPAddress;	/**< DestIPAddress */
    char *    destSubnetMask;	/**< DestSubnetMask */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceSubnetMask;	/**< SourceSubnetMask */
    char *    X_404A03_SourceIfName;	/**< X_404A03_SourceIfName */
#ifdef DMP_QOS_1
    SINT32    forwardingPolicy;	/**< ForwardingPolicy */
#endif
    char *    gatewayIPAddress;	/**< GatewayIPAddress */
    char *    interface;	/**< Interface */
    SINT32    forwardingMetric;	/**< ForwardingMetric */
    UINT32    MTU;	/**< MTU */
} L3ForwardingEntryObject;

/*! \brief _L3ForwardingEntryObject is used internally to represent L3ForwardingEntryObject */
typedef L3ForwardingEntryObject _L3ForwardingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPv6Layer3Forwarding.
 *
 * MDMOID_I_PV6_L3_FORWARDING 194
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    defaultConnectionService;	/**< DefaultConnectionService */
    UINT32    forwardNumberOfEntries;	/**< ForwardNumberOfEntries */
} IPv6L3ForwardingObject;

/*! \brief _IPv6L3ForwardingObject is used internally to represent IPv6L3ForwardingObject */
typedef IPv6L3ForwardingObject _IPv6L3ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPv6Layer3Forwarding.IPv6Forwarding.{i}.
 *
 * MDMOID_I_PV6_L3_FORWARDING_ENTRY 195
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    type;	/**< Type */
    char *    policyRoutingName;	/**< PolicyRoutingName */
    char *    destIPv6Address;	/**< DestIPv6Address */
    char *    sourceIPv6Address;	/**< SourceIPv6Address */
    char *    sourceIfName;	/**< SourceIfName */
    SINT32    forwardingPolicy;	/**< ForwardingPolicy */
    char *    gatewayIPv6Address;	/**< GatewayIPv6Address */
    char *    interface;	/**< Interface */
    SINT32    forwardingMetric;	/**< ForwardingMetric */
    UINT32    MTU;	/**< MTU */
} IPv6L3ForwardingEntryObject;

/*! \brief _IPv6L3ForwardingEntryObject is used internally to represent IPv6L3ForwardingEntryObject */
typedef IPv6L3ForwardingEntryObject _IPv6L3ForwardingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.
 *
 * MDMOID_SERVICES 196
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} ServicesObject;

/*! \brief _ServicesObject is used internally to represent ServicesObject */
typedef ServicesObject _ServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.
 *
 * MDMOID_STORAGE_SERVICE 197
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    physicalMediumNumberOfEntries;	/**< PhysicalMediumNumberOfEntries */
    UINT32    logicalVolumeNumberOfEntries;	/**< LogicalVolumeNumberOfEntries */
    UINT32    userAccountNumberOfEntries;	/**< UserAccountNumberOfEntries */
} StorageServiceObject;

/*! \brief _StorageServiceObject is used internally to represent StorageServiceObject */
typedef StorageServiceObject _StorageServiceObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.UserAccount.{i}.
 *
 * MDMOID_USER_ACCOUNT 198
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    X_BROADCOM_volumeName;	/**< X_BROADCOM_volumeName */
} UserAccountObject;

/*! \brief _UserAccountObject is used internally to represent UserAccountObject */
typedef UserAccountObject _UserAccountObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.Capabilites.
 *
 * MDMOID_CAPABILITES 199
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    FTPCapable;	/**< FTPCapable */
    UBOOL8    SFTPCapable;	/**< SFTPCapable */
    UBOOL8    HTTPCapable;	/**< HTTPCapable */
    UBOOL8    HTTPSCapable;	/**< HTTPSCapable */
    UBOOL8    HTTPWritable;	/**< HTTPWritable */
    char *    supportedNetworkProtocols;	/**< SupportedNetworkProtocols */
    char *    supportedFileSystemTypes;	/**< SupportedFileSystemTypes */
    UBOOL8    volumeEncryptionCapable;	/**< VolumeEncryptionCapable */
} CapabilitesObject;

/*! \brief _CapabilitesObject is used internally to represent CapabilitesObject */
typedef CapabilitesObject _CapabilitesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.NetInfo.
 *
 * MDMOID_NETWORK_INFO 200
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    hostName;	/**< HostName */
    char *    domainName;	/**< DomainName */
} NetworkInfoObject;

/*! \brief _NetworkInfoObject is used internally to represent NetworkInfoObject */
typedef NetworkInfoObject _NetworkInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.NetworkServer.
 *
 * MDMOID_NETWORK_SERVER 201
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    AFPEnable;	/**< AFPEnable */
    UBOOL8    NFSEnable;	/**< NFSEnable */
    UBOOL8    SMBEnable;	/**< SMBEnable */
    UBOOL8    networkProtocolAuthReq;	/**< NetworkProtocolAuthReq */
} NetworkServerObject;

/*! \brief _NetworkServerObject is used internally to represent NetworkServerObject */
typedef NetworkServerObject _NetworkServerObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.PhysicalMedium.{i}.
 *
 * MDMOID_PHYSICAL_MEDIUM 202
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    connectionType;	/**< ConnectionType */
    UBOOL8    removable;	/**< Removable */
    UINT32    capacity;	/**< Capacity */
    char *    status;	/**< Status */
} PhysicalMediumObject;

/*! \brief _PhysicalMediumObject is used internally to represent PhysicalMediumObject */
typedef PhysicalMediumObject _PhysicalMediumObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.LogicalVolume.{i}.
 *
 * MDMOID_LOGICAL_VOLUME 203
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    status;	/**< Status */
    UBOOL8    enable;	/**< Enable */
    char *    physicalReference;	/**< PhysicalReference */
    char *    fileSystem;	/**< FileSystem */
    UINT32    capacity;	/**< Capacity */
    UINT32    usedSpace;	/**< UsedSpace */
    UBOOL8    encrypted;	/**< Encrypted */
    UINT32    folderNumberOfEntries;	/**< FolderNumberOfEntries */
} LogicalVolumeObject;

/*! \brief _LogicalVolumeObject is used internally to represent LogicalVolumeObject */
typedef LogicalVolumeObject _LogicalVolumeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.LogicalVolume.{i}.Folder.{i}.
 *
 * MDMOID_FOLDER 204
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    UBOOL8    enable;	/**< Enable */
    UINT32    userAccountAccess;	/**< UserAccountAccess */
} FolderObject;

/*! \brief _FolderObject is used internally to represent FolderObject */
typedef FolderObject _FolderObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.
 *
 * MDMOID_VOICE 205
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    voiceProfileNumberOfEntries;	/**< VoiceProfileNumberOfEntries */
    char *    X_404A03_BoundIfName;	/**< X_404A03_BoundIfName */
    char *    X_404A03_BoundIpAddr;	/**< X_404A03_BoundIpAddr */
    char *    X_404A03_IpAddressFamily;	/**< X_404A03_IpAddressFamily */
    char *    X_404A03_LoggingLevel;	/**< X_404A03_LoggingLevel */
    char *    X_404A03_LoggingDestination;	/**< X_404A03_LoggingDestination */
    char *    X_404A03_CCTKTraceLevel;	/**< X_404A03_CCTKTraceLevel */
    char *    X_404A03_CCTKTraceGroup;	/**< X_404A03_CCTKTraceGroup */
#ifdef DMP_X_404A03_DECTENDPOINT_1
    char *    X_404A03_DectEepromData;	/**< X_404A03_DectEepromData */
#endif
    char *    X_404A03_ManagementProtocol;	/**< X_404A03_ManagementProtocol */
} VoiceObject;

/*! \brief _VoiceObject is used internally to represent VoiceObject */
typedef VoiceObject _VoiceObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.
 *
 * MDMOID_VOICE_CALL_LIST 206
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceCallListObject;

/*! \brief _VoiceCallListObject is used internally to represent VoiceCallListObject */
typedef VoiceCallListObject _VoiceCallListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.NewFlag.
 *
 * MDMOID_VOICE_CALL_NEW_FLAG 207
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UBOOL8    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceCallNewFlagObject;

/*! \brief _VoiceCallNewFlagObject is used internally to represent VoiceCallNewFlagObject */
typedef VoiceCallNewFlagObject _VoiceCallNewFlagObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.NumberOfMissedCalls.
 *
 * MDMOID_VOICE_CALL_NUMBER_OF_MISSED_CALLS 208
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceCallNumberOfMissedCallsObject;

/*! \brief _VoiceCallNumberOfMissedCallsObject is used internally to represent VoiceCallNumberOfMissedCallsObject */
typedef VoiceCallNumberOfMissedCallsObject _VoiceCallNumberOfMissedCallsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.Number.
 *
 * MDMOID_VOICE_CALL_NUMBER 209
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UBOOL8    internal;	/**< Internal */
    UBOOL8    own;	/**< Own */
} VoiceCallNumberObject;

/*! \brief _VoiceCallNumberObject is used internally to represent VoiceCallNumberObject */
typedef VoiceCallNumberObject _VoiceCallNumberObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.Name.
 *
 * MDMOID_VOICE_CALL_NAME 210
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceCallNameObject;

/*! \brief _VoiceCallNameObject is used internally to represent VoiceCallNameObject */
typedef VoiceCallNameObject _VoiceCallNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.DateTime.
 *
 * MDMOID_VOICE_CALL_DATE_TIME 211
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    DATETIME  element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceCallDateTimeObject;

/*! \brief _VoiceCallDateTimeObject is used internally to represent VoiceCallDateTimeObject */
typedef VoiceCallDateTimeObject _VoiceCallDateTimeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.LineName.
 *
 * MDMOID_VOICE_CALL_LINE_NAME 212
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceCallLineNameObject;

/*! \brief _VoiceCallLineNameObject is used internally to represent VoiceCallLineNameObject */
typedef VoiceCallLineNameObject _VoiceCallLineNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.LineId.
 *
 * MDMOID_VOICE_CALL_LINE_ID 213
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UINT32    subType;	/**< SubType */
} VoiceCallLineIdObject;

/*! \brief _VoiceCallLineIdObject is used internally to represent VoiceCallLineIdObject */
typedef VoiceCallLineIdObject _VoiceCallLineIdObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Call.{i}.CallType.
 *
 * MDMOID_VOICE_CALL_TYPE 214
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceCallTypeObject;

/*! \brief _VoiceCallTypeObject is used internally to represent VoiceCallTypeObject */
typedef VoiceCallTypeObject _VoiceCallTypeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_InternalName.{i}.
 *
 * MDMOID_VOICE_INTERNAL_NAME_LIST 215
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceInternalNameListObject;

/*! \brief _VoiceInternalNameListObject is used internally to represent VoiceInternalNameListObject */
typedef VoiceInternalNameListObject _VoiceInternalNameListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_InternalName.{i}.TerminalNumber.
 *
 * MDMOID_VOICE_TERMINAL_NUMBER 216
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceTerminalNumberObject;

/*! \brief _VoiceTerminalNumberObject is used internally to represent VoiceTerminalNumberObject */
typedef VoiceTerminalNumberObject _VoiceTerminalNumberObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_InternalName.{i}.Name.
 *
 * MDMOID_VOICE_INTERNAL_NAME 217
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceInternalNameObject;

/*! \brief _VoiceInternalNameObject is used internally to represent VoiceInternalNameObject */
typedef VoiceInternalNameObject _VoiceInternalNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Contact.{i}.
 *
 * MDMOID_VOICE_CONTACT_LIST 218
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceContactListObject;

/*! \brief _VoiceContactListObject is used internally to represent VoiceContactListObject */
typedef VoiceContactListObject _VoiceContactListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Contact.{i}.Name.
 *
 * MDMOID_VOICE_CONTACT_NAME 219
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceContactNameObject;

/*! \brief _VoiceContactNameObject is used internally to represent VoiceContactNameObject */
typedef VoiceContactNameObject _VoiceContactNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Contact.{i}.FirstName.
 *
 * MDMOID_VOICE_CONTACT_FIRST_NAME 220
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceContactFirstNameObject;

/*! \brief _VoiceContactFirstNameObject is used internally to represent VoiceContactFirstNameObject */
typedef VoiceContactFirstNameObject _VoiceContactFirstNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Contact.{i}.ContactNumber.
 *
 * MDMOID_VOICE_CONTACT_NUMBER 221
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UBOOL8    defaultNumber;	/**< DefaultNumber */
    UBOOL8    own;	/**< Own */
    UINT32    numberType;	/**< NumberType */
} VoiceContactNumberObject;

/*! \brief _VoiceContactNumberObject is used internally to represent VoiceContactNumberObject */
typedef VoiceContactNumberObject _VoiceContactNumberObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Contact.{i}.Melody.
 *
 * MDMOID_VOICE_CONTACT_MELODY 222
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceContactMelodyObject;

/*! \brief _VoiceContactMelodyObject is used internally to represent VoiceContactMelodyObject */
typedef VoiceContactMelodyObject _VoiceContactMelodyObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Contact.{i}.LineId.
 *
 * MDMOID_VOICE_CONTACT_LINE_ID 223
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UINT32    lineIdSubType;	/**< LineIdSubType */
} VoiceContactLineIdObject;

/*! \brief _VoiceContactLineIdObject is used internally to represent VoiceContactLineIdObject */
typedef VoiceContactLineIdObject _VoiceContactLineIdObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_SupportList.{i}.
 *
 * MDMOID_VOICE_DECT_SUPPORT_LIST 224
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    supported;	/**< Supported */
} VoiceDectSupportListObject;

/*! \brief _VoiceDectSupportListObject is used internally to represent VoiceDectSupportListObject */
typedef VoiceDectSupportListObject _VoiceDectSupportListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.
 *
 * MDMOID_VOICE_CAP 225
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxProfileCount;	/**< MaxProfileCount */
    UINT32    maxLineCount;	/**< MaxLineCount */
    UINT32    maxSessionsPerLine;	/**< MaxSessionsPerLine */
    UINT32    maxSessionCount;	/**< MaxSessionCount */
    char *    signalingProtocols;	/**< SignalingProtocols */
    char *    regions;	/**< Regions */
    UBOOL8    RTCP;	/**< RTCP */
    UBOOL8    SRTP;	/**< SRTP */
    UBOOL8    RTPRedundancy;	/**< RTPRedundancy */
    UBOOL8    DSCPCoupled;	/**< DSCPCoupled */
    UBOOL8    ethernetTaggingCoupled;	/**< EthernetTaggingCoupled */
    UBOOL8    PSTNSoftSwitchOver;	/**< PSTNSoftSwitchOver */
    UBOOL8    faxT38;	/**< FaxT38 */
    UBOOL8    faxPassThrough;	/**< FaxPassThrough */
    UBOOL8    modemPassThrough;	/**< ModemPassThrough */
    UBOOL8    toneGeneration;	/**< ToneGeneration */
    UBOOL8    ringGeneration;	/**< RingGeneration */
    UBOOL8    digitMap;	/**< DigitMap */
    UBOOL8    numberingPlan;	/**< NumberingPlan */
    UBOOL8    buttonMap;	/**< ButtonMap */
    UBOOL8    voicePortTests;	/**< VoicePortTests */
} VoiceCapObject;

/*! \brief _VoiceCapObject is used internally to represent VoiceCapObject */
typedef VoiceCapObject _VoiceCapObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.SIP.
 *
 * MDMOID_VOICE_CAP_SIP 226
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    role;	/**< Role */
    char *    extensions;	/**< Extensions */
    char *    transports;	/**< Transports */
    char *    URISchemes;	/**< URISchemes */
    UBOOL8    eventSubscription;	/**< EventSubscription */
    UBOOL8    responseMap;	/**< ResponseMap */
    char *    TLSKeyExchangeProtocols;	/**< TLSKeyExchangeProtocols */
} VoiceCapSipObject;

/*! \brief _VoiceCapSipObject is used internally to represent VoiceCapSipObject */
typedef VoiceCapSipObject _VoiceCapSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.MGCP.
 *
 * MDMOID_VOICE_CAP_MGCP 227
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    extensions;	/**< Extensions */
} VoiceCapMgcpObject;

/*! \brief _VoiceCapMgcpObject is used internally to represent VoiceCapMgcpObject */
typedef VoiceCapMgcpObject _VoiceCapMgcpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.Codecs.{i}.
 *
 * MDMOID_VOICE_CAP_CODECS 228
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    char *    codec;	/**< Codec */
    UINT32    bitRate;	/**< BitRate */
    char *    packetizationPeriod;	/**< PacketizationPeriod */
    UBOOL8    silenceSuppression;	/**< SilenceSuppression */
} VoiceCapCodecsObject;

/*! \brief _VoiceCapCodecsObject is used internally to represent VoiceCapCodecsObject */
typedef VoiceCapCodecsObject _VoiceCapCodecsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.
 *
 * MDMOID_VOICE_PROF 229
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    enable;	/**< Enable */
    UBOOL8    reset;	/**< Reset */
    UINT32    numberOfLines;	/**< NumberOfLines */
    char *    name;	/**< Name */
    char *    signalingProtocol;	/**< SignalingProtocol */
    UINT32    maxSessions;	/**< MaxSessions */
    char *    DTMFMethod;	/**< DTMFMethod */
    char *    DTMFMethodG711;	/**< DTMFMethodG711 */
    char *    X_404A03_HookFlashMethod;	/**< X_404A03_HookFlashMethod */
    char *    region;	/**< Region */
    char *    digitMap;	/**< DigitMap */
    UBOOL8    digitMapEnable;	/**< DigitMapEnable */
    UBOOL8    STUNEnable;	/**< STUNEnable */
    char *    STUNServer;	/**< STUNServer */
    UINT32    X_404A03_STUNServerPort;	/**< X_404A03_STUNServerPort */
    char *    X_404A03_LogServer;	/**< X_404A03_LogServer */
    UINT32    X_404A03_LogServerPort;	/**< X_404A03_LogServerPort */
    UINT32    X_404A03_SPNum;	/**< X_404A03_SPNum */
    UBOOL8    X_404A03_V18_Support;	/**< X_404A03_V18_Support */
    UINT32    X_404A03_CriticalDigitTimer;	/**< X_404A03_CriticalDigitTimer */
    UINT32    X_404A03_PartialDigitTimer;	/**< X_404A03_PartialDigitTimer */
} VoiceProfObject;

/*! \brief _VoiceProfObject is used internally to represent VoiceProfObject */
typedef VoiceProfObject _VoiceProfObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.ServiceProviderInfo.
 *
 * MDMOID_VOICE_PROF_PROVIDER 230
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
} VoiceProfProviderObject;

/*! \brief _VoiceProfProviderObject is used internally to represent VoiceProfProviderObject */
typedef VoiceProfProviderObject _VoiceProfProviderObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.SIP.
 *
 * MDMOID_VOICE_PROF_SIP 231
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    proxyServer;	/**< ProxyServer */
    UINT32    proxyServerPort;	/**< ProxyServerPort */
    char *    proxyServerTransport;	/**< ProxyServerTransport */
    char *    registrarServer;	/**< RegistrarServer */
    UINT32    registrarServerPort;	/**< RegistrarServerPort */
    char *    registrarServerTransport;	/**< RegistrarServerTransport */
    UBOOL8    X_404A03_ToTagMatching;	/**< X_404A03_ToTagMatching */
    char *    X_404A03_MusicServer;	/**< X_404A03_MusicServer */
    UINT32    X_404A03_MusicServerPort;	/**< X_404A03_MusicServerPort */
    char *    userAgentDomain;	/**< UserAgentDomain */
    UINT32    userAgentPort;	/**< UserAgentPort */
    char *    userAgentTransport;	/**< UserAgentTransport */
    char *    outboundProxy;	/**< OutboundProxy */
    UINT32    outboundProxyPort;	/**< OutboundProxyPort */
    char *    organization;	/**< Organization */
    UINT32    registrationPeriod;	/**< RegistrationPeriod */
    UINT32    timerB;	/**< TimerB */
    UINT32    timerF;	/**< TimerF */
    UINT32    registerExpires;	/**< RegisterExpires */
    UINT32    registerRetryInterval;	/**< RegisterRetryInterval */
    UINT32    DSCPMark;	/**< DSCPMark */
    SINT32    VLANIDMark;	/**< VLANIDMark */
    SINT32    ethernetPriorityMark;	/**< EthernetPriorityMark */
} VoiceProfSipObject;

/*! \brief _VoiceProfSipObject is used internally to represent VoiceProfSipObject */
typedef VoiceProfSipObject _VoiceProfSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.SIP.EventSubscribe.{i}.
 *
 * MDMOID_VOICE_PROF_SIP_SUBSCRIBE 232
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    event;	/**< Event */
    char *    notifier;	/**< Notifier */
    UINT32    notifierPort;	/**< NotifierPort */
    char *    notifierTransport;	/**< NotifierTransport */
} VoiceProfSipSubscribeObject;

/*! \brief _VoiceProfSipSubscribeObject is used internally to represent VoiceProfSipSubscribeObject */
typedef VoiceProfSipSubscribeObject _VoiceProfSipSubscribeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.MGCP.
 *
 * MDMOID_VOICE_PROF_MGCP 233
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    callAgent1;	/**< CallAgent1 */
    char *    user;	/**< User */
} VoiceProfMgcpObject;

/*! \brief _VoiceProfMgcpObject is used internally to represent VoiceProfMgcpObject */
typedef VoiceProfMgcpObject _VoiceProfMgcpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.RTP.
 *
 * MDMOID_VOICE_PROF_RTP 234
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    localPortMin;	/**< LocalPortMin */
    UINT32    localPortMax;	/**< LocalPortMax */
    UINT32    DSCPMark;	/**< DSCPMark */
    UINT32    telephoneEventPayloadType;	/**< TelephoneEventPayloadType */
} VoiceProfRtpObject;

/*! \brief _VoiceProfRtpObject is used internally to represent VoiceProfRtpObject */
typedef VoiceProfRtpObject _VoiceProfRtpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.RTP.SRTP.
 *
 * MDMOID_VOICE_PROF_RTP_SRTP 235
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
} VoiceProfRtpSrtpObject;

/*! \brief _VoiceProfRtpSrtpObject is used internally to represent VoiceProfRtpSrtpObject */
typedef VoiceProfRtpSrtpObject _VoiceProfRtpSrtpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.FaxT38.
 *
 * MDMOID_VOICE_PROF_FAX_T38 236
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    bitRate;	/**< BitRate */
    UINT32    highSpeedPacketRate;	/**< HighSpeedPacketRate */
} VoiceProfFaxT38Object;

/*! \brief _VoiceProfFaxT38Object is used internally to represent VoiceProfFaxT38Object */
typedef VoiceProfFaxT38Object _VoiceProfFaxT38Object;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.
 *
 * MDMOID_VOICE_LINE 237
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    enable;	/**< Enable */
    char *    directoryNumber;	/**< DirectoryNumber */
    char *    status;	/**< Status */
    char *    callState;	/**< CallState */
#ifdef DMP_TAENDPOINT_1
    char *    phyReferenceList;	/**< PhyReferenceList */
#endif
    char *    X_404A03_NonFxsPhyReferenceList;	/**< X_404A03_NonFxsPhyReferenceList */
    UINT32    X_404A03_CMAcntNum;	/**< X_404A03_CMAcntNum */
    char *    X_404A03_AssociatedNonFxsPhyIntfType;	/**< X_404A03_AssociatedNonFxsPhyIntfType */
} VoiceLineObject;

/*! \brief _VoiceLineObject is used internally to represent VoiceLineObject */
typedef VoiceLineObject _VoiceLineObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.SIP.
 *
 * MDMOID_VOICE_LINE_SIP 238
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    authUserName;	/**< AuthUserName */
    char *    authPassword;	/**< AuthPassword */
    char *    URI;	/**< URI */
} VoiceLineSipObject;

/*! \brief _VoiceLineSipObject is used internally to represent VoiceLineSipObject */
typedef VoiceLineSipObject _VoiceLineSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.CallingFeatures.
 *
 * MDMOID_VOICE_LINE_CALLING_FEATURES 239
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    callerIDEnable;	/**< CallerIDEnable */
    char *    callerIDName;	/**< CallerIDName */
    UBOOL8    callWaitingEnable;	/**< CallWaitingEnable */
    UBOOL8    X_404A03_CallWaitingStart;	/**< X_404A03_CallWaitingStart */
    char *    callWaitingStatus;	/**< CallWaitingStatus */
    UINT32    maxSessions;	/**< MaxSessions */
    UBOOL8    callForwardUnconditionalEnable;	/**< CallForwardUnconditionalEnable */
    UBOOL8    X_404A03_CallForwardUnconditionalStart;	/**< X_404A03_CallForwardUnconditionalStart */
    char *    callForwardUnconditionalNumber;	/**< CallForwardUnconditionalNumber */
    UBOOL8    callForwardOnBusyEnable;	/**< CallForwardOnBusyEnable */
    UBOOL8    X_404A03_CallForwardOnBusyStart;	/**< X_404A03_CallForwardOnBusyStart */
    char *    callForwardOnBusyNumber;	/**< CallForwardOnBusyNumber */
    UBOOL8    callForwardOnNoAnswerEnable;	/**< CallForwardOnNoAnswerEnable */
    UBOOL8    X_404A03_CallForwardOnNoAnswerStart;	/**< X_404A03_CallForwardOnNoAnswerStart */
    char *    callForwardOnNoAnswerNumber;	/**< CallForwardOnNoAnswerNumber */
    UBOOL8    callTransferEnable;	/**< CallTransferEnable */
    UBOOL8    MWIEnable;	/**< MWIEnable */
    UBOOL8    anonymousCallBlockEnable;	/**< AnonymousCallBlockEnable */
    UBOOL8    X_404A03_AnonymousCallBlockStart;	/**< X_404A03_AnonymousCallBlockStart */
    UBOOL8    anonymousCallEnable;	/**< AnonymousCallEnable */
    UBOOL8    X_404A03_AnonymousCallStart;	/**< X_404A03_AnonymousCallStart */
    UBOOL8    doNotDisturbEnable;	/**< DoNotDisturbEnable */
    UBOOL8    X_404A03_DoNotDisturbStart;	/**< X_404A03_DoNotDisturbStart */
    UBOOL8    callReturnEnable;	/**< CallReturnEnable */
    UBOOL8    repeatDialEnable;	/**< RepeatDialEnable */
    UBOOL8    X_404A03_CAllCompletionOnBusyEnable;	/**< X_404A03_CAllCompletionOnBusyEnable */
    UBOOL8    X_404A03_SpeedDialEnable;	/**< X_404A03_SpeedDialEnable */
    UBOOL8    X_404A03_WarmLineEnable;	/**< X_404A03_WarmLineEnable */
    UBOOL8    X_404A03_WarmLineStart;	/**< X_404A03_WarmLineStart */
    char *    X_404A03_WarmLineNumber;	/**< X_404A03_WarmLineNumber */
    UBOOL8    X_404A03_CallBarringEnable;	/**< X_404A03_CallBarringEnable */
    char *    X_404A03_CallBarringMode;	/**< X_404A03_CallBarringMode */
    char *    X_404A03_CallBarringUserPin;	/**< X_404A03_CallBarringUserPin */
    char *    X_404A03_CallBarringDigitMap;	/**< X_404A03_CallBarringDigitMap */
    UBOOL8    X_404A03_NetworkPrivacyEnable;	/**< X_404A03_NetworkPrivacyEnable */
    UBOOL8    X_404A03_NetworkPrivacyStart;	/**< X_404A03_NetworkPrivacyStart */
    UBOOL8    X_404A03_VMWIEnable;	/**< X_404A03_VMWIEnable */
    UBOOL8    X_404A03_EnumEnable;	/**< X_404A03_EnumEnable */
    UBOOL8    X_404A03_EnumStart;	/**< X_404A03_EnumStart */
} VoiceLineCallingFeaturesObject;

/*! \brief _VoiceLineCallingFeaturesObject is used internally to represent VoiceLineCallingFeaturesObject */
typedef VoiceLineCallingFeaturesObject _VoiceLineCallingFeaturesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.VoiceProcessing.
 *
 * MDMOID_VOICE_LINE_PROCESSING 240
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    transmitGain;	/**< TransmitGain */
    SINT32    receiveGain;	/**< ReceiveGain */
    UBOOL8    echoCancellationEnable;	/**< EchoCancellationEnable */
} VoiceLineProcessingObject;

/*! \brief _VoiceLineProcessingObject is used internally to represent VoiceLineProcessingObject */
typedef VoiceLineProcessingObject _VoiceLineProcessingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Codec.
 *
 * MDMOID_VOICE_LINE_CODEC 241
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceLineCodecObject;

/*! \brief _VoiceLineCodecObject is used internally to represent VoiceLineCodecObject */
typedef VoiceLineCodecObject _VoiceLineCodecObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Codec.List.{i}.
 *
 * MDMOID_VOICE_LINE_CODEC_LIST 242
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    char *    codec;	/**< Codec */
    UINT32    bitRate;	/**< BitRate */
    char *    packetizationPeriod;	/**< PacketizationPeriod */
    UBOOL8    silenceSuppression;	/**< SilenceSuppression */
    UBOOL8    enable;	/**< Enable */
    UINT32    priority;	/**< Priority */
} VoiceLineCodecListObject;

/*! \brief _VoiceLineCodecListObject is used internally to represent VoiceLineCodecListObject */
typedef VoiceLineCodecListObject _VoiceLineCodecListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Stats.
 *
 * MDMOID_VOICE_LINE_STATS 243
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    resetStatistics;	/**< ResetStatistics */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsLost;	/**< PacketsLost */
    UINT32    incomingCallsReceived;	/**< IncomingCallsReceived */
    UINT32    incomingCallsAnswered;	/**< IncomingCallsAnswered */
    UINT32    incomingCallsConnected;	/**< IncomingCallsConnected */
    UINT32    incomingCallsFailed;	/**< IncomingCallsFailed */
    UINT32    outgoingCallsAttempted;	/**< OutgoingCallsAttempted */
    UINT32    outgoingCallsAnswered;	/**< OutgoingCallsAnswered */
    UINT32    outgoingCallsConnected;	/**< OutgoingCallsConnected */
    UINT32    outgoingCallsFailed;	/**< OutgoingCallsFailed */
    UINT32    receivePacketLossRate;	/**< ReceivePacketLossRate */
    UINT32    farEndPacketLossRate;	/**< FarEndPacketLossRate */
    UINT32    receiveInterarrivalJitter;	/**< ReceiveInterarrivalJitter */
    UINT32    farEndInterarrivalJitter;	/**< FarEndInterarrivalJitter */
    UINT32    roundTripDelay;	/**< RoundTripDelay */
    UINT32    averageReceiveInterarrivalJitter;	/**< AverageReceiveInterarrivalJitter */
    UINT32    averageFarEndInterarrivalJitter;	/**< AverageFarEndInterarrivalJitter */
    UINT32    averageRoundTripDelay;	/**< AverageRoundTripDelay */
} VoiceLineStatsObject;

/*! \brief _VoiceLineStatsObject is used internally to represent VoiceLineStatsObject */
typedef VoiceLineStatsObject _VoiceLineStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_LineSetting.
 *
 * MDMOID_VOICE_LINE_SETTING 244
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceLineSettingObject;

/*! \brief _VoiceLineSettingObject is used internally to represent VoiceLineSettingObject */
typedef VoiceLineSettingObject _VoiceLineSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.LineName.
 *
 * MDMOID_VOICE_LINE_NAME 245
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceLineNameObject;

/*! \brief _VoiceLineNameObject is used internally to represent VoiceLineNameObject */
typedef VoiceLineNameObject _VoiceLineNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.LineId.
 *
 * MDMOID_VOICE_LINE_DECT_LINE_ID 246
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceLineDectLineIdObject;

/*! \brief _VoiceLineDectLineIdObject is used internally to represent VoiceLineDectLineIdObject */
typedef VoiceLineDectLineIdObject _VoiceLineDectLineIdObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.AttachedHandset.
 *
 * MDMOID_VOICE_LINE_ATTACHED_HANDSET 247
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UINT32    totalNumber;	/**< TotalNumber */
} VoiceLineAttachedHandsetObject;

/*! \brief _VoiceLineAttachedHandsetObject is used internally to represent VoiceLineAttachedHandsetObject */
typedef VoiceLineAttachedHandsetObject _VoiceLineAttachedHandsetObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.Melody.
 *
 * MDMOID_VOICE_LINE_MELODY 248
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceLineMelodyObject;

/*! \brief _VoiceLineMelodyObject is used internally to represent VoiceLineMelodyObject */
typedef VoiceLineMelodyObject _VoiceLineMelodyObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.DialingPrefix.
 *
 * MDMOID_VOICE_LINE_DIALING_PREFIX 249
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UBOOL8    internal;	/**< Internal */
    UBOOL8    own;	/**< Own */
} VoiceLineDialingPrefixObject;

/*! \brief _VoiceLineDialingPrefixObject is used internally to represent VoiceLineDialingPrefixObject */
typedef VoiceLineDialingPrefixObject _VoiceLineDialingPrefixObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.Volumn.
 *
 * MDMOID_VOICE_LINE_VOLUMN 250
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceLineVolumnObject;

/*! \brief _VoiceLineVolumnObject is used internally to represent VoiceLineVolumnObject */
typedef VoiceLineVolumnObject _VoiceLineVolumnObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.BlockedNumber.
 *
 * MDMOID_VOICE_LINE_BLOCKED_NUMBER 251
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UBOOL8    internal;	/**< Internal */
    UBOOL8    own;	/**< Own */
} VoiceLineBlockedNumberObject;

/*! \brief _VoiceLineBlockedNumberObject is used internally to represent VoiceLineBlockedNumberObject */
typedef VoiceLineBlockedNumberObject _VoiceLineBlockedNumberObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.MultiCallMode.
 *
 * MDMOID_VOICE_LINE_MULTI_CALL_MODE 252
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UBOOL8    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceLineMultiCallModeObject;

/*! \brief _VoiceLineMultiCallModeObject is used internally to represent VoiceLineMultiCallModeObject */
typedef VoiceLineMultiCallModeObject _VoiceLineMultiCallModeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.IntrusionCall.
 *
 * MDMOID_VOICE_LINE_INTRUSION_CALL 253
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UBOOL8    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceLineIntrusionCallObject;

/*! \brief _VoiceLineIntrusionCallObject is used internally to represent VoiceLineIntrusionCallObject */
typedef VoiceLineIntrusionCallObject _VoiceLineIntrusionCallObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.CLIR.
 *
 * MDMOID_CLI_R 254
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceLineCLIRObject;

/*! \brief _VoiceLineCLIRObject is used internally to represent VoiceLineCLIRObject */
typedef VoiceLineCLIRObject _VoiceLineCLIRObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_404A03_DectLineSetting.CallForwarding.
 *
 * MDMOID_VOICE_LINE_CALL_FORWARDING 255
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
    UINT32    CFType;	/**< CFType */
} VoiceLineCallForwardingObject;

/*! \brief _VoiceLineCallForwardingObject is used internally to represent VoiceLineCallForwardingObject */
typedef VoiceLineCallForwardingObject _VoiceLineCallForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.PhyInterface.{i}.
 *
 * MDMOID_VOICE_PHY_INTF 256
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    phyPort;	/**< PhyPort */
    UINT32    interfaceID;	/**< InterfaceID */
    char *    description;	/**< Description */
} VoicePhyIntfObject;

/*! \brief _VoicePhyIntfObject is used internally to represent VoicePhyIntfObject */
typedef VoicePhyIntfObject _VoicePhyIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.PhyInterface.{i}.Tests.
 *
 * MDMOID_VOICE_PHY_INTF_TESTS 257
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    testState;	/**< TestState */
    char *    testSelector;	/**< TestSelector */
    UBOOL8    phoneConnectivity;	/**< PhoneConnectivity */
} VoicePhyIntfTestsObject;

/*! \brief _VoicePhyIntfTestsObject is used internally to represent VoicePhyIntfTestsObject */
typedef VoicePhyIntfTestsObject _VoicePhyIntfTestsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_PSTN.{i}.
 *
 * MDMOID_VOICE_PSTN 258
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    pstnPhyPort;	/**< PstnPhyPort */
    UINT32    pstnInterfaceID;	/**< PstnInterfaceID */
    char *    outgoingCallDialPlan;	/**< OutgoingCallDialPlan */
    char *    incomingCallRoutingMode;	/**< IncomingCallRoutingMode */
    char *    incomingCallRoutingDest;	/**< IncomingCallRoutingDest */
} VoicePstnObject;

/*! \brief _VoicePstnObject is used internally to represent VoicePstnObject */
typedef VoicePstnObject _VoicePstnObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Ntr.
 *
 * MDMOID_VOICE_NTR 259
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UBOOL8    autoModeEnable;	/**< AutoModeEnable */
    char *    manualOffset;	/**< ManualOffset */
    char *    manualPpm;	/**< ManualPpm */
    SINT32    manualSteps;	/**< ManualSteps */
    UBOOL8    debugEnable;	/**< DebugEnable */
    char *    pcmMipsTallyCurrent;	/**< PcmMipsTallyCurrent */
    char *    pcmMipsTallyPrevious;	/**< PcmMipsTallyPrevious */
    char *    pcmNtrTallyCurrent;	/**< PcmNtrTallyCurrent */
    char *    pcmNtrTallyPrevious;	/**< PcmNtrTallyPrevious */
    char *    dslMipsTallyCurrent;	/**< DslMipsTallyCurrent */
    char *    dslMipsTallyPrevious;	/**< DslMipsTallyPrevious */
    char *    dslNtrTallyCurrent;	/**< DslNtrTallyCurrent */
    char *    dslNtrTallyPrevious;	/**< DslNtrTallyPrevious */
    char *    sampleRate;	/**< SampleRate */
    char *    pllBandwidth;	/**< PllBandwidth */
    char *    dampingFactor;	/**< DampingFactor */
} VoiceNtrObject;

/*! \brief _VoiceNtrObject is used internally to represent VoiceNtrObject */
typedef VoiceNtrObject _VoiceNtrObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_404A03_Ntr.History.{i}.
 *
 * MDMOID_VOICE_NTR_HISTORY 260
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    autoSteps;	/**< AutoSteps */
    char *    autoOffset;	/**< AutoOffset */
    char *    autoPpm;	/**< AutoPpm */
    SINT32    autoPhaseError;	/**< AutoPhaseError */
} VoiceNtrHistoryObject;

/*! \brief _VoiceNtrHistoryObject is used internally to represent VoiceNtrHistoryObject */
typedef VoiceNtrHistoryObject _VoiceNtrHistoryObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.
 *
 * MDMOID_VOICE_DECT_SYSTEM_SETTING 261
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_404A03_FirmwareVersion;	/**< X_404A03_FirmwareVersion */
    char *    X_404A03_LinkDate;	/**< X_404A03_LinkDate */
    UINT32    X_404A03_Type;	/**< X_404A03_Type */
    char *    X_404A03_DectId;	/**< X_404A03_DectId */
    UINT32    X_404A03_MANIC;	/**< X_404A03_MANIC */
    UINT32    X_404A03_MODIC;	/**< X_404A03_MODIC */
    UINT32    numberOfHandsets;	/**< NumberOfHandsets */
    UINT32    X_404A03_MaxNumberOfHandsets;	/**< X_404A03_MaxNumberOfHandsets */
    UBOOL8    waitingSubscription;	/**< WaitingSubscription */
    UBOOL8    X_404A03_ServiceEnabled;	/**< X_404A03_ServiceEnabled */
    char *    X_404A03_AccessCode;	/**< X_404A03_AccessCode */
} VoiceDectSystemSettingObject;

/*! \brief _VoiceDectSystemSettingObject is used internally to represent VoiceDectSystemSettingObject */
typedef VoiceDectSystemSettingObject _VoiceDectSystemSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.Handset.{i}.
 *
 * MDMOID_DECT_HANDSET 262
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    IPEI;	/**< IPEI */
    DATETIME  subscriptionTime;	/**< SubscriptionTime */
    UINT32    X_404A03_MANIC;	/**< X_404A03_MANIC */
    UINT32    X_404A03_MODIC;	/**< X_404A03_MODIC */
    char *    X_404A03_IPUI;	/**< X_404A03_IPUI */
    UINT32    X_404A03_ID;	/**< X_404A03_ID */
    char *    X_404A03_Name;	/**< X_404A03_Name */
} VoiceDECTHandsetObject;

/*! \brief _VoiceDECTHandsetObject is used internally to represent VoiceDECTHandsetObject */
typedef VoiceDECTHandsetObject _VoiceDECTHandsetObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.PINCode.
 *
 * MDMOID_VOICE_DECT_PIN_CODE 263
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceDectPinCodeObject;

/*! \brief _VoiceDectPinCodeObject is used internally to represent VoiceDectPinCodeObject */
typedef VoiceDectPinCodeObject _VoiceDectPinCodeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.ClockMaster.
 *
 * MDMOID_VOICE_DECT_CLOCK_MASTER 264
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UINT32    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceDectClockMasterObject;

/*! \brief _VoiceDectClockMasterObject is used internally to represent VoiceDectClockMasterObject */
typedef VoiceDectClockMasterObject _VoiceDectClockMasterObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.ResetBase.
 *
 * MDMOID_VOICE_DECT_RESET_BASE 265
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    UBOOL8    element;	/**< Element */
    UBOOL8    editable;	/**< Editable */
} VoiceDectResetBaseObject;

/*! \brief _VoiceDectResetBaseObject is used internally to represent VoiceDectResetBaseObject */
typedef VoiceDectResetBaseObject _VoiceDectResetBaseObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.FirmwareVersion.
 *
 * MDMOID_VOICE_DECT_FIRMWARE_VERSION 266
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
} VoiceDectFirmwareVersionObject;

/*! \brief _VoiceDectFirmwareVersionObject is used internally to represent VoiceDectFirmwareVersionObject */
typedef VoiceDectFirmwareVersionObject _VoiceDectFirmwareVersionObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.HardwareVersion.
 *
 * MDMOID_VOICE_DECT_HARDWARE_VERSION 267
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
} VoiceDectHardwareVersionObject;

/*! \brief _VoiceDectHardwareVersionObject is used internally to represent VoiceDectHardwareVersionObject */
typedef VoiceDectHardwareVersionObject _VoiceDectHardwareVersionObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.EEPROMVersion.
 *
 * MDMOID_EEPROM_VERSION 268
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    elementId;	/**< ElementId */
    char *    element;	/**< Element */
} VoiceDectEEPROMVersionObject;

/*! \brief _VoiceDectEEPROMVersionObject is used internally to represent VoiceDectEEPROMVersionObject */
typedef VoiceDectEEPROMVersionObject _VoiceDectEEPROMVersionObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_SnmpCfg.
 *
 * MDMOID_SNMP_CFG 269
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    ROCommunity;	/**< ROCommunity */
    char *    RWCommunity;	/**< RWCommunity */
    char *    sysName;	/**< SysName */
    char *    sysLocation;	/**< SysLocation */
    char *    sysContact;	/**< SysContact */
    char *    trapIPAddress;	/**< TrapIPAddress */
} SnmpCfgObject;

/*! \brief _SnmpCfgObject is used internally to represent SnmpCfgObject */
typedef SnmpCfgObject _SnmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_SecDmzHostCfg.
 *
 * MDMOID_SEC_DMZ_HOST_CFG 270
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    IPAddress;	/**< IPAddress */
} SecDmzHostCfgObject;

/*! \brief _SecDmzHostCfgObject is used internally to represent SecDmzHostCfgObject */
typedef SecDmzHostCfgObject _SecDmzHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_AccessTimeRestriction.{i}.
 *
 * MDMOID_ACCESS_TIME_RESTRICTION 271
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    startTime;	/**< StartTime */
    char *    endTime;	/**< EndTime */
    char *    days;	/**< Days */
    char *    MACAddress;	/**< MACAddress */
} AccessTimeRestrictionObject;

/*! \brief _AccessTimeRestrictionObject is used internally to represent AccessTimeRestrictionObject */
typedef AccessTimeRestrictionObject _AccessTimeRestrictionObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_UrlFilterCfg.
 *
 * MDMOID_URL_FILTER_CFG 272
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    excludeMode;	/**< ExcludeMode */
} UrlFilterCfgObject;

/*! \brief _UrlFilterCfgObject is used internally to represent UrlFilterCfgObject */
typedef UrlFilterCfgObject _UrlFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_UrlFilterCfg.X_404A03_UrlFilterListCfgObj.{i}.
 *
 * MDMOID_URL_FILTER_LIST 273
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    urlAddress;	/**< UrlAddress */
    UINT32    portNumber;	/**< PortNumber */
    char *    filterName;	/**< FilterName */
    char *    sourceIPAddress;	/**< SourceIPAddress */
} UrlFilterListObject;

/*! \brief _UrlFilterListObject is used internally to represent UrlFilterListObject */
typedef UrlFilterListObject _UrlFilterListObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_DDnsCfg.{i}.
 *
 * MDMOID_D_DNS_CFG 274
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    fullyQualifiedDomainName;	/**< FullyQualifiedDomainName */
    char *    userName;	/**< UserName */
    char *    password;	/**< Password */
    char *    ifName;	/**< IfName */
    char *    providerName;	/**< ProviderName */
} DDnsCfgObject;

/*! \brief _DDnsCfgObject is used internally to represent DDnsCfgObject */
typedef DDnsCfgObject _DDnsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPPCfg.
 *
 * MDMOID_IPP_CFG 275
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    make;	/**< Make */
    char *    device;	/**< Device */
    char *    name;	/**< Name */
} IppCfgObject;

/*! \brief _IppCfgObject is used internally to represent IppCfgObject */
typedef IppCfgObject _IppCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_DLNA.
 *
 * MDMOID_DLNA 276
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} DlnaObject;

/*! \brief _DlnaObject is used internally to represent DlnaObject */
typedef DlnaObject _DlnaObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_DLNA.DmsCfg.
 *
 * MDMOID_DMS_CFG 277
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mediaPath;	/**< MediaPath */
    UINT32    brKey;	/**< BrKey */
} DmsCfgObject;

/*! \brief _DmsCfgObject is used internally to represent DmsCfgObject */
typedef DmsCfgObject _DmsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_DebugPortMirroringCfg.{i}.
 *
 * MDMOID_WAN_DEBUG_PORT_MIRRORING_CFG 278
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    monitorInterface;	/**< MonitorInterface */
    char *    mirrorInterface;	/**< MirrorInterface */
    UBOOL8    direction;	/**< Direction */
    UBOOL8    status;	/**< Status */
#ifdef DMP_X_ITU_ORG_GPON_1
    UINT32    gemPortMask;	/**< GemPortMask */
#endif
    UBOOL8    rebootState;	/**< RebootState */
} WanDebugPortMirroringCfgObject;

/*! \brief _WanDebugPortMirroringCfgObject is used internally to represent WanDebugPortMirroringCfgObject */
typedef WanDebugPortMirroringCfgObject _WanDebugPortMirroringCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPSecCfg.{i}.
 *
 * MDMOID_IP_SEC_CFG 279
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    UBOOL8    enable;	/**< Enable */
    char *    connName;	/**< ConnName */
    char *    tunMode;	/**< TunMode */
    char *    remoteGWAddress;	/**< RemoteGWAddress */
    char *    localRangeLo;	/**< LocalRangeLo */
    char *    localRangeHi;	/**< LocalRangeHi */
    char *    localIPMode;	/**< LocalIPMode */
    char *    localIPAddress;	/**< LocalIPAddress */
    char *    localMask;	/**< LocalMask */
    char *    remoteRangeLo;	/**< RemoteRangeLo */
    char *    remoteRangeHi;	/**< RemoteRangeHi */
    char *    remoteIPMode;	/**< RemoteIPMode */
    char *    remoteIPAddress;	/**< RemoteIPAddress */
    char *    remoteMask;	/**< RemoteMask */
    char *    keyExM;	/**< KeyExM */
    char *    authM;	/**< AuthM */
    char *    PSK;	/**< PSK */
    char *    certificateName;	/**< CertificateName */
    char *    perfectFSEn;	/**< PerfectFSEn */
    char *    manualEncryptionAlgo;	/**< ManualEncryptionAlgo */
    char *    manualEncryptionKey;	/**< ManualEncryptionKey */
    char *    manualAuthAlgo;	/**< ManualAuthAlgo */
    char *    manualAthKey;	/**< ManualAthKey */
    char *    SPI;	/**< SPI */
    char *    ph1Mode;	/**< Ph1Mode */
    char *    ph1EncryptionAlo;	/**< Ph1EncryptionAlo */
    char *    ph1IntegrityAlgo;	/**< Ph1IntegrityAlgo */
    char *    ph1DHGroup;	/**< Ph1DHGroup */
    UINT32    ph1KeyTime;	/**< Ph1KeyTime */
    char *    ph2Mode;	/**< Ph2Mode */
    char *    ph2EncryptionAlo;	/**< Ph2EncryptionAlo */
    char *    ph2IntegrityAlgo;	/**< Ph2IntegrityAlgo */
    char *    ph2DHGroup;	/**< Ph2DHGroup */
    UINT32    ph2KeyTime;	/**< Ph2KeyTime */
} IPSecCfgObject;

/*! \brief _IPSecCfgObject is used internally to represent IPSecCfgObject */
typedef IPSecCfgObject _IPSecCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_CertificateCfg.{i}.
 *
 * MDMOID_CERTIFICATE_CFG 280
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    subject;	/**< Subject */
    char *    type;	/**< Type */
    char *    password;	/**< Password */
    char *    content;	/**< Content */
    char *    privKey;	/**< PrivKey */
    char *    reqPub;	/**< ReqPub */
    UINT32    refCount;	/**< RefCount */
    UBOOL8    enableCACertTR069;	/**< EnableCACertTR069 */
} CertificateCfgObject;

/*! \brief _CertificateCfgObject is used internally to represent CertificateCfgObject */
typedef CertificateCfgObject _CertificateCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_WapiCertificate.
 *
 * MDMOID_WAPI_CERTIFICATE 281
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WapiCertificateObject;

/*! \brief _WapiCertificateObject is used internally to represent WapiCertificateObject */
typedef WapiCertificateObject _WapiCertificateObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_WapiCertificate.WapiAsCertificate.
 *
 * MDMOID_WAPI_AS_CERTIFICATE 282
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    certificateFlag;	/**< CertificateFlag */
    SINT32    certificateLength;	/**< CertificateLength */
    char *    certificateContent;	/**< CertificateContent */
    UINT32    privateKeyFlag;	/**< PrivateKeyFlag */
    SINT32    privateKeyLength;	/**< PrivateKeyLength */
    char *    privateKeyContent;	/**< PrivateKeyContent */
} WapiAsCertificateObject;

/*! \brief _WapiAsCertificateObject is used internally to represent WapiAsCertificateObject */
typedef WapiAsCertificateObject _WapiAsCertificateObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_WapiCertificate.WapiIssuedCertificate.
 *
 * MDMOID_WAPI_ISSUED_CERTIFICATE 283
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    asEnabled;	/**< AsEnabled */
    UINT32    lastUpdated;	/**< LastUpdated */
    char *    issuedList;	/**< IssuedList */
    char *    revokedList;	/**< RevokedList */
} WapiIssuedCertificateObject;

/*! \brief _WapiIssuedCertificateObject is used internally to represent WapiIssuedCertificateObject */
typedef WapiIssuedCertificateObject _WapiIssuedCertificateObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_NetworkConfig.
 *
 * MDMOID_NETWORK_CONFIG 284
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    DNSIfName;	/**< DNSIfName */
    char *    DNSServers;	/**< DNSServers */
    char *    activeDNSServers;	/**< ActiveDNSServers */
    UBOOL8    enableAdvancedDMZ;	/**< EnableAdvancedDMZ */
} NetworkConfigObject;

/*! \brief _NetworkConfigObject is used internally to represent NetworkConfigObject */
typedef NetworkConfigObject _NetworkConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_InterfaceControl.
 *
 * MDMOID_INTERFACE_CONTROL 285
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ifName;	/**< IfName */
    UBOOL8    moveToWANSide;	/**< MoveToWANSide */
    UBOOL8    moveToLANSide;	/**< MoveToLANSide */
} InterfaceControlObject;

/*! \brief _InterfaceControlObject is used internally to represent InterfaceControlObject */
typedef InterfaceControlObject _InterfaceControlObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_P8021agCfg.
 *
 * MDMOID_P8021AG_CFG 286
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    MDLevel;	/**< MDLevel */
} P8021agCfgObject;

/*! \brief _P8021agCfgObject is used internally to represent P8021agCfgObject */
typedef P8021agCfgObject _P8021agCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IGMPCfg.
 *
 * MDMOID_IGMP_CFG 287
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    igmpVer;	/**< IgmpVer */
    UINT32    igmpQI;	/**< IgmpQI */
    UINT32    igmpQRI;	/**< IgmpQRI */
    UINT32    igmpLMQI;	/**< IgmpLMQI */
    UINT32    igmpRV;	/**< IgmpRV */
    UINT32    igmpMaxGroups;	/**< IgmpMaxGroups */
    UINT32    igmpMaxSources;	/**< IgmpMaxSources */
    UINT32    igmpMaxMembers;	/**< IgmpMaxMembers */
    UBOOL8    igmpFastLeaveEnable;	/**< IgmpFastLeaveEnable */
    UBOOL8    igmpLan2LanMulticastEnable;	/**< IgmpLan2LanMulticastEnable */
    UBOOL8    igmpJoinImmediate;	/**< IgmpJoinImmediate */
    char *    igmpBridgeIfNames;	/**< IgmpBridgeIfNames */
    char *    igmpMcastIfNames;	/**< IgmpMcastIfNames */
} IgmpCfgObject;

/*! \brief _IgmpCfgObject is used internally to represent IgmpCfgObject */
typedef IgmpCfgObject _IgmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_MLDCfg.
 *
 * MDMOID_MLD_CFG 288
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    mldVer;	/**< MldVer */
    UINT32    mldQI;	/**< MldQI */
    UINT32    mldQRI;	/**< MldQRI */
    UINT32    mldLMQI;	/**< MldLMQI */
    UINT32    mldRV;	/**< MldRV */
    UINT32    mldMaxGroups;	/**< MldMaxGroups */
    UINT32    mldMaxSources;	/**< MldMaxSources */
    UINT32    mldMaxMembers;	/**< MldMaxMembers */
    UBOOL8    mldFastLeaveEnable;	/**< MldFastLeaveEnable */
    UBOOL8    mldLan2LanMulticastEnable;	/**< MldLan2LanMulticastEnable */
} MldCfgObject;

/*! \brief _MldCfgObject is used internally to represent MldCfgObject */
typedef MldCfgObject _MldCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_NUD.
 *
 * MDMOID_NUD 289
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    SINT32    payloadLength;	/**< PayloadLength */
    char *    result;	/**< Result */
    SINT32    RTT;	/**< RTT */
} NUDObject;

/*! \brief _NUDObject is used internally to represent NUDObject */
typedef NUDObject _NUDObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPTunnel.{i}.
 *
 * MDMOID_IP_TUNNEL 290
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    activated;	/**< Activated */
    char *    tunnelName;	/**< TunnelName */
    SINT32    tunnelCounter;	/**< TunnelCounter */
    char *    mode;	/**< Mode */
    char *    associatedWanIfName;	/**< AssociatedWanIfName */
    char *    associatedLanIfName;	/**< AssociatedLanIfName */
} IPTunnelObject;

/*! \brief _IPTunnelObject is used internally to represent IPTunnelObject */
typedef IPTunnelObject _IPTunnelObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPTunnel.{i}.V4inV6Tunnel.{i}.
 *
 * MDMOID_IPV4IN_IPV6_TUNNEL 291
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    connStatus;	/**< ConnStatus */
    char *    mechanism;	/**< Mechanism */
    UBOOL8    dynamic;	/**< Dynamic */
    char *    remoteIpv6Address;	/**< RemoteIpv6Address */
} Ipv4inIpv6TunnelObject;

/*! \brief _Ipv4inIpv6TunnelObject is used internally to represent Ipv4inIpv6TunnelObject */
typedef Ipv4inIpv6TunnelObject _Ipv4inIpv6TunnelObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_IPTunnel.{i}.V6inV4Tunnel.{i}.
 *
 * MDMOID_IPV6IN_IPV4_TUNNEL 292
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    connStatus;	/**< ConnStatus */
    char *    mechanism;	/**< Mechanism */
    UBOOL8    dynamic;	/**< Dynamic */
    SINT32    ipv4MaskLen;	/**< Ipv4MaskLen */
    char *    prefix;	/**< Prefix */
    char *    borderRelayAddress;	/**< BorderRelayAddress */
} Ipv6inIpv4TunnelObject;

/*! \brief _Ipv6inIpv4TunnelObject is used internally to represent Ipv6inIpv4TunnelObject */
typedef Ipv6inIpv4TunnelObject _Ipv6inIpv4TunnelObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.
 *
 * MDMOID_ITU_T_ORG 293
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} ItuTOrgObject;

/*! \brief _ItuTOrgObject is used internally to represent ItuTOrgObject */
typedef ItuTOrgObject _ItuTOrgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.
 *
 * MDMOID_G_984_4 294
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} G_984_4Object;

/*! \brief _G_984_4Object is used internally to represent G_984_4Object */
typedef G_984_4Object _G_984_4Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.
 *
 * MDMOID_EQUIPMENT_MANAGEMENT 295
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} EquipmentManagementObject;

/*! \brief _EquipmentManagementObject is used internally to represent EquipmentManagementObject */
typedef EquipmentManagementObject _EquipmentManagementObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.OntG.
 *
 * MDMOID_ONT_G 296
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  vendorId;	/**< VendorId */
    HEXBINARY  version;	/**< Version */
    HEXBINARY  serialNumber;	/**< SerialNumber */
    UINT32    trafficManagementOption;	/**< TrafficManagementOption */
    UINT32    vpVcCrossConnectionOption;	/**< VpVcCrossConnectionOption */
    UBOOL8    batteryBackup;	/**< BatteryBackup */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
} OntGObject;

/*! \brief _OntGObject is used internally to represent OntGObject */
typedef OntGObject _OntGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.Ont2G.
 *
 * MDMOID_ONT2_G 297
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  equipmentId;	/**< EquipmentId */
    UINT32    omccVersion;	/**< OmccVersion */
    UINT32    vendorProductCode;	/**< VendorProductCode */
    UINT32    securityCapability;	/**< SecurityCapability */
    UINT32    securityMode;	/**< SecurityMode */
    UINT32    totalPriorityQueueNumber;	/**< TotalPriorityQueueNumber */
    UINT32    totalTrafficSchedulerNumber;	/**< TotalTrafficSchedulerNumber */
    UINT32    mode;	/**< Mode */
    UINT32    totalGemPortIdNumber;	/**< TotalGemPortIdNumber */
    UINT32    sysUpTime;	/**< SysUpTime */
    UINT32    connectivityCapability;	/**< ConnectivityCapability */
    UINT32    currentConnectivityMode;	/**< CurrentConnectivityMode */
    UINT32    qosConfigFlexibiltiy;	/**< QosConfigFlexibiltiy */
} Ont2GObject;

/*! \brief _Ont2GObject is used internally to represent Ont2GObject */
typedef Ont2GObject _Ont2GObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.OntData.
 *
 * MDMOID_ONT_DATA 298
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    mibDataSync;	/**< MibDataSync */
} OntDataObject;

/*! \brief _OntDataObject is used internally to represent OntDataObject */
typedef OntDataObject _OntDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.SoftwareImage.{i}.
 *
 * MDMOID_SOFTWARE_IMAGE 299
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  version;	/**< Version */
    UBOOL8    isCommitted;	/**< IsCommitted */
    UBOOL8    isActive;	/**< IsActive */
    UBOOL8    isValid;	/**< IsValid */
} SoftwareImageObject;

/*! \brief _SoftwareImageObject is used internally to represent SoftwareImageObject */
typedef SoftwareImageObject _SoftwareImageObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.CardHolder.{i}.
 *
 * MDMOID_CARD_HOLDER 300
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    actualPlugInUnitType;	/**< ActualPlugInUnitType */
    UINT32    expectedPlugInUnitType;	/**< ExpectedPlugInUnitType */
    UINT32    expectedPortCount;	/**< ExpectedPortCount */
    HEXBINARY  expectedEquipmentId;	/**< ExpectedEquipmentId */
    HEXBINARY  actualEquipmentId;	/**< ActualEquipmentId */
    UINT32    protectionProfilePointer;	/**< ProtectionProfilePointer */
    UINT32    invokeProtectionSwitch;	/**< InvokeProtectionSwitch */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
} CardHolderObject;

/*! \brief _CardHolderObject is used internally to represent CardHolderObject */
typedef CardHolderObject _CardHolderObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.CircuitPack.{i}.
 *
 * MDMOID_CIRCUIT_PACK 301
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    type;	/**< Type */
    UINT32    numberOfPorts;	/**< NumberOfPorts */
    HEXBINARY  serialNumber;	/**< SerialNumber */
    HEXBINARY  version;	/**< Version */
    HEXBINARY  vendorId;	/**< VendorId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    bridgedIpInd;	/**< BridgedIpInd */
    HEXBINARY  equipmentId;	/**< EquipmentId */
    UINT32    cardConfiguration;	/**< CardConfiguration */
    UINT32    totalTcontBufferNumber;	/**< TotalTcontBufferNumber */
    UINT32    totalPriorityQueueNumber;	/**< TotalPriorityQueueNumber */
    UINT32    totalTrafficSchedulerNumber;	/**< TotalTrafficSchedulerNumber */
    UINT32    powerShedOverride;	/**< PowerShedOverride */
} CircuitPackObject;

/*! \brief _CircuitPackObject is used internally to represent CircuitPackObject */
typedef CircuitPackObject _CircuitPackObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.PowerShedding.{i}.
 *
 * MDMOID_POWER_SHEDDING 302
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    restorePowerTimerResetInterval;	/**< RestorePowerTimerResetInterval */
    UINT32    dataClassSheddingInterval;	/**< DataClassSheddingInterval */
    UINT32    voiceClassSheddingInterval;	/**< VoiceClassSheddingInterval */
    UINT32    videoOverlayClassSheddingInterval;	/**< VideoOverlayClassSheddingInterval */
    UINT32    videoReturnClassSheddingInterval;	/**< VideoReturnClassSheddingInterval */
    UINT32    dslClassSheddingInterval;	/**< DslClassSheddingInterval */
    UINT32    atmClassSheddingInterval;	/**< AtmClassSheddingInterval */
    UINT32    cesClassSheddingInterval;	/**< CesClassSheddingInterval */
    UINT32    frameClassSheddingInterval;	/**< FrameClassSheddingInterval */
    UINT32    sonetClassSheddingInterval;	/**< SonetClassSheddingInterval */
    UINT32    sheddingStatus;	/**< SheddingStatus */
} PowerSheddingObject;

/*! \brief _PowerSheddingObject is used internally to represent PowerSheddingObject */
typedef PowerSheddingObject _PowerSheddingObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.PortMappingPackageG.{i}.
 *
 * MDMOID_PORT_MAPPING_PACKAGE_G 303
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    maxPorts;	/**< MaxPorts */
    HEXBINARY  portList1;	/**< PortList1 */
    HEXBINARY  portList2;	/**< PortList2 */
    HEXBINARY  portList3;	/**< PortList3 */
    HEXBINARY  portList4;	/**< PortList4 */
    HEXBINARY  portList5;	/**< PortList5 */
    HEXBINARY  portList6;	/**< PortList6 */
    HEXBINARY  portList7;	/**< PortList7 */
    HEXBINARY  portList8;	/**< PortList8 */
} PortMappingPackageGObject;

/*! \brief _PortMappingPackageGObject is used internally to represent PortMappingPackageGObject */
typedef PortMappingPackageGObject _PortMappingPackageGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.
 *
 * MDMOID_ANI_MANAGEMENT 304
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} AniManagementObject;

/*! \brief _AniManagementObject is used internally to represent AniManagementObject */
typedef AniManagementObject _AniManagementObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.AniG.{i}.
 *
 * MDMOID_ANI_G 305
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UBOOL8    srIndication;	/**< SrIndication */
    UINT32    totalTcontNumber;	/**< TotalTcontNumber */
    UINT32    gemBlockLength;	/**< GemBlockLength */
    UINT32    piggybackDbaReporting;	/**< PiggybackDbaReporting */
    UINT32    wholeOnuDbaReporting;	/**< WholeOnuDbaReporting */
    UINT32    sfThreshold;	/**< SfThreshold */
    UINT32    sdThreshold;	/**< SdThreshold */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UINT32    opticalSignalLevel;	/**< OpticalSignalLevel */
    UINT32    lowerOptivalThreshold;	/**< LowerOptivalThreshold */
    UINT32    upperOptivalThreshold;	/**< UpperOptivalThreshold */
    UINT32    ontResponseTime;	/**< OntResponseTime */
    UINT32    transmitOpticalLevel;	/**< TransmitOpticalLevel */
    UINT32    lowerTransmitPowerThreshold;	/**< LowerTransmitPowerThreshold */
    UINT32    upperTransmitPowerThreshold;	/**< UpperTransmitPowerThreshold */
} AniGObject;

/*! \brief _AniGObject is used internally to represent AniGObject */
typedef AniGObject _AniGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.TCont.{i}.
 *
 * MDMOID_T_CONT 306
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    allocId;	/**< AllocId */
    UINT32    modeIndicator;	/**< ModeIndicator */
    UINT32    policy;	/**< Policy */
} TContObject;

/*! \brief _TContObject is used internally to represent TContObject */
typedef TContObject _TContObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GemPortNetworkCtp.{i}.
 *
 * MDMOID_GEM_PORT_NETWORK_CTP 307
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    portIdValue;	/**< PortIdValue */
    UINT32    TContPointer;	/**< TContPointer */
    UINT32    direction;	/**< Direction */
    UINT32    upstreamTrafficManagementPointer;	/**< UpstreamTrafficManagementPointer */
    UINT32    upstreamTrafficDescriptorProfilePointer;	/**< UpstreamTrafficDescriptorProfilePointer */
    UINT32    uniCounter;	/**< UniCounter */
    UINT32    downstreamPriorityQueuePointer;	/**< DownstreamPriorityQueuePointer */
    UINT32    encryptionState;	/**< EncryptionState */
    UINT32    downstreamTrafficDescriptorProfilePointerr;	/**< DownstreamTrafficDescriptorProfilePointerr */
} GemPortNetworkCtpObject;

/*! \brief _GemPortNetworkCtpObject is used internally to represent GemPortNetworkCtpObject */
typedef GemPortNetworkCtpObject _GemPortNetworkCtpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GemInterworkingTp.{i}.
 *
 * MDMOID_GEM_INTERWORKING_TP 308
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    gemPortNetworkCtpConnPointer;	/**< GemPortNetworkCtpConnPointer */
    UINT32    interworkingOption;	/**< InterworkingOption */
    UINT32    serviceProfilePointer;	/**< ServiceProfilePointer */
    UINT32    interworkingTermPointPointer;	/**< InterworkingTermPointPointer */
    UINT32    pptpCounter;	/**< PptpCounter */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    galProfilePointer;	/**< GalProfilePointer */
    UINT32    galLoopbackConfiguration;	/**< GalLoopbackConfiguration */
} GemInterworkingTpObject;

/*! \brief _GemInterworkingTpObject is used internally to represent GemInterworkingTpObject */
typedef GemInterworkingTpObject _GemInterworkingTpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.MulticastGemInterworkingTp.{i}.
 *
 * MDMOID_MULTICAST_GEM_INTERWORKING_TP 309
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    gemPortNetworkCtpConnPointer;	/**< GemPortNetworkCtpConnPointer */
    UINT32    interworkingOption;	/**< InterworkingOption */
    UINT32    serviceProfilePointer;	/**< ServiceProfilePointer */
    UINT32    interworkingTermPointPointer;	/**< InterworkingTermPointPointer */
    UINT32    pptpCounter;	/**< PptpCounter */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    galProfilePointer;	/**< GalProfilePointer */
    UINT32    galLoopbackConfiguration;	/**< GalLoopbackConfiguration */
    HEXBINARY  multicastAddressField;	/**< MulticastAddressField */
} MulticastGemInterworkingTpObject;

/*! \brief _MulticastGemInterworkingTpObject is used internally to represent MulticastGemInterworkingTpObject */
typedef MulticastGemInterworkingTpObject _MulticastGemInterworkingTpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.MulticastGemInterworkingTp.{i}.MulticastAddressTable.{i}.
 *
 * MDMOID_GEM_INTERWORKING_TP_MULTICAST_ADDRESS_TABLE 310
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  multicastAddressEntry;	/**< MulticastAddressEntry */
} GemInterworkingTpMulticastAddressTableObject;

/*! \brief _GemInterworkingTpMulticastAddressTableObject is used internally to represent GemInterworkingTpMulticastAddressTableObject */
typedef GemInterworkingTpMulticastAddressTableObject _GemInterworkingTpMulticastAddressTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GemPortPmHistoryData.{i}.
 *
 * MDMOID_GEM_PORT_PM_HISTORY_DATA 311
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    transmittedGEMFrames;	/**< TransmittedGEMFrames */
    UINT32    receivedGEMFrames;	/**< ReceivedGEMFrames */
    UINT64    receivedPayloadBytes;	/**< ReceivedPayloadBytes */
    UINT64    transmittedPayloadBytes;	/**< TransmittedPayloadBytes */
} GemPortPmHistoryDataObject;

/*! \brief _GemPortPmHistoryDataObject is used internally to represent GemPortPmHistoryDataObject */
typedef GemPortPmHistoryDataObject _GemPortPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GalEthernetProfile.{i}.
 *
 * MDMOID_GAL_ETHERNET_PROFILE 312
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    maximumGemPayloadSize;	/**< MaximumGemPayloadSize */
} GalEthernetProfileObject;

/*! \brief _GalEthernetProfileObject is used internally to represent GalEthernetProfileObject */
typedef GalEthernetProfileObject _GalEthernetProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GalEthernetPmHistoryData.{i}.
 *
 * MDMOID_GAL_ETHERNET_PM_HISTORY_DATA 313
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    discardedFrames;	/**< DiscardedFrames */
} GalEthernetPmHistoryDataObject;

/*! \brief _GalEthernetPmHistoryDataObject is used internally to represent GalEthernetPmHistoryDataObject */
typedef GalEthernetPmHistoryDataObject _GalEthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.FecPmHistoryData.{i}.
 *
 * MDMOID_FEC_PM_HISTORY_DATA 314
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    correctedBytes;	/**< CorrectedBytes */
    UINT32    correctedCodeWords;	/**< CorrectedCodeWords */
    UINT32    uncorrectedCodeWords;	/**< UncorrectedCodeWords */
    UINT32    totalCodeWords;	/**< TotalCodeWords */
    UINT32    fecSeconds;	/**< FecSeconds */
} FecPmHistoryDataObject;

/*! \brief _FecPmHistoryDataObject is used internally to represent FecPmHistoryDataObject */
typedef FecPmHistoryDataObject _FecPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.
 *
 * MDMOID_LAYER2_DATA_SERVICES 315
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Layer2DataServicesObject;

/*! \brief _Layer2DataServicesObject is used internally to represent Layer2DataServicesObject */
typedef Layer2DataServicesObject _Layer2DataServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgeServiceProfile.{i}.
 *
 * MDMOID_MAC_BRIDGE_SERVICE_PROFILE 316
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UBOOL8    spanningTree;	/**< SpanningTree */
    UBOOL8    learning;	/**< Learning */
    UBOOL8    portBridging;	/**< PortBridging */
    UINT32    priority;	/**< Priority */
    UINT32    maxAge;	/**< MaxAge */
    UINT32    helloTime;	/**< HelloTime */
    UINT32    forwardDelay;	/**< ForwardDelay */
    UBOOL8    unknownMacAddressDiscard;	/**< UnknownMacAddressDiscard */
    UINT32    macLearningDepth;	/**< MacLearningDepth */
    UINT32    dynamicFilteringAgeingTime;	/**< DynamicFilteringAgeingTime */
} MacBridgeServiceProfileObject;

/*! \brief _MacBridgeServiceProfileObject is used internally to represent MacBridgeServiceProfileObject */
typedef MacBridgeServiceProfileObject _MacBridgeServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_404A03_MacBridgeServiceProfile.{i}.
 *
 * MDMOID_BC_MAC_BRIDGE_SERVICE_PROFILE 317
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    char *    bridgeName;	/**< BridgeName */
} BCM_MacBridgeServiceProfileObject;

/*! \brief _BCM_MacBridgeServiceProfileObject is used internally to represent BCM_MacBridgeServiceProfileObject */
typedef BCM_MacBridgeServiceProfileObject _BCM_MacBridgeServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgeConfigData.{i}.
 *
 * MDMOID_MAC_BRIDGE_CONFIG_DATA 318
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  macAddress;	/**< MacAddress */
    UINT32    priority;	/**< Priority */
    HEXBINARY  designatedRoot;	/**< DesignatedRoot */
    UINT32    rootPathCost;	/**< RootPathCost */
    UINT32    portCount;	/**< PortCount */
    UINT32    rootPortNum;	/**< RootPortNum */
    UINT32    helloTime;	/**< HelloTime */
    UINT32    forwardDelay;	/**< ForwardDelay */
} MacBridgeConfigDataObject;

/*! \brief _MacBridgeConfigDataObject is used internally to represent MacBridgeConfigDataObject */
typedef MacBridgeConfigDataObject _MacBridgeConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePmHistoryData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PM_HISTORY_DATA 319
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    learningEntryDiscardCounter;	/**< LearningEntryDiscardCounter */
} MacBridgePmHistoryDataObject;

/*! \brief _MacBridgePmHistoryDataObject is used internally to represent MacBridgePmHistoryDataObject */
typedef MacBridgePmHistoryDataObject _MacBridgePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortConfigData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_CONFIG_DATA 320
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    bridgeId;	/**< BridgeId */
    UINT32    portNum;	/**< PortNum */
    UINT32    tpType;	/**< TpType */
    UINT32    tpPointer;	/**< TpPointer */
    UINT32    priority;	/**< Priority */
    UINT32    pathCost;	/**< PathCost */
    UBOOL8    spanningTree;	/**< SpanningTree */
    UINT32    encapMethod;	/**< EncapMethod */
    UINT32    lanFcs;	/**< LanFcs */
    HEXBINARY  macAddress;	/**< MacAddress */
    UINT32    outTdPointer;	/**< OutTdPointer */
    UINT32    inTdPointer;	/**< InTdPointer */
    UINT32    macLearningDepth;	/**< MacLearningDepth */
} MacBridgePortConfigDataObject;

/*! \brief _MacBridgePortConfigDataObject is used internally to represent MacBridgePortConfigDataObject */
typedef MacBridgePortConfigDataObject _MacBridgePortConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortDesignationData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_DESIGNATION_DATA 321
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  designatedBridgeRootCostPort;	/**< DesignatedBridgeRootCostPort */
    UINT32    portState;	/**< PortState */
} MacBridgePortDesignationDataObject;

/*! \brief _MacBridgePortDesignationDataObject is used internally to represent MacBridgePortDesignationDataObject */
typedef MacBridgePortDesignationDataObject _MacBridgePortDesignationDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortFilterTableData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_FILTER_TABLE_DATA 322
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  macFilterTable;	/**< MacFilterTable */
} MacBridgePortFilterTableDataObject;

/*! \brief _MacBridgePortFilterTableDataObject is used internally to represent MacBridgePortFilterTableDataObject */
typedef MacBridgePortFilterTableDataObject _MacBridgePortFilterTableDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortFilterTableData.{i}.MacFilterTable.{i}.
 *
 * MDMOID_MAC_FILTER_TABLE 323
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  macFilterEntry;	/**< MacFilterEntry */
} MacFilterTableObject;

/*! \brief _MacFilterTableObject is used internally to represent MacFilterTableObject */
typedef MacFilterTableObject _MacFilterTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortFilterPreAssignTable.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_FILTER_PRE_ASSIGN_TABLE 324
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ipv4MulticastFilter;	/**< Ipv4MulticastFilter */
    UINT32    ipv6MulticastFilter;	/**< Ipv6MulticastFilter */
    UINT32    ipv4BroadcastFilter;	/**< Ipv4BroadcastFilter */
    UINT32    rarpFilter;	/**< RarpFilter */
    UINT32    ipxFilter;	/**< IpxFilter */
    UINT32    netBeuiFilter;	/**< NetBeuiFilter */
    UINT32    appleTalkFilter;	/**< AppleTalkFilter */
    UINT32    bridgeFilter;	/**< BridgeFilter */
    UINT32    arpFilter;	/**< ArpFilter */
    UINT32    pppoeFilter;	/**< PppoeFilter */
} MacBridgePortFilterPreAssignTableObject;

/*! \brief _MacBridgePortFilterPreAssignTableObject is used internally to represent MacBridgePortFilterPreAssignTableObject */
typedef MacBridgePortFilterPreAssignTableObject _MacBridgePortFilterPreAssignTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortBridgeTableData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_BRIDGE_TABLE_DATA 325
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  bridgeTable;	/**< BridgeTable */
} MacBridgePortBridgeTableDataObject;

/*! \brief _MacBridgePortBridgeTableDataObject is used internally to represent MacBridgePortBridgeTableDataObject */
typedef MacBridgePortBridgeTableDataObject _MacBridgePortBridgeTableDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortBridgeTableData.{i}.BridgeTable.{i}.
 *
 * MDMOID_BRIDGE_TABLE 326
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  bridgeEntry;	/**< BridgeEntry */
} BridgeTableObject;

/*! \brief _BridgeTableObject is used internally to represent BridgeTableObject */
typedef BridgeTableObject _BridgeTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortPmHistoryData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_PM_HISTORY_DATA 327
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    forwardFrameCounter;	/**< ForwardFrameCounter */
    UINT32    delayDiscardCounter;	/**< DelayDiscardCounter */
    UINT32    mtuDiscardCounter;	/**< MtuDiscardCounter */
    UINT32    receiveFrameCounter;	/**< ReceiveFrameCounter */
    UINT32    receiveDiscardCounter;	/**< ReceiveDiscardCounter */
} MacBridgePortPmHistoryDataObject;

/*! \brief _MacBridgePortPmHistoryDataObject is used internally to represent MacBridgePortPmHistoryDataObject */
typedef MacBridgePortPmHistoryDataObject _MacBridgePortPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MapperServiceProfile.{i}.
 *
 * MDMOID_MAPPER_SERVICE_PROFILE 328
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    tpPointer;	/**< TpPointer */
    UINT32    interworkTpPointerPriority0;	/**< InterworkTpPointerPriority0 */
    UINT32    interworkTpPointerPriority1;	/**< InterworkTpPointerPriority1 */
    UINT32    interworkTpPointerPriority2;	/**< InterworkTpPointerPriority2 */
    UINT32    interworkTpPointerPriority3;	/**< InterworkTpPointerPriority3 */
    UINT32    interworkTpPointerPriority4;	/**< InterworkTpPointerPriority4 */
    UINT32    interworkTpPointerPriority5;	/**< InterworkTpPointerPriority5 */
    UINT32    interworkTpPointerPriority6;	/**< InterworkTpPointerPriority6 */
    UINT32    interworkTpPointerPriority7;	/**< InterworkTpPointerPriority7 */
    UINT32    unmarkedFrameOption;	/**< UnmarkedFrameOption */
    HEXBINARY  dscpToPBitMapping;	/**< DscpToPBitMapping */
    UINT32    defaultPBitMarking;	/**< DefaultPBitMarking */
    UINT32    tpType;	/**< TpType */
} MapperServiceProfileObject;

/*! \brief _MapperServiceProfileObject is used internally to represent MapperServiceProfileObject */
typedef MapperServiceProfileObject _MapperServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_404A03_MapperServiceProfile.{i}.
 *
 * MDMOID_BC_MAPPER_SERVICE_PROFILE 329
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    char *    bridgeName;	/**< BridgeName */
} BCM_MapperServiceProfileObject;

/*! \brief _BCM_MapperServiceProfileObject is used internally to represent BCM_MapperServiceProfileObject */
typedef BCM_MapperServiceProfileObject _BCM_MapperServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.VlanTaggingFilterData.{i}.
 *
 * MDMOID_VLAN_TAGGING_FILTER_DATA 330
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  vlanFilterList;	/**< VlanFilterList */
    UINT32    forwardOperation;	/**< ForwardOperation */
    UINT32    numberOfEntries;	/**< NumberOfEntries */
} VlanTaggingFilterDataObject;

/*! \brief _VlanTaggingFilterDataObject is used internally to represent VlanTaggingFilterDataObject */
typedef VlanTaggingFilterDataObject _VlanTaggingFilterDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.VlanTaggingOperationConfigurationData.{i}.
 *
 * MDMOID_VLAN_TAGGING_OPERATION_CONFIGURATION_DATA 331
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    upstreamVlanTaggingOperationMode;	/**< UpstreamVlanTaggingOperationMode */
    UINT32    upstreamVlanTagTciValue;	/**< UpstreamVlanTagTciValue */
    UINT32    downstreamVlanTaggingOperationMode;	/**< DownstreamVlanTaggingOperationMode */
    UINT32    associationType;	/**< AssociationType */
    UINT32    associatedManagedEntityPointer;	/**< AssociatedManagedEntityPointer */
} VlanTaggingOperationConfigurationDataObject;

/*! \brief _VlanTaggingOperationConfigurationDataObject is used internally to represent VlanTaggingOperationConfigurationDataObject */
typedef VlanTaggingOperationConfigurationDataObject _VlanTaggingOperationConfigurationDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.ExtendedVlanTaggingOperationConfigurationData.{i}.
 *
 * MDMOID_EXTENDED_VLAN_TAGGING_OPERATION_CONFIGURATION_DATA 332
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    associationType;	/**< AssociationType */
    UINT32    receivedFrameVlanTaggingOperationTableMaxSize;	/**< ReceivedFrameVlanTaggingOperationTableMaxSize */
    UINT32    inputTpid;	/**< InputTpid */
    UINT32    outputTpid;	/**< OutputTpid */
    UINT32    downstreamMode;	/**< DownstreamMode */
    HEXBINARY  receivedFrameVlanTaggingOperationTable;	/**< ReceivedFrameVlanTaggingOperationTable */
    UINT32    associatedManagedEntityPointer;	/**< AssociatedManagedEntityPointer */
    HEXBINARY  dscpToPBitMapping;	/**< DscpToPBitMapping */
} ExtendedVlanTaggingOperationConfigurationDataObject;

/*! \brief _ExtendedVlanTaggingOperationConfigurationDataObject is used internally to represent ExtendedVlanTaggingOperationConfigurationDataObject */
typedef ExtendedVlanTaggingOperationConfigurationDataObject _ExtendedVlanTaggingOperationConfigurationDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.ExtendedVlanTaggingOperationConfigurationData.{i}.ReceivedFrameVlanTaggingOperationTable.{i}.
 *
 * MDMOID_RECEIVED_FRAME_VLAN_TAGGING_OPERATION_TABLE 333
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  taggingRule;	/**< TaggingRule */
} ReceivedFrameVlanTaggingOperationTableObject;

/*! \brief _ReceivedFrameVlanTaggingOperationTableObject is used internally to represent ReceivedFrameVlanTaggingOperationTableObject */
typedef ReceivedFrameVlanTaggingOperationTableObject _ReceivedFrameVlanTaggingOperationTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.
 *
 * MDMOID_MULTICAST_OPERATIONS_PROFILE 334
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    igmpVersion;	/**< IgmpVersion */
    UINT32    igmpFunction;	/**< IgmpFunction */
    UINT32    immediateLeave;	/**< ImmediateLeave */
    UINT32    upstreamIgmpTci;	/**< UpstreamIgmpTci */
    UINT32    upstreamIgmpTagControl;	/**< UpstreamIgmpTagControl */
    UINT32    upstreamIgmpRate;	/**< UpstreamIgmpRate */
    HEXBINARY  dynamicAccessControlListTable;	/**< DynamicAccessControlListTable */
    HEXBINARY  staticAccessControlListTable;	/**< StaticAccessControlListTable */
    HEXBINARY  lostGroupsListTable;	/**< LostGroupsListTable */
    UINT32    robustness;	/**< Robustness */
    UINT32    querierIpAddress;	/**< QuerierIpAddress */
    UINT32    queryInterval;	/**< QueryInterval */
    UINT32    queryMaxResponseTime;	/**< QueryMaxResponseTime */
    UINT32    lastMemberQueryInterval;	/**< LastMemberQueryInterval */
    UINT32    unauthorizedJoinRequestBehaviour;	/**< UnauthorizedJoinRequestBehaviour */
    HEXBINARY  downstreamIgmpTci;	/**< DownstreamIgmpTci */
} MulticastOperationsProfileObject;

/*! \brief _MulticastOperationsProfileObject is used internally to represent MulticastOperationsProfileObject */
typedef MulticastOperationsProfileObject _MulticastOperationsProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.DynamicAccessControlListTable.{i}.
 *
 * MDMOID_DYNAMIC_ACCESS_CONTROL_LIST_TABLE 335
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  dynamicAccessControlEntry;	/**< DynamicAccessControlEntry */
} DynamicAccessControlListTableObject;

/*! \brief _DynamicAccessControlListTableObject is used internally to represent DynamicAccessControlListTableObject */
typedef DynamicAccessControlListTableObject _DynamicAccessControlListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.StaticAccessControlListTable.{i}.
 *
 * MDMOID_STATIC_ACCESS_CONTROL_LIST_TABLE 336
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  staticAccessControlEntry;	/**< StaticAccessControlEntry */
} StaticAccessControlListTableObject;

/*! \brief _StaticAccessControlListTableObject is used internally to represent StaticAccessControlListTableObject */
typedef StaticAccessControlListTableObject _StaticAccessControlListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.LostGroupsListTable.{i}.
 *
 * MDMOID_LOST_GROUPS_LIST_TABLE 337
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  lostGroupsListEntry;	/**< LostGroupsListEntry */
} LostGroupsListTableObject;

/*! \brief _LostGroupsListTableObject is used internally to represent LostGroupsListTableObject */
typedef LostGroupsListTableObject _LostGroupsListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastSubscriberConfigInfo.{i}.
 *
 * MDMOID_MULTICAST_SUBSCRIBER_CONFIG_INFO 338
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    meType;	/**< MeType */
    UINT32    multicastOperationsProfilePointer;	/**< MulticastOperationsProfilePointer */
    UINT32    maxSimultaneousGroups;	/**< MaxSimultaneousGroups */
    UINT32    maxMulticastBandwidth;	/**< MaxMulticastBandwidth */
    UINT32    bandwidthEnforcement;	/**< BandwidthEnforcement */
} MulticastSubscriberConfigInfoObject;

/*! \brief _MulticastSubscriberConfigInfoObject is used internally to represent MulticastSubscriberConfigInfoObject */
typedef MulticastSubscriberConfigInfoObject _MulticastSubscriberConfigInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastSubscriberMonitor.{i}.
 *
 * MDMOID_MULTICAST_SUBSCRIBER_MONITOR 339
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    meType;	/**< MeType */
    UINT32    currentMulticastBandwidth;	/**< CurrentMulticastBandwidth */
    UINT32    joinMessagesCounter;	/**< JoinMessagesCounter */
    UINT32    bandwidthExceededCounter;	/**< BandwidthExceededCounter */
    HEXBINARY  activeGroupsListTable;	/**< ActiveGroupsListTable */
} MulticastSubscriberMonitorObject;

/*! \brief _MulticastSubscriberMonitorObject is used internally to represent MulticastSubscriberMonitorObject */
typedef MulticastSubscriberMonitorObject _MulticastSubscriberMonitorObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastSubscriberMonitor.{i}.ActiveGroupsListTable.{i}.
 *
 * MDMOID_ACTIVE_GROUPS_LIST_TABLE 340
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  activeGroupsListEntry;	/**< ActiveGroupsListEntry */
} ActiveGroupsListTableObject;

/*! \brief _ActiveGroupsListTableObject is used internally to represent ActiveGroupsListTableObject */
typedef ActiveGroupsListTableObject _ActiveGroupsListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_404A03_MulticastSubscriberMonitor.{i}.
 *
 * MDMOID_BC_MULTICAST_SUBSCRIBER_MONITOR 341
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    objectId;	/**< ObjectId */
    UINT32    currentMulticastBandwidth;	/**< CurrentMulticastBandwidth */
    UINT32    joinMessagesCounter;	/**< JoinMessagesCounter */
    UINT32    bandwidthExceededCounter;	/**< BandwidthExceededCounter */
    UINT32    numberOfSubscribers;	/**< NumberOfSubscribers */
} BCM_MulticastSubscriberMonitorObject;

/*! \brief _BCM_MulticastSubscriberMonitorObject is used internally to represent BCM_MulticastSubscriberMonitorObject */
typedef BCM_MulticastSubscriberMonitorObject _BCM_MulticastSubscriberMonitorObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_404A03_MulticastSubscriberMonitor.{i}.MulticastSubscriber.{i}.
 *
 * MDMOID_MULTICAST_SUBSCRIBER 342
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    tci;	/**< Tci */
    UINT32    sourceIpAddress;	/**< SourceIpAddress */
    UINT32    groupIpAddress;	/**< GroupIpAddress */
    UINT32    clientIpAddress;	/**< ClientIpAddress */
    UINT32    joinedTime;	/**< JoinedTime */
} MulticastSubscriberObject;

/*! \brief _MulticastSubscriberObject is used internally to represent MulticastSubscriberObject */
typedef MulticastSubscriberObject _MulticastSubscriberObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.UpstreamEthernetFramePmHistoryData.{i}.
 *
 * MDMOID_UPSTREAM_ETHERNET_FRAME_PM_HISTORY_DATA 343
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    dropEvents;	/**< DropEvents */
    UINT32    octets;	/**< Octets */
    UINT32    packets;	/**< Packets */
    UINT32    broadcastPackets;	/**< BroadcastPackets */
    UINT32    multicastPackets;	/**< MulticastPackets */
    UINT32    crcErroredPackets;	/**< CrcErroredPackets */
    UINT32    undersizePackets;	/**< UndersizePackets */
    UINT32    oversizePackets;	/**< OversizePackets */
    UINT32    packets64Octets;	/**< Packets64Octets */
    UINT32    packets127Octets;	/**< Packets127Octets */
    UINT32    packets255Octets;	/**< Packets255Octets */
    UINT32    packets511Octets;	/**< Packets511Octets */
    UINT32    packets1023Octets;	/**< Packets1023Octets */
    UINT32    packets1518Octets;	/**< Packets1518Octets */
} UpstreamEthernetFramePmHistoryDataObject;

/*! \brief _UpstreamEthernetFramePmHistoryDataObject is used internally to represent UpstreamEthernetFramePmHistoryDataObject */
typedef UpstreamEthernetFramePmHistoryDataObject _UpstreamEthernetFramePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.DownstreamEthernetFramePmHistoryData.{i}.
 *
 * MDMOID_DOWNSTREAM_ETHERNET_FRAME_PM_HISTORY_DATA 344
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    dropEvents;	/**< DropEvents */
    UINT32    octets;	/**< Octets */
    UINT32    packets;	/**< Packets */
    UINT32    broadcastPackets;	/**< BroadcastPackets */
    UINT32    multicastPackets;	/**< MulticastPackets */
    UINT32    crcErroredPackets;	/**< CrcErroredPackets */
    UINT32    undersizePackets;	/**< UndersizePackets */
    UINT32    oversizePackets;	/**< OversizePackets */
    UINT32    packets64Octets;	/**< Packets64Octets */
    UINT32    packets127Octets;	/**< Packets127Octets */
    UINT32    packets255Octets;	/**< Packets255Octets */
    UINT32    packets511Octets;	/**< Packets511Octets */
    UINT32    packets1023Octets;	/**< Packets1023Octets */
    UINT32    packets1518Octets;	/**< Packets1518Octets */
} DownstreamEthernetFramePmHistoryDataObject;

/*! \brief _DownstreamEthernetFramePmHistoryDataObject is used internally to represent DownstreamEthernetFramePmHistoryDataObject */
typedef DownstreamEthernetFramePmHistoryDataObject _DownstreamEthernetFramePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.
 *
 * MDMOID_LAYER3_DATA_SERVICES 345
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Layer3DataServicesObject;

/*! \brief _Layer3DataServicesObject is used internally to represent Layer3DataServicesObject */
typedef Layer3DataServicesObject _Layer3DataServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.IpHostConfigData.{i}.
 *
 * MDMOID_IP_HOST_CONFIG_DATA 346
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ipOptions;	/**< IpOptions */
    HEXBINARY  macAddress;	/**< MacAddress */
    HEXBINARY  ontId;	/**< OntId */
    UINT32    ipAddress;	/**< IpAddress */
    UINT32    mask;	/**< Mask */
    UINT32    gateway;	/**< Gateway */
    UINT32    primaryDns;	/**< PrimaryDns */
    UINT32    secondaryDns;	/**< SecondaryDns */
    UINT32    currentAddress;	/**< CurrentAddress */
    UINT32    currentMask;	/**< CurrentMask */
    UINT32    currentGateway;	/**< CurrentGateway */
    UINT32    currentPrimaryDns;	/**< CurrentPrimaryDns */
    UINT32    currentSecondaryDns;	/**< CurrentSecondaryDns */
    HEXBINARY  domainName;	/**< DomainName */
    HEXBINARY  hostName;	/**< HostName */
} IpHostConfigDataObject;

/*! \brief _IpHostConfigDataObject is used internally to represent IpHostConfigDataObject */
typedef IpHostConfigDataObject _IpHostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.X_404A03_IpHostConfigData.{i}.
 *
 * MDMOID_BC_IP_HOST_CONFIG_DATA 347
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    connectionStatus;	/**< ConnectionStatus */
    UINT32    dhcpcPid;	/**< DhcpcPid */
    char *    interfaceName;	/**< InterfaceName */
} BCM_IpHostConfigDataObject;

/*! \brief _BCM_IpHostConfigDataObject is used internally to represent BCM_IpHostConfigDataObject */
typedef BCM_IpHostConfigDataObject _BCM_IpHostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.IpHostPmHistoryData.{i}.
 *
 * MDMOID_IP_HOST_PM_HISTORY_DATA 348
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    icmpErrors;	/**< IcmpErrors */
    UINT32    dnsErrors;	/**< DnsErrors */
} IpHostPmHistoryDataObject;

/*! \brief _IpHostPmHistoryDataObject is used internally to represent IpHostPmHistoryDataObject */
typedef IpHostPmHistoryDataObject _IpHostPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.
 *
 * MDMOID_IPV6_HOST_CONFIG_DATA 349
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ipOptions;	/**< IpOptions */
    HEXBINARY  macAddress;	/**< MacAddress */
    HEXBINARY  onuId;	/**< OnuId */
    HEXBINARY  ipv6LinkLocalAddress;	/**< Ipv6LinkLocalAddress */
    HEXBINARY  ipv6Address;	/**< Ipv6Address */
    HEXBINARY  defaultRouter;	/**< DefaultRouter */
    HEXBINARY  primaryDns;	/**< PrimaryDns */
    HEXBINARY  secondaryDns;	/**< SecondaryDns */
    HEXBINARY  currentAddressTable;	/**< CurrentAddressTable */
    HEXBINARY  currentDefaultRouterTable;	/**< CurrentDefaultRouterTable */
    HEXBINARY  currentDnsTable;	/**< CurrentDnsTable */
    HEXBINARY  duid;	/**< Duid */
    HEXBINARY  onlinkPrefix;	/**< OnlinkPrefix */
    HEXBINARY  currentOnlinkPrefixTable;	/**< CurrentOnlinkPrefixTable */
} Ipv6HostConfigDataObject;

/*! \brief _Ipv6HostConfigDataObject is used internally to represent Ipv6HostConfigDataObject */
typedef Ipv6HostConfigDataObject _Ipv6HostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentAddressTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_ADDRESS_TABLE 350
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentAddressEntry;	/**< CurrentAddressEntry */
} Ipv6CurrentAddressTableObject;

/*! \brief _Ipv6CurrentAddressTableObject is used internally to represent Ipv6CurrentAddressTableObject */
typedef Ipv6CurrentAddressTableObject _Ipv6CurrentAddressTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentDefaultRouterTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_DEFAULT_ROUTER_TABLE 351
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentDefaultRouterEntry;	/**< CurrentDefaultRouterEntry */
} Ipv6CurrentDefaultRouterTableObject;

/*! \brief _Ipv6CurrentDefaultRouterTableObject is used internally to represent Ipv6CurrentDefaultRouterTableObject */
typedef Ipv6CurrentDefaultRouterTableObject _Ipv6CurrentDefaultRouterTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentDnsTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_DNS_TABLE 352
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentDnsEntry;	/**< CurrentDnsEntry */
} Ipv6CurrentDnsTableObject;

/*! \brief _Ipv6CurrentDnsTableObject is used internally to represent Ipv6CurrentDnsTableObject */
typedef Ipv6CurrentDnsTableObject _Ipv6CurrentDnsTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentOnlinkPrefixTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_ONLINK_PREFIX_TABLE 353
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentOnlinkPrefixTableEntry;	/**< CurrentOnlinkPrefixTableEntry */
} Ipv6CurrentOnlinkPrefixTableObject;

/*! \brief _Ipv6CurrentOnlinkPrefixTableObject is used internally to represent Ipv6CurrentOnlinkPrefixTableObject */
typedef Ipv6CurrentOnlinkPrefixTableObject _Ipv6CurrentOnlinkPrefixTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.X_404A03_Ipv6HostConfigData.{i}.
 *
 * MDMOID_BC_IPV6_HOST_CONFIG_DATA 354
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    connectionStatus;	/**< ConnectionStatus */
    UINT32    dhcpcPid;	/**< DhcpcPid */
    char *    interfaceName;	/**< InterfaceName */
} BCM_Ipv6HostConfigDataObject;

/*! \brief _BCM_Ipv6HostConfigDataObject is used internally to represent BCM_Ipv6HostConfigDataObject */
typedef BCM_Ipv6HostConfigDataObject _BCM_Ipv6HostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.TcpUdpConfigData.{i}.
 *
 * MDMOID_TCP_UDP_CONFIG_DATA 355
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    portId;	/**< PortId */
    UINT32    protocol;	/**< Protocol */
    UINT32    tos;	/**< Tos */
    UINT32    ipHostPointer;	/**< IpHostPointer */
} TcpUdpConfigDataObject;

/*! \brief _TcpUdpConfigDataObject is used internally to represent TcpUdpConfigDataObject */
typedef TcpUdpConfigDataObject _TcpUdpConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.
 *
 * MDMOID_ETHERNET_SERVICES 356
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} EthernetServicesObject;

/*! \brief _EthernetServicesObject is used internally to represent EthernetServicesObject */
typedef EthernetServicesObject _EthernetServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.PptpEthernetUni.{i}.
 *
 * MDMOID_PPTP_ETHERNET_UNI 357
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    expectedType;	/**< ExpectedType */
    UINT32    sensedType;	/**< SensedType */
    UINT32    autoDetectionConfiguration;	/**< AutoDetectionConfiguration */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    configurationInd;	/**< ConfigurationInd */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UINT32    dteDceInd;	/**< DteDceInd */
    UINT32    pauseTime;	/**< PauseTime */
    UINT32    bridgedIpInd;	/**< BridgedIpInd */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    powerControl;	/**< PowerControl */
} PptpEthernetUniObject;

/*! \brief _PptpEthernetUniObject is used internally to represent PptpEthernetUniObject */
typedef PptpEthernetUniObject _PptpEthernetUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.EthernetPmHistoryData.{i}.
 *
 * MDMOID_ETHERNET_PM_HISTORY_DATA 358
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    fcsErrors;	/**< FcsErrors */
    UINT32    excessiveCollisionCounter;	/**< ExcessiveCollisionCounter */
    UINT32    lateCollisionCounter;	/**< LateCollisionCounter */
    UINT32    frameTooLongs;	/**< FrameTooLongs */
    UINT32    bufferOverflowsOnReceive;	/**< BufferOverflowsOnReceive */
    UINT32    bufferOverflowsOnTransmit;	/**< BufferOverflowsOnTransmit */
    UINT32    singleCollisionFrameCounter;	/**< SingleCollisionFrameCounter */
    UINT32    multipleCollisionsFrameCounter;	/**< MultipleCollisionsFrameCounter */
    UINT32    sqeCounter;	/**< SqeCounter */
    UINT32    deferredTransmissionCounter;	/**< DeferredTransmissionCounter */
    UINT32    internalMacTransmitErrorCounter;	/**< InternalMacTransmitErrorCounter */
    UINT32    carrierSenseErrorCounter;	/**< CarrierSenseErrorCounter */
    UINT32    alignmentErrorCounter;	/**< AlignmentErrorCounter */
    UINT32    internalMacReceiveErrorCounter;	/**< InternalMacReceiveErrorCounter */
} EthernetPmHistoryDataObject;

/*! \brief _EthernetPmHistoryDataObject is used internally to represent EthernetPmHistoryDataObject */
typedef EthernetPmHistoryDataObject _EthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.EthernetPmHistoryData2.{i}.
 *
 * MDMOID_ETHERNET_PM_HISTORY_DATA2 359
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    pppoeFilterFrameCounter;	/**< PppoeFilterFrameCounter */
} EthernetPmHistoryData2Object;

/*! \brief _EthernetPmHistoryData2Object is used internally to represent EthernetPmHistoryData2Object */
typedef EthernetPmHistoryData2Object _EthernetPmHistoryData2Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.EthernetPmHistoryData3.{i}.
 *
 * MDMOID_ETHERNET_PM_HISTORY_DATA3 360
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    dropEvents;	/**< DropEvents */
    UINT32    octets;	/**< Octets */
    UINT32    packets;	/**< Packets */
    UINT32    broadcastPackets;	/**< BroadcastPackets */
    UINT32    multicastPackets;	/**< MulticastPackets */
    UINT32    undersizePackets;	/**< UndersizePackets */
    UINT32    fragments;	/**< Fragments */
    UINT32    jabbers;	/**< Jabbers */
    UINT32    packets64Octets;	/**< Packets64Octets */
    UINT32    packets127Octets;	/**< Packets127Octets */
    UINT32    packets255Octets;	/**< Packets255Octets */
    UINT32    packets511Octets;	/**< Packets511Octets */
    UINT32    packets1023Octets;	/**< Packets1023Octets */
    UINT32    packets1518Octets;	/**< Packets1518Octets */
} EthernetPmHistoryData3Object;

/*! \brief _EthernetPmHistoryData3Object is used internally to represent EthernetPmHistoryData3Object */
typedef EthernetPmHistoryData3Object _EthernetPmHistoryData3Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.VirtualEthernetInterfacePoint.{i}.
 *
 * MDMOID_VIRTUAL_ETHERNET_INTERFACE_POINT 361
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    HEXBINARY  interDomainName;	/**< InterDomainName */
    UINT32    tcpUdpPointer;	/**< TcpUdpPointer */
    UINT32    ianaAssignedPort;	/**< IanaAssignedPort */
} VirtualEthernetInterfacePointObject;

/*! \brief _VirtualEthernetInterfacePointObject is used internally to represent VirtualEthernetInterfacePointObject */
typedef VirtualEthernetInterfacePointObject _VirtualEthernetInterfacePointObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.
 *
 * MDMOID_VOICE_SERVICES 362
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceServicesObject;

/*! \brief _VoiceServicesObject is used internally to represent VoiceServicesObject */
typedef VoiceServicesObject _VoiceServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.PptpPotsUni.{i}.
 *
 * MDMOID_PPTP_POTS_UNI 363
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    interworkingTpPointer;	/**< InterworkingTpPointer */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UINT32    impedance;	/**< Impedance */
    UINT32    transmissionPath;	/**< TransmissionPath */
    UINT32    rxGain;	/**< RxGain */
    UINT32    txGain;	/**< TxGain */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    hookState;	/**< HookState */
    UINT32    potsHoldoverTime;	/**< PotsHoldoverTime */
} PptpPotsUniObject;

/*! \brief _PptpPotsUniObject is used internally to represent PptpPotsUniObject */
typedef PptpPotsUniObject _PptpPotsUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipUserData.{i}.
 *
 * MDMOID_SIP_USER_DATA 364
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    sipAgentPointer;	/**< SipAgentPointer */
    UINT32    userPartAor;	/**< UserPartAor */
    HEXBINARY  sipDisplayName;	/**< SipDisplayName */
    UINT32    usernamePassword;	/**< UsernamePassword */
    UINT32    voiceMailServerSipUri;	/**< VoiceMailServerSipUri */
    UINT32    voiceMailExpTime;	/**< VoiceMailExpTime */
    UINT32    networkDialPlanPointer;	/**< NetworkDialPlanPointer */
    UINT32    appServiceProfilePointer;	/**< AppServiceProfilePointer */
    UINT32    featureCodePointer;	/**< FeatureCodePointer */
    UINT32    pptpPointer;	/**< PptpPointer */
    UINT32    releaseTimer;	/**< ReleaseTimer */
    UINT32    rohTimer;	/**< RohTimer */
} SipUserDataObject;

/*! \brief _SipUserDataObject is used internally to represent SipUserDataObject */
typedef SipUserDataObject _SipUserDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipAgentConfigData.{i}.
 *
 * MDMOID_SIP_AGENT_CONFIG_DATA 365
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    proxyServerAddressPointer;	/**< ProxyServerAddressPointer */
    UINT32    outboundProxyAddressPointer;	/**< OutboundProxyAddressPointer */
    UINT32    primarySipDns;	/**< PrimarySipDns */
    UINT32    secondarySipDns;	/**< SecondarySipDns */
    UINT32    tcpUdpPointer;	/**< TcpUdpPointer */
    UINT32    sipRegExpTime;	/**< SipRegExpTime */
    UINT32    sipRegRegHeadStartTime;	/**< SipRegRegHeadStartTime */
    UINT32    hostPartUri;	/**< HostPartUri */
    UINT32    sipStatus;	/**< SipStatus */
    UINT32    sipRegistrar;	/**< SipRegistrar */
    HEXBINARY  softswitch;	/**< Softswitch */
    HEXBINARY  sipResponseTable;	/**< SipResponseTable */
    UINT32    sipOptionTransmitControl;	/**< SipOptionTransmitControl */
    UINT32    sipUriFormat;	/**< SipUriFormat */
} SipAgentConfigDataObject;

/*! \brief _SipAgentConfigDataObject is used internally to represent SipAgentConfigDataObject */
typedef SipAgentConfigDataObject _SipAgentConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpVoiceCtp.{i}.
 *
 * MDMOID_VO_IP_VOICE_CTP 366
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    userProtocolPointer;	/**< UserProtocolPointer */
    UINT32    pptpPointer;	/**< PptpPointer */
    UINT32    voIpMediaProfilePointer;	/**< VoIpMediaProfilePointer */
    UINT32    signallingCode;	/**< SignallingCode */
} VoIpVoiceCtpObject;

/*! \brief _VoIpVoiceCtpObject is used internally to represent VoIpVoiceCtpObject */
typedef VoIpVoiceCtpObject _VoIpVoiceCtpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpMediaProfile.{i}.
 *
 * MDMOID_VO_IP_MEDIA_PROFILE 367
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    faxMode;	/**< FaxMode */
    UINT32    voiceServiceProfilePointer;	/**< VoiceServiceProfilePointer */
    UINT32    codecSelection1;	/**< CodecSelection1 */
    UINT32    packetPeriodSelection1;	/**< PacketPeriodSelection1 */
    UINT32    silenceSuppression1;	/**< SilenceSuppression1 */
    UINT32    codecSelection2;	/**< CodecSelection2 */
    UINT32    packetPeriodSelection2;	/**< PacketPeriodSelection2 */
    UINT32    silenceSuppression2;	/**< SilenceSuppression2 */
    UINT32    codecSelection3;	/**< CodecSelection3 */
    UINT32    packetPeriodSelection3;	/**< PacketPeriodSelection3 */
    UINT32    silenceSuppression3;	/**< SilenceSuppression3 */
    UINT32    codecSelection4;	/**< CodecSelection4 */
    UINT32    packetPeriodSelection4;	/**< PacketPeriodSelection4 */
    UINT32    silenceSuppression4;	/**< SilenceSuppression4 */
    UINT32    oobDtmf;	/**< OobDtmf */
    UINT32    rtpProfilePointer;	/**< RtpProfilePointer */
} VoIpMediaProfileObject;

/*! \brief _VoIpMediaProfileObject is used internally to represent VoIpMediaProfileObject */
typedef VoIpMediaProfileObject _VoIpMediaProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoiceServiceProfile.{i}.
 *
 * MDMOID_VOICE_SERVICE 368
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    announcementType;	/**< AnnouncementType */
    UINT32    jitterTarget;	/**< JitterTarget */
    UINT32    jitterBufferMax;	/**< JitterBufferMax */
    UBOOL8    echoCancel;	/**< EchoCancel */
    UINT32    pstnProtocolVariant;	/**< PstnProtocolVariant */
    UINT32    dtmfDigitLevels;	/**< DtmfDigitLevels */
    UINT32    dtmfDigitDuration;	/**< DtmfDigitDuration */
    UINT32    hookFlashMinTime;	/**< HookFlashMinTime */
    UINT32    hookFlashMaxTime;	/**< HookFlashMaxTime */
    HEXBINARY  tonePatternTable;	/**< TonePatternTable */
    HEXBINARY  toneEventTable;	/**< ToneEventTable */
    HEXBINARY  ringingPatternTable;	/**< RingingPatternTable */
    HEXBINARY  ringingEventTable;	/**< RingingEventTable */
} VoiceServiceObject;

/*! \brief _VoiceServiceObject is used internally to represent VoiceServiceObject */
typedef VoiceServiceObject _VoiceServiceObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.RtpProfileData.{i}.
 *
 * MDMOID_RTP_PROFILE_DATA 369
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    localPortMin;	/**< LocalPortMin */
    UINT32    localPortMax;	/**< LocalPortMax */
    UINT32    dscpMark;	/**< DscpMark */
    UBOOL8    piggybackEvents;	/**< PiggybackEvents */
    UBOOL8    toneEvents;	/**< ToneEvents */
    UBOOL8    dtmfEvents;	/**< DtmfEvents */
    UBOOL8    casEvents;	/**< CasEvents */
} RtpProfileDataObject;

/*! \brief _RtpProfileDataObject is used internally to represent RtpProfileDataObject */
typedef RtpProfileDataObject _RtpProfileDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpAppServiceProfile.{i}.
 *
 * MDMOID_VO_IP_APP_SERVICE_PROFILE 370
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    cidFeatures;	/**< CidFeatures */
    UINT32    callWaitingFeatures;	/**< CallWaitingFeatures */
    UINT32    callProgressFeatures;	/**< CallProgressFeatures */
    UINT32    callPresentationFeatures;	/**< CallPresentationFeatures */
    UINT32    directConnectFeature;	/**< DirectConnectFeature */
    UINT32    directConnectUriPointer;	/**< DirectConnectUriPointer */
    UINT32    bridgedLineAgentUriPointer;	/**< BridgedLineAgentUriPointer */
    UINT32    conferenceFactoryUriPointer;	/**< ConferenceFactoryUriPointer */
} VoIpAppServiceProfileObject;

/*! \brief _VoIpAppServiceProfileObject is used internally to represent VoIpAppServiceProfileObject */
typedef VoIpAppServiceProfileObject _VoIpAppServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoiceFeatureAccessCodes.{i}.
 *
 * MDMOID_VOICE_FEATURE_ACCESS_CODES 371
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  cancelCallWaiting;	/**< CancelCallWaiting */
    HEXBINARY  callHold;	/**< CallHold */
    HEXBINARY  callPark;	/**< CallPark */
    HEXBINARY  callerIdActivate;	/**< CallerIdActivate */
    HEXBINARY  callerIdDeactivate;	/**< CallerIdDeactivate */
    HEXBINARY  doNotDisturdActivation;	/**< DoNotDisturdActivation */
    HEXBINARY  doNotDisturdDeactivation;	/**< DoNotDisturdDeactivation */
    HEXBINARY  doNotDisturdPinChange;	/**< DoNotDisturdPinChange */
    HEXBINARY  emergencyServiceNumber;	/**< EmergencyServiceNumber */
    HEXBINARY  intercomService;	/**< IntercomService */
    HEXBINARY  unattendedCallTransfer;	/**< UnattendedCallTransfer */
    HEXBINARY  attendedCallTransfer;	/**< AttendedCallTransfer */
} VoiceFeatureAccessCodesObject;

/*! \brief _VoiceFeatureAccessCodesObject is used internally to represent VoiceFeatureAccessCodesObject */
typedef VoiceFeatureAccessCodesObject _VoiceFeatureAccessCodesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.NetworkDialPlanTable.{i}.
 *
 * MDMOID_NETWORK_DIAL_PLAN_TABLE 372
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    dialPlanNumber;	/**< DialPlanNumber */
    UINT32    dialPlanTableMaxSize;	/**< DialPlanTableMaxSize */
    UINT32    criticalDialTimeout;	/**< CriticalDialTimeout */
    UINT32    partialDialTimeout;	/**< PartialDialTimeout */
    UINT32    dialPlanFormat;	/**< DialPlanFormat */
    HEXBINARY  dialPlanTable;	/**< DialPlanTable */
} NetworkDialPlanTableObject;

/*! \brief _NetworkDialPlanTableObject is used internally to represent NetworkDialPlanTableObject */
typedef NetworkDialPlanTableObject _NetworkDialPlanTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.NetworkDialPlanTable.{i}.DialPlanTable.{i}.
 *
 * MDMOID_DIAL_PLAN_TABLE 373
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    dialPlanId;	/**< DialPlanId */
    UINT32    action;	/**< Action */
    HEXBINARY  dialPlanTable;	/**< DialPlanTable */
} DialPlanTableObject;

/*! \brief _DialPlanTableObject is used internally to represent DialPlanTableObject */
typedef DialPlanTableObject _DialPlanTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpLineStatus.{i}.
 *
 * MDMOID_VO_IP_LINE_STATUS 374
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    voIpCodecUsed;	/**< VoIpCodecUsed */
    UINT32    voIpVoiceServerStatus;	/**< VoIpVoiceServerStatus */
    UINT32    voIpPortSessionType;	/**< VoIpPortSessionType */
    UINT32    voIpCall1PacketPeriod;	/**< VoIpCall1PacketPeriod */
    UINT32    voIpCall2PacketPeriod;	/**< VoIpCall2PacketPeriod */
    HEXBINARY  voIpCall1DstAddr;	/**< VoIpCall1DstAddr */
    HEXBINARY  voIpCall2DstAddr;	/**< VoIpCall2DstAddr */
} VoIpLineStatusObject;

/*! \brief _VoIpLineStatusObject is used internally to represent VoIpLineStatusObject */
typedef VoIpLineStatusObject _VoIpLineStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.CallControlPmHistoryData.{i}.
 *
 * MDMOID_CALL_CONTROL_PM_HISTORY_DATA 375
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    callSetupFailures;	/**< CallSetupFailures */
    UINT32    callSetupTimer;	/**< CallSetupTimer */
    UINT32    callTerminateFailures;	/**< CallTerminateFailures */
    UINT32    analogPortReleases;	/**< AnalogPortReleases */
    UINT32    analogPortOffHookTimer;	/**< AnalogPortOffHookTimer */
} CallControlPmHistoryDataObject;

/*! \brief _CallControlPmHistoryDataObject is used internally to represent CallControlPmHistoryDataObject */
typedef CallControlPmHistoryDataObject _CallControlPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.RtpPmHistoryData.{i}.
 *
 * MDMOID_RTP_PM_HISTORY_DATA 376
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    rtpErrors;	/**< RtpErrors */
    UINT32    packetLoss;	/**< PacketLoss */
    UINT32    maxJitter;	/**< MaxJitter */
    UINT32    maxTimeBetweenRtcpPackets;	/**< MaxTimeBetweenRtcpPackets */
    UINT32    bufferUnderflows;	/**< BufferUnderflows */
    UINT32    bufferOverflows;	/**< BufferOverflows */
} RtpPmHistoryDataObject;

/*! \brief _RtpPmHistoryDataObject is used internally to represent RtpPmHistoryDataObject */
typedef RtpPmHistoryDataObject _RtpPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipAgentPmHistoryData.{i}.
 *
 * MDMOID_SIP_AGENT_PM_HISTORY_DATA 377
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    transactions;	/**< Transactions */
    UINT32    rxInviteReqs;	/**< RxInviteReqs */
    UINT32    rxInviteRetrans;	/**< RxInviteRetrans */
    UINT32    rxNonInviteReqs;	/**< RxNonInviteReqs */
    UINT32    rxNonInviteRetrans;	/**< RxNonInviteRetrans */
    UINT32    rxResponse;	/**< RxResponse */
    UINT32    rxResponseRetrans;	/**< RxResponseRetrans */
    UINT32    txInviteReqs;	/**< TxInviteReqs */
    UINT32    txInviteRetrans;	/**< TxInviteRetrans */
    UINT32    txNonInviteReqs;	/**< TxNonInviteReqs */
    UINT32    txNonInviteRetrans;	/**< TxNonInviteRetrans */
    UINT32    txResponse;	/**< TxResponse */
    UINT32    txResponseRetrans;	/**< TxResponseRetrans */
} SipAgentPmHistoryDataObject;

/*! \brief _SipAgentPmHistoryDataObject is used internally to represent SipAgentPmHistoryDataObject */
typedef SipAgentPmHistoryDataObject _SipAgentPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipCallInitPmHistoryData.{i}.
 *
 * MDMOID_SIP_CALL_INIT_PM_HISTORY_DATA 378
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    failToConnectCounter;	/**< FailToConnectCounter */
    UINT32    failToValidateCounter;	/**< FailToValidateCounter */
    UINT32    timeoutCounter;	/**< TimeoutCounter */
    UINT32    failureReceivedCounter;	/**< FailureReceivedCounter */
    UINT32    failToAuthenticateCounter;	/**< FailToAuthenticateCounter */
} SipCallInitPmHistoryDataObject;

/*! \brief _SipCallInitPmHistoryDataObject is used internally to represent SipCallInitPmHistoryDataObject */
typedef SipCallInitPmHistoryDataObject _SipCallInitPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.MgcConfigData.{i}.
 *
 * MDMOID_MGC_CONFIG_DATA 379
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    primaryMgc;	/**< PrimaryMgc */
    UINT32    secondaryMgc;	/**< SecondaryMgc */
    UINT32    tcpUdpPointer;	/**< TcpUdpPointer */
    UINT32    version;	/**< Version */
    UINT32    messageFormat;	/**< MessageFormat */
    UINT32    maxRetryTime;	/**< MaxRetryTime */
    UINT32    maxRetryAttempts;	/**< MaxRetryAttempts */
    UINT32    serviceChangeDelay;	/**< ServiceChangeDelay */
    HEXBINARY  terminationIdBase;	/**< TerminationIdBase */
    HEXBINARY  softswitch;	/**< Softswitch */
} MgcConfigDataObject;

/*! \brief _MgcConfigDataObject is used internally to represent MgcConfigDataObject */
typedef MgcConfigDataObject _MgcConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.MgcPmHistoryData.{i}.
 *
 * MDMOID_MGC_PM_HISTORY_DATA 380
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    receivedMessages;	/**< ReceivedMessages */
    UINT32    receivedOctets;	/**< ReceivedOctets */
    UINT32    sentMessages;	/**< SentMessages */
    UINT32    sentOctets;	/**< SentOctets */
    UINT32    protocolErrors;	/**< ProtocolErrors */
    UINT32    transportLosses;	/**< TransportLosses */
    UINT32    lastDetectedEvent;	/**< LastDetectedEvent */
    UINT32    lastDetectedEventTime;	/**< LastDetectedEventTime */
    UINT32    lastDetectedResetTime;	/**< LastDetectedResetTime */
} MgcPmHistoryDataObject;

/*! \brief _MgcPmHistoryDataObject is used internally to represent MgcPmHistoryDataObject */
typedef MgcPmHistoryDataObject _MgcPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpConfigData.{i}.
 *
 * MDMOID_VO_IP_CONFIG_DATA 381
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    availableSignalProtocol;	/**< AvailableSignalProtocol */
    UINT32    usedSignalProtocol;	/**< UsedSignalProtocol */
    UINT32    availableVoIpConfigMethods;	/**< AvailableVoIpConfigMethods */
    UINT32    usedVoIpConfigMethods;	/**< UsedVoIpConfigMethods */
    UINT32    voIpConfigAddrPointer;	/**< VoIpConfigAddrPointer */
    UINT32    voIpConfigState;	/**< VoIpConfigState */
    UINT32    retrieveProfile;	/**< RetrieveProfile */
    HEXBINARY  profileVersion;	/**< ProfileVersion */
} VoIpConfigDataObject;

/*! \brief _VoIpConfigDataObject is used internally to represent VoIpConfigDataObject */
typedef VoIpConfigDataObject _VoIpConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.
 *
 * MDMOID_MOCA_SERVICES 382
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} MocaServicesObject;

/*! \brief _MocaServicesObject is used internally to represent MocaServicesObject */
typedef MocaServicesObject _MocaServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.PptpMocaUni.{i}.
 *
 * MDMOID_PPTP_MOCA_UNI 383
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    networkStatus;	/**< NetworkStatus */
    HEXBINARY  password;	/**< Password */
    UBOOL8    privacy;	/**< Privacy */
    UINT32    minBandwidthAlarmThreshold;	/**< MinBandwidthAlarmThreshold */
    UINT32    frequencyMask;	/**< FrequencyMask */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    lastOperationalFrequency;	/**< LastOperationalFrequency */
} PptpMocaUniObject;

/*! \brief _PptpMocaUniObject is used internally to represent PptpMocaUniObject */
typedef PptpMocaUniObject _PptpMocaUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.X_404A03_PptpMocaUni.{i}.
 *
 * MDMOID_BRCM_PPTP_MOCA_UNI 384
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ncMode;	/**< NcMode */
    UBOOL8    autoNwSearch;	/**< AutoNwSearch */
    UBOOL8    txPwrControl;	/**< TxPwrControl */
    UINT32    continuousPowerMode;	/**< ContinuousPowerMode */
    UINT32    mcastMode;	/**< McastMode */
    UBOOL8    labMode;	/**< LabMode */
    UBOOL8    eclQTagMode;	/**< EclQTagMode */
    UINT32    maxTransmitTime;	/**< MaxTransmitTime */
    SINT32    maxTransmitPower;	/**< MaxTransmitPower */
    UINT32    snrMargin;	/**< SnrMargin */
    UINT32    outOfOrderLmo;	/**< OutOfOrderLmo */
    UBOOL8    lmoReportEnable;	/**< LmoReportEnable */
    UINT32    tabooMaskStart;	/**< TabooMaskStart */
    UINT32    tabooChannelMask;	/**< TabooChannelMask */
    UBOOL8    continuousIerrInsert;	/**< ContinuousIerrInsert */
    UBOOL8    continuousIeMapInsert;	/**< ContinuousIeMapInsert */
    UINT32    maxPktAggr;	/**< MaxPktAggr */
    UINT32    maxConstellationNode;	/**< MaxConstellationNode */
    UINT32    maxConstellation;	/**< MaxConstellation */
    UBOOL8    preferedNetworkController;	/**< PreferedNetworkController */
    UINT32    pmkExchangeInterval;	/**< PmkExchangeInterval */
    UINT32    tekExchangeInterval;	/**< TekExchangeInterval */
} BrcmPptpMocaUniObject;

/*! \brief _BrcmPptpMocaUniObject is used internally to represent BrcmPptpMocaUniObject */
typedef BrcmPptpMocaUniObject _BrcmPptpMocaUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.X_404A03_MocaStatus.{i}.
 *
 * MDMOID_MOCA_STATUS 385
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    vendorId;	/**< VendorId */
    UINT32    hwVersion;	/**< HwVersion */
    UINT32    softwareVersion;	/**< SoftwareVersion */
    UINT32    selfMoCAVersion;	/**< SelfMoCAVersion */
    UINT32    networkVersionNumber;	/**< NetworkVersionNumber */
    UINT32    qam256Support;	/**< Qam256Support */
    UINT32    operationalStatus;	/**< OperationalStatus */
    UINT32    linkStatus;	/**< LinkStatus */
    UINT32    connectedNodes;	/**< ConnectedNodes */
    UINT32    nodeId;	/**< NodeId */
    UINT32    networkControllerNodeId;	/**< NetworkControllerNodeId */
    UINT32    upTime;	/**< UpTime */
    UINT32    linkUpTime;	/**< LinkUpTime */
    UINT32    backupNetworkControllerNodeId;	/**< BackupNetworkControllerNodeId */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    bwStatus;	/**< BwStatus */
} MocaStatusObject;

/*! \brief _MocaStatusObject is used internally to represent MocaStatusObject */
typedef MocaStatusObject _MocaStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.X_404A03_MocaStats.{i}.
 *
 * MDMOID_MOCA_STATS 386
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    inUcPkts;	/**< InUcPkts */
    UINT32    inDiscardPktsEcl;	/**< InDiscardPktsEcl */
    UINT32    inDiscardPktsMac;	/**< InDiscardPktsMac */
    UINT32    inUnKnownPkts;	/**< InUnKnownPkts */
    UINT32    inMcPkts;	/**< InMcPkts */
    UINT32    inBcPkts;	/**< InBcPkts */
    UINT32    inOctetsLow;	/**< InOctetsLow */
    UINT32    outUcPkts;	/**< OutUcPkts */
    UINT32    outDiscardPkts;	/**< OutDiscardPkts */
    UINT32    outBcPkts;	/**< OutBcPkts */
    UINT32    outOctetsLow;	/**< OutOctetsLow */
    UINT32    networkControllerHandOffs;	/**< NetworkControllerHandOffs */
    UINT32    networkControllerBackups;	/**< NetworkControllerBackups */
} MocaStatsObject;

/*! \brief _MocaStatsObject is used internally to represent MocaStatsObject */
typedef MocaStatsObject _MocaStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.MocaEthernetPmHistoryData.{i}.
 *
 * MDMOID_MOCA_ETHERNET_PM_HISTORY_DATA 387
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    incomingUnicastPackets;	/**< IncomingUnicastPackets */
    UINT32    incomingDiscardedPackets;	/**< IncomingDiscardedPackets */
    UINT32    incomingErroredPackets;	/**< IncomingErroredPackets */
    UINT32    incomingUnknownPackets;	/**< IncomingUnknownPackets */
    UINT32    incomingMulticastPackets;	/**< IncomingMulticastPackets */
    UINT32    incomingBroadcastPackets;	/**< IncomingBroadcastPackets */
    UINT32    incomingOctets;	/**< IncomingOctets */
    UINT32    outgoingUnicastPackets;	/**< OutgoingUnicastPackets */
    UINT32    outgoingDiscardedPackets;	/**< OutgoingDiscardedPackets */
    UINT32    outgoingErroredPackets;	/**< OutgoingErroredPackets */
    UINT32    outgoingUnknownPackets;	/**< OutgoingUnknownPackets */
    UINT32    outgoingMulticastPackets;	/**< OutgoingMulticastPackets */
    UINT32    outgoingBroadcastPackets;	/**< OutgoingBroadcastPackets */
    UINT32    outgoingOctets;	/**< OutgoingOctets */
} MocaEthernetPmHistoryDataObject;

/*! \brief _MocaEthernetPmHistoryDataObject is used internally to represent MocaEthernetPmHistoryDataObject */
typedef MocaEthernetPmHistoryDataObject _MocaEthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.MocaInterfacePmHistoryData.{i}.
 *
 * MDMOID_MOCA_INTERFACE_PM_HISTORY_DATA 388
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    phyTxBroadcastRate;	/**< PhyTxBroadcastRate */
} MocaInterfacePmHistoryDataObject;

/*! \brief _MocaInterfacePmHistoryDataObject is used internally to represent MocaInterfacePmHistoryDataObject */
typedef MocaInterfacePmHistoryDataObject _MocaInterfacePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.MocaInterfacePmHistoryData.{i}.NodeTable.{i}.
 *
 * MDMOID_MOCA_INTERFACE_PM_HISTORY_DATA_NODE_TABLE 389
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  macAddress;	/**< MacAddress */
    UINT32    phyTxRate;	/**< PhyTxRate */
    UINT32    txPowerControlReduction;	/**< TxPowerControlReduction */
    UINT32    phyRxRate;	/**< PhyRxRate */
    UINT32    rxPowerLevel;	/**< RxPowerLevel */
    UINT32    phyRxBroadcastRate;	/**< PhyRxBroadcastRate */
    UINT32    rxBroadcastPowerLevel;	/**< RxBroadcastPowerLevel */
    UINT32    txPackets;	/**< TxPackets */
    UINT32    rxPackets;	/**< RxPackets */
    UINT32    erroredMissedRxPackets;	/**< ErroredMissedRxPackets */
    UINT32    erroredRxPackets;	/**< ErroredRxPackets */
} MocaInterfacePmHistoryDataNodeTableObject;

/*! \brief _MocaInterfacePmHistoryDataNodeTableObject is used internally to represent MocaInterfacePmHistoryDataNodeTableObject */
typedef MocaInterfacePmHistoryDataNodeTableObject _MocaInterfacePmHistoryDataNodeTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.
 *
 * MDMOID_TRAFFIC_MANAGEMENT 390
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} TrafficManagementObject;

/*! \brief _TrafficManagementObject is used internally to represent TrafficManagementObject */
typedef TrafficManagementObject _TrafficManagementObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.PriorityQueueG.{i}.
 *
 * MDMOID_PRIORITY_QUEUE_G 391
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    queueConfigurationOption;	/**< QueueConfigurationOption */
    UINT32    maxQueueSize;	/**< MaxQueueSize */
    UINT32    allocatedQueueSize;	/**< AllocatedQueueSize */
    UINT32    discardBlockCounterResetInterval;	/**< DiscardBlockCounterResetInterval */
    UINT32    bufferOverFlowsDiscardBlockThreshold;	/**< BufferOverFlowsDiscardBlockThreshold */
    UINT32    relatedPort;	/**< RelatedPort */
    UINT32    trafficSchedulerGPointer;	/**< TrafficSchedulerGPointer */
    UINT32    weight;	/**< Weight */
    UINT32    backPressureOperation;	/**< BackPressureOperation */
    UINT32    backPressureTime;	/**< BackPressureTime */
    UINT32    backPressureOccurQueueThreshold;	/**< BackPressureOccurQueueThreshold */
    UINT32    backPressureClearQueueThreshold;	/**< BackPressureClearQueueThreshold */
} PriorityQueueGObject;

/*! \brief _PriorityQueueGObject is used internally to represent PriorityQueueGObject */
typedef PriorityQueueGObject _PriorityQueueGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.TrafficSchedulerG.{i}.
 *
 * MDMOID_TRAFFIC_SCHEDULER_G 392
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    TContPointer;	/**< TContPointer */
    UINT32    trafficSchedulerGPointer;	/**< TrafficSchedulerGPointer */
    UINT32    policy;	/**< Policy */
    UINT32    priority;	/**< Priority */
} TrafficSchedulerGObject;

/*! \brief _TrafficSchedulerGObject is used internally to represent TrafficSchedulerGObject */
typedef TrafficSchedulerGObject _TrafficSchedulerGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.GemTrafficDescriptor.{i}.
 *
 * MDMOID_GEM_TRAFFIC_DESCRIPTOR 393
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    CIR;	/**< CIR */
    UINT32    PIR;	/**< PIR */
    UINT32    CBS;	/**< CBS */
    UINT32    PBS;	/**< PBS */
    UINT32    colourMode;	/**< ColourMode */
    UINT32    ingressColourMarking;	/**< IngressColourMarking */
    UINT32    egressColourMarking;	/**< EgressColourMarking */
    UINT32    meterType;	/**< MeterType */
} GemTrafficDescriptorObject;

/*! \brief _GemTrafficDescriptorObject is used internally to represent GemTrafficDescriptorObject */
typedef GemTrafficDescriptorObject _GemTrafficDescriptorObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.
 *
 * MDMOID_GENERAL 394
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} GeneralObject;

/*! \brief _GeneralObject is used internally to represent GeneralObject */
typedef GeneralObject _GeneralObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.UniG.{i}.
 *
 * MDMOID_UNI_G 395
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    configurationOptionStatus;	/**< ConfigurationOptionStatus */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    managementCapability;	/**< ManagementCapability */
    UINT32    nonOmciManagementId;	/**< NonOmciManagementId */
} UniGObject;

/*! \brief _UniGObject is used internally to represent UniGObject */
typedef UniGObject _UniGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.OltG.
 *
 * MDMOID_OLT_G 396
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  oltVendorId;	/**< OltVendorId */
    HEXBINARY  equipmentId;	/**< EquipmentId */
    HEXBINARY  version;	/**< Version */
    HEXBINARY  timeInfo;	/**< TimeInfo */
} OltGObject;

/*! \brief _OltGObject is used internally to represent OltGObject */
typedef OltGObject _OltGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.NetworkAddress.{i}.
 *
 * MDMOID_NETWORK_ADDRESS 397
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    securityPointer;	/**< SecurityPointer */
    UINT32    addressPointer;	/**< AddressPointer */
} NetworkAddressObject;

/*! \brief _NetworkAddressObject is used internally to represent NetworkAddressObject */
typedef NetworkAddressObject _NetworkAddressObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.AuthenticationSecurityMethod.{i}.
 *
 * MDMOID_AUTHENTICATION_SECURITY_METHOD 398
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    validationScheme;	/**< ValidationScheme */
    HEXBINARY  username1;	/**< Username1 */
    HEXBINARY  password;	/**< Password */
    HEXBINARY  realm;	/**< Realm */
    HEXBINARY  username2;	/**< Username2 */
} AuthenticationSecurityMethodObject;

/*! \brief _AuthenticationSecurityMethodObject is used internally to represent AuthenticationSecurityMethodObject */
typedef AuthenticationSecurityMethodObject _AuthenticationSecurityMethodObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.LargeString.{i}.
 *
 * MDMOID_LARGE_STRING 399
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    numberOfParts;	/**< NumberOfParts */
    char *    part1;	/**< Part1 */
    char *    part2;	/**< Part2 */
    char *    part3;	/**< Part3 */
    char *    part4;	/**< Part4 */
    char *    part5;	/**< Part5 */
    char *    part6;	/**< Part6 */
    char *    part7;	/**< Part7 */
    char *    part8;	/**< Part8 */
    char *    part9;	/**< Part9 */
    char *    part10;	/**< Part10 */
    char *    part11;	/**< Part11 */
    char *    part12;	/**< Part12 */
    char *    part13;	/**< Part13 */
    char *    part14;	/**< Part14 */
    char *    part15;	/**< Part15 */
} LargeStringObject;

/*! \brief _LargeStringObject is used internally to represent LargeStringObject */
typedef LargeStringObject _LargeStringObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.ThresholdData1.{i}.
 *
 * MDMOID_THRESHOLD_DATA1 400
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    thresholdValue1;	/**< ThresholdValue1 */
    UINT32    thresholdValue2;	/**< ThresholdValue2 */
    UINT32    thresholdValue3;	/**< ThresholdValue3 */
    UINT32    thresholdValue4;	/**< ThresholdValue4 */
    UINT32    thresholdValue5;	/**< ThresholdValue5 */
    UINT32    thresholdValue6;	/**< ThresholdValue6 */
    UINT32    thresholdValue7;	/**< ThresholdValue7 */
} ThresholdData1Object;

/*! \brief _ThresholdData1Object is used internally to represent ThresholdData1Object */
typedef ThresholdData1Object _ThresholdData1Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.ThresholdData2.{i}.
 *
 * MDMOID_THRESHOLD_DATA2 401
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    thresholdValue8;	/**< ThresholdValue8 */
    UINT32    thresholdValue9;	/**< ThresholdValue9 */
    UINT32    thresholdValue10;	/**< ThresholdValue10 */
    UINT32    thresholdValue11;	/**< ThresholdValue11 */
    UINT32    thresholdValue12;	/**< ThresholdValue12 */
    UINT32    thresholdValue13;	/**< ThresholdValue13 */
    UINT32    thresholdValue14;	/**< ThresholdValue14 */
} ThresholdData2Object;

/*! \brief _ThresholdData2Object is used internally to represent ThresholdData2Object */
typedef ThresholdData2Object _ThresholdData2Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.Omci.
 *
 * MDMOID_OMCI 402
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  meTypeTable;	/**< MeTypeTable */
    HEXBINARY  messageTypeTable;	/**< MessageTypeTable */
} OmciObject;

/*! \brief _OmciObject is used internally to represent OmciObject */
typedef OmciObject _OmciObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.TR069ManagementServer.{i}.
 *
 * MDMOID_TR069_MANAGEMENT_SERVER 403
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    acsNetworkAddress;	/**< AcsNetworkAddress */
    UINT32    associatedTag;	/**< AssociatedTag */
} Tr069ManagementServerObject;

/*! \brief _Tr069ManagementServerObject is used internally to represent Tr069ManagementServerObject */
typedef Tr069ManagementServerObject _Tr069ManagementServerObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_OmciSystem.
 *
 * MDMOID_OMCI_SYSTEM 404
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    tcontManagedEntityId;	/**< TcontManagedEntityId */
    UINT32    numberOfTConts;	/**< NumberOfTConts */
    UINT32    ethernetManagedEntityId1;	/**< EthernetManagedEntityId1 */
    UINT32    ethernetManagedEntityId2;	/**< EthernetManagedEntityId2 */
    UINT32    ethernetManagedEntityId3;	/**< EthernetManagedEntityId3 */
    UINT32    ethernetManagedEntityId4;	/**< EthernetManagedEntityId4 */
    UINT32    ethernetManagedEntityId5;	/**< EthernetManagedEntityId5 */
    UINT32    ethernetManagedEntityId6;	/**< EthernetManagedEntityId6 */
    UINT32    ethernetManagedEntityId7;	/**< EthernetManagedEntityId7 */
    UINT32    ethernetManagedEntityId8;	/**< EthernetManagedEntityId8 */
    UINT32    numberOfEthernetPorts;	/**< NumberOfEthernetPorts */
    UINT32    ethernetTypes;	/**< EthernetTypes */
    UINT32    veipPptpUni0;	/**< VeipPptpUni0 */
    UINT32    mocaManagedEntityId1;	/**< MocaManagedEntityId1 */
    UINT32    mocaManagedEntityId2;	/**< MocaManagedEntityId2 */
    UINT32    numberOfMocaPorts;	/**< NumberOfMocaPorts */
    UINT32    potsManagedEntityId1;	/**< PotsManagedEntityId1 */
    UINT32    potsManagedEntityId2;	/**< PotsManagedEntityId2 */
    UINT32    numberOfPotsPorts;	/**< NumberOfPotsPorts */
    UINT32    veipManagedEntityId1;	/**< VeipManagedEntityId1 */
    UINT32    numberOfVeipPorts;	/**< NumberOfVeipPorts */
    UINT32    numberOfDownstreamPriorityQueues;	/**< NumberOfDownstreamPriorityQueues */
    UINT32    debugFlags;	/**< DebugFlags */
    UINT32    dataPathMode;	/**< DataPathMode */
    UINT32    promiscMode;	/**< PromiscMode */
#ifdef DMP_X_404A03_GPONRG_OMCI_LIGHT_1
    UBOOL8    compatibleRGOmciLight;	/**< CompatibleRGOmciLight */
#endif
#ifdef DMP_X_404A03_GPONRG_OMCI_FULL_1
    UBOOL8    compatibleRGOmciFull;	/**< CompatibleRGOmciFull */
#endif
#ifdef DMP_X_404A03_GPONONT_1
    UBOOL8    compatibleOnt;	/**< CompatibleOnt */
#endif
} OmciSystemObject;

/*! \brief _OmciSystemObject is used internally to represent OmciSystemObject */
typedef OmciSystemObject _OmciSystemObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_GponOmciStats.
 *
 * MDMOID_GPON_OMCI_STATS 405
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    rxGoodPackets;	/**< RxGoodPackets */
    UINT32    rxLengthErrors;	/**< RxLengthErrors */
    UINT32    rxCrcErrors;	/**< RxCrcErrors */
    UINT32    rxOtherErrors;	/**< RxOtherErrors */
    UINT32    txAvcPackets;	/**< TxAvcPackets */
    UINT32    txResponsePackets;	/**< TxResponsePackets */
    UINT32    txRetransmissions;	/**< TxRetransmissions */
    UINT32    txErrors;	/**< TxErrors */
} GponOmciStatsObject;

/*! \brief _GponOmciStatsObject is used internally to represent GponOmciStatsObject */
typedef GponOmciStatsObject _GponOmciStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_WlanNvram.
 *
 * MDMOID_WLAN_NVRAM 406
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlanNvram;	/**< WlanNvram */
} WlanNvramObject;

/*! \brief _WlanNvramObject is used internally to represent WlanNvramObject */
typedef WlanNvramObject _WlanNvramObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_DefaultPPPConfig.
 *
 * MDMOID_PPP_DEFAULT_CONFIG 407
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    passwordCHAP;	/**< PasswordCHAP */
    char *    passwordPAP;	/**< PasswordPAP */
    char *    backupUsername;	/**< BackupUsername */
    char *    backupPassword;	/**< BackupPassword */
} PPPDefaultConfigObject;

/*! \brief _PPPDefaultConfigObject is used internally to represent PPPDefaultConfigObject */
typedef PPPDefaultConfigObject _PPPDefaultConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.
 *
 * MDMOID_CTOAM 408
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    UINT32    portID;	/**< PortID */
#endif
} CTOAMObject;

/*! \brief _CTOAMObject is used internally to represent CTOAMObject */
typedef CTOAMObject _CTOAMObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.IADInfo.
 *
 * MDMOID_OAMIAD_INFO 409
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  MACAddress;	/**< MACAddress */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    protocolSupported;	/**< ProtocolSupported */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  iadSoftwareVersion;	/**< IadSoftwareVersion */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  iadSoftwaretime;	/**< IadSoftwaretime */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voipUserCount;	/**< VoipUserCount */
#endif
} OAMIADInfoObject;

/*! \brief _OAMIADInfoObject is used internally to represent OAMIADInfoObject */
typedef OAMIADInfoObject _OAMIADInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.GlobalParameterConfig.
 *
 * MDMOID_OAM_GLB_PARAM_CFG 410
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceIpMode;	/**< VoiceIpMode */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    ipAddr;	/**< iadIpAddr */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    netMask;	/**< iadNetMask */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    defaultGW;	/**< iadDefaultGW */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    PPPoEMode;	/**< PPPoEMode */
#endif
#ifdef DMP_ENDPOINT_1
    char *    PPPOEusername;	/**< PPPOEusername */
#endif
#ifdef DMP_ENDPOINT_1
    BASE64    PPPOEpassword;	/**< PPPOEpassword */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    taggedflag;	/**< Taggedflag */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceCVlan;	/**< VoiceCVlan */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceSVlan;	/**< VoiceSVlan */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voicePriority;	/**< VoicePriority */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    status;	/**< Status */
#endif
} OAMGlbParamCfgObject;

/*! \brief _OAMGlbParamCfgObject is used internally to represent OAMGlbParamCfgObject */
typedef OAMGlbParamCfgObject _OAMGlbParamCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.SIPParameterConfig.
 *
 * MDMOID_OAMSIP_PARAM_CFG 411
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    MGPortNo;	/**< MGPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipProxyServIp;	/**< SipProxyServIp */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipProxyServComPortNo;	/**< SipProxyServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backupSipProxyServIp;	/**< BackupSipProxyServIp */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backUpSipProxyServComPortNo;	/**< BackUpSipProxyServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    activeSipProxyServer;	/**< ActiveSipProxyServer */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipRegServIP;	/**< SipRegServIP */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipRegServComPortNo;	/**< SipRegServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backupSipRegServIp;	/**< BackupSipRegServIp */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backupSipRegServComPortNo;	/**< BackupSipRegServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    outBoundServPortIP;	/**< OutBoundServPortIP */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    outBoundServPortNo;	/**< OutBoundServPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipRegIntervalSIP;	/**< SipRegIntervalSIP */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    heartbeatSwitch;	/**< HeartbeatSwitch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    heartbeatCycle;	/**< HeartbeatCycle */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    heartbeatCount;	/**< HeartbeatCount */
#endif
} OAMSIPParamCfgObject;

/*! \brief _OAMSIPParamCfgObject is used internally to represent OAMSIPParamCfgObject */
typedef OAMSIPParamCfgObject _OAMSIPParamCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.SIPUserParameterConfig.
 *
 * MDMOID_OAMSIP_USR_PARAM_CFG 412
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  userAccount;	/**< UserAccount */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  username;	/**< Username */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  userPassword;	/**< UserPassword */
#endif
} OAMSIPUsrParamCfgObject;

/*! \brief _OAMSIPUsrParamCfgObject is used internally to represent OAMSIPUsrParamCfgObject */
typedef OAMSIPUsrParamCfgObject _OAMSIPUsrParamCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.FAXModemConfig.
 *
 * MDMOID_OAMFAXMD_CFG 413
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceT38Enable;	/**< VoiceT38Enable */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceFaxModemControl;	/**< VoiceFaxModemControl */
#endif
} OAMFAXMDCfgObject;

/*! \brief _OAMFAXMDCfgObject is used internally to represent OAMFAXMDCfgObject */
typedef OAMFAXMDCfgObject _OAMFAXMDCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.POTSStatus.
 *
 * MDMOID_OAMPOTS_STS 414
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    IADPortStatus;	/**< IADPortStatus */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    portServiceState;	/**< iadPortServiceState */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    portCodecMode;	/**< iadPortCodecMode */
#endif
} OAMPOTSStsObject;

/*! \brief _OAMPOTSStsObject is used internally to represent OAMPOTSStsObject */
typedef OAMPOTSStsObject _OAMPOTSStsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.IADOperation.
 *
 * MDMOID_OAMIAD_OP 415
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    UINT32    operation;	/**< iadOperation */
#endif
} OAMIADOpObject;

/*! \brief _OAMIADOpObject is used internally to represent OAMIADOpObject */
typedef OAMIADOpObject _OAMIADOpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.SIPDigitMap.
 *
 * MDMOID_OAMSIP_DGT_MP 416
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    char *    SIPDigitalMap;	/**< SIPDigitalMap */
#endif
} OAMSIPDgtMpObject;

/*! \brief _OAMSIPDgtMpObject is used internally to represent OAMSIPDgtMpObject */
typedef OAMSIPDgtMpObject _OAMSIPDgtMpObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.
 *
 * MDMOID_SW_MODULES 417
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    execEnvNumberOfEntries;	/**< ExecEnvNumberOfEntries */
    UINT32    deploymentUnitNumberOfEntries;	/**< DeploymentUnitNumberOfEntries */
    UINT32    executionUnitNumberOfEntries;	/**< ExecutionUnitNumberOfEntries */
} SwModulesObject;

/*! \brief _SwModulesObject is used internally to represent SwModulesObject */
typedef SwModulesObject _SwModulesObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.ExecutionUnit.{i}.
 *
 * MDMOID_EU 418
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    EUID;	/**< EUID */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    char *    execEnvLabel;	/**< ExecEnvLabel */
    char *    status;	/**< Status */
    char *    requestedState;	/**< RequestedState */
    char *    executionFaultCode;	/**< ExecutionFaultCode */
    char *    executionFaultMessage;	/**< ExecutionFaultMessage */
    UBOOL8    autoStart;	/**< AutoStart */
    UINT32    runLevel;	/**< RunLevel */
    char *    vendor;	/**< Vendor */
    char *    version;	/**< Version */
    char *    description;	/**< Description */
    SINT32    diskSpaceInUse;	/**< DiskSpaceInUse */
    SINT32    memoryInUse;	/**< MemoryInUse */
    char *    vendorLogList;	/**< VendorLogList */
    char *    vendorConfigList;	/**< VendorConfigList */
    char *    executionEnvRef;	/**< ExecutionEnvRef */
} EUObject;

/*! \brief _EUObject is used internally to represent EUObject */
typedef EUObject _EUObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.ExecutionUnit.{i}.Extensions.
 *
 * MDMOID_EXTENSIONS 419
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} ExtensionsObject;

/*! \brief _ExtensionsObject is used internally to represent ExtensionsObject */
typedef ExtensionsObject _ExtensionsObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.ExecEnv.{i}.
 *
 * MDMOID_EXEC_ENV 420
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UBOOL8    reset;	/**< Reset */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    char *    type;	/**< Type */
    UINT32    initialRunLevel;	/**< InitialRunLevel */
    SINT32    requestedRunLevel;	/**< RequestedRunLevel */
    SINT32    currentRunLevel;	/**< CurrentRunLevel */
    char *    vendor;	/**< Vendor */
    char *    version;	/**< Version */
    char *    parentExecEnv;	/**< ParentExecEnv */
    SINT32    allocatedDiskSpace;	/**< AllocatedDiskSpace */
    SINT32    availableDiskSpace;	/**< AvailableDiskSpace */
    SINT32    allocatedMemory;	/**< AllocatedMemory */
    SINT32    availableMemory;	/**< AvailableMemory */
    char *    associatedExecutionUnits;	/**< AssociatedExecutionUnits */
    char *    activeExecutionUnits;	/**< ActiveExecutionUnits */
} ExecEnvObject;

/*! \brief _ExecEnvObject is used internally to represent ExecEnvObject */
typedef ExecEnvObject _ExecEnvObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.DeploymentUnit.{i}.
 *
 * MDMOID_DU 421
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    UUID;	/**< UUID */
    char *    DUID;	/**< DUID */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    char *    status;	/**< Status */
    UBOOL8    resolved;	/**< Resolved */
    char *    URL;	/**< URL */
    char *    description;	/**< Description */
    char *    vendor;	/**< Vendor */
    char *    version;	/**< Version */
    char *    vendorLogList;	/**< VendorLogList */
    char *    vendorConfigList;	/**< VendorConfigList */
    char *    executionUnitList;	/**< ExecutionUnitList */
    char *    executionEnvref;	/**< ExecutionEnvref */
    char *    faultMessage;	/**< FaultMessage */
    DATETIME  X_404A03_startTime;	/**< X_404A03_startTime */
    DATETIME  X_404A03_completeTime;	/**< X_404A03_completeTime */
} DUObject;

/*! \brief _DUObject is used internally to represent DUObject */
typedef DUObject _DUObject;



/*! \brief Obj struct for InternetGatewayDevice.X_404A03_WebActivityLog.
 *
 * MDMOID_WEB_ACTIVITY_LOG 422
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
} WebActivityLogObject;

/*! \brief _WebActivityLogObject is used internally to represent WebActivityLogObject */
typedef WebActivityLogObject _WebActivityLogObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.
 *
 * MDMOID_DEVICE 423
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} DeviceObject;

/*! \brief _DeviceObject is used internally to represent DeviceObject */
typedef DeviceObject _DeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Optical.
 *
 * MDMOID_DEVICE_OPTICAL 424
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
} DeviceOpticalObject;

/*! \brief _DeviceOpticalObject is used internally to represent DeviceOpticalObject */
typedef DeviceOpticalObject _DeviceOpticalObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Optical.Interface.{i}.
 *
 * MDMOID_OPTICAL_INTERFACE 425
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    name;	/**< Name */
    SINT32    opticalSignalLevel;	/**< OpticalSignalLevel */
    SINT32    transmitOpticalLevel;	/**< TransmitOpticalLevel */
} OpticalInterfaceObject;

/*! \brief _OpticalInterfaceObject is used internally to represent OpticalInterfaceObject */
typedef OpticalInterfaceObject _OpticalInterfaceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Optical.Interface.{i}.Stats.
 *
 * MDMOID_OPTICAL_INTERFACE_STATS 426
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
} OpticalInterfaceStatsObject;

/*! \brief _OpticalInterfaceStatsObject is used internally to represent OpticalInterfaceStatsObject */
typedef OpticalInterfaceStatsObject _OpticalInterfaceStatsObject;





#endif /* __MDM_OBJECT_H__ */
